{"version":3,"sources":["components/ComboBox/examples/ComboBox.CustomStyled.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,gEAG6C;AAC7C,yCAAuC;AAOvC;IAAiD,uDAAyB;IAyCxE;QAAA,YACE,iBAAO,SACR;QAzCO,mCAA6B,GACrC,CAAC;gBACC,GAAG,EAAE,GAAG;gBACR,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE;oBACN,UAAU,EAAE;wBACV,UAAU,EAAE,wDAAwD;qBACrE;iBACF;aACF;YACD;gBACE,GAAG,EAAE,GAAG;gBACR,IAAI,EAAE,iBAAiB;gBACvB,MAAM,EAAE;oBACN,UAAU,EAAE;wBACV,UAAU,EAAE,2DAA2D;qBACxE;iBACF;aACF;YACD;gBACE,GAAG,EAAE,GAAG;gBACR,IAAI,EAAE,eAAe;gBACrB,MAAM,EAAE;oBACN,UAAU,EAAE;wBACV,UAAU,EAAE,yDAAyD;qBACtE;iBACF;aACF;YACD;gBACE,GAAG,EAAE,GAAG;gBACR,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE;oBACN,UAAU,EAAE;wBACV,UAAU,EAAE,4CAA4C;qBACzD;iBACF;aACF;SACA,CAAC;;IAIF,CAAC;IAEM,4CAAM,GAAb;QACE,MAAM,CAAC,CACL,6BAAK,SAAS,EAAC,gCAAgC;YAC7C,oBAAC,mBAAQ,IACP,kBAAkB,EAAC,GAAG,EACtB,KAAK,EAAC,0EAA0E,EAChF,EAAE,EAAC,YAAY,EACf,SAAS,EAAC,gCAAgC,EAC1C,aAAa,EAAG,IAAI,EACpB,YAAY,EAAC,IAAI,EACjB,OAAO,EAAG,IAAI,CAAC,6BAA6B,EAC5C,MAAM,EACJ;oBACE,SAAS,EAAE;wBACT,QAAQ,EAAE,OAAO;qBAClB;iBACF,EAEH,oBAAoB,EAClB;oBACE,UAAU,EAAE;wBACV,UAAU,EAAE,SAAS;qBACtB;iBACF,GAEH,CAEE,CACP,CAAC;IACJ,CAAC;IACH,kCAAC;AAAD,CA3EA,AA2EC,CA3EgD,KAAK,CAAC,SAAS,GA2E/D;AA3EY,kEAA2B","file":"components/ComboBox/examples/ComboBox.CustomStyled.Example.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ComboBox,\r\n  IComboBoxOption\r\n} from 'office-ui-fabric-react/lib/ComboBox';\r\nimport './ComboBox.Basic.Example.scss';\r\nimport {\r\n  assign,\r\n  autobind\r\n} from 'office-ui-fabric-react/lib/Utilities';\r\nimport { SelectableOptionMenuItemType } from 'office-ui-fabric-react/lib/utilities/selectableOption/SelectableOption.Props';\r\n\r\nexport class ComboBoxCustomStyledExample extends React.Component<any, any> {\r\n\r\n  private _testOptionsWithCustomStyling =\r\n  [{\r\n    key: 'A',\r\n    text: 'Arial Black',\r\n    styles: {\r\n      optionText: {\r\n        fontFamily: '\"Arial Black\", \"Arial Black_MSFontService\", sans-serif',\r\n      }\r\n    }\r\n  },\r\n  {\r\n    key: 'B',\r\n    text: 'Times New Roman',\r\n    styles: {\r\n      optionText: {\r\n        fontFamily: '\"Times New Roman\", \"Times New Roman_MSFontService\", serif',\r\n      }\r\n    }\r\n  },\r\n  {\r\n    key: 'C',\r\n    text: 'Comic Sans MS',\r\n    styles: {\r\n      optionText: {\r\n        fontFamily: '\"Comic Sans MS\", \"Comic Sans MS_MSFontService\", fantasy',\r\n      }\r\n    }\r\n  },\r\n  {\r\n    key: 'D',\r\n    text: 'Calibri',\r\n    styles: {\r\n      optionText: {\r\n        fontFamily: 'Calibri, Calibri_MSFontService, sans-serif',\r\n      }\r\n    }\r\n  },\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className='ms-ComboBoxCustomStyledExample'>\r\n        <ComboBox\r\n          defaultSelectedKey='C'\r\n          label='Custom styled uncontrolled ComboBox (allowFreeform: T, AutoComplete: T):'\r\n          id='Basicdrop6'\r\n          ariaLabel='Custom styled ComboBox example'\r\n          allowFreeform={ true }\r\n          autoComplete='on'\r\n          options={ this._testOptionsWithCustomStyling }\r\n          styles={\r\n            {\r\n              container: {\r\n                maxWidth: '300px'\r\n              },\r\n            }\r\n          }\r\n          comboBoxOptionStyles={\r\n            {\r\n              optionText: {\r\n                fontFamily: 'initial', // this should be overriden by custom styles for each option\r\n              },\r\n            }\r\n          }\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}
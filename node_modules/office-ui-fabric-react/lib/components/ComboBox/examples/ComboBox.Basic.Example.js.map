{"version":3,"sources":["components/ComboBox/examples/ComboBox.Basic.Example.tsx"],"names":[],"mappings":"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","file":"components/ComboBox/examples/ComboBox.Basic.Example.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ComboBox,\r\n  IComboBoxOption\r\n} from 'office-ui-fabric-react/lib/ComboBox';\r\nimport './ComboBox.Basic.Example.scss';\r\nimport {\r\n  assign,\r\n  autobind\r\n} from 'office-ui-fabric-react/lib/Utilities';\r\nimport { SelectableOptionMenuItemType } from 'office-ui-fabric-react/lib/utilities/selectableOption/SelectableOption.Props';\r\n\r\nexport class ComboBoxBasicExample extends React.Component<any, any> {\r\n  private _testOptions =\r\n  [{ key: 'Header', text: 'Theme Fonts', itemType: SelectableOptionMenuItemType.Header },\r\n  { key: 'A', text: 'Arial Black' },\r\n  { key: 'B', text: 'Times New Roman' },\r\n  { key: 'C', text: 'Comic Sans MS' },\r\n  { key: 'divider_2', text: '-', itemType: SelectableOptionMenuItemType.Divider },\r\n  { key: 'Header1', text: 'Other Options', itemType: SelectableOptionMenuItemType.Header },\r\n  { key: 'D', text: 'Option d' },\r\n  { key: 'E', text: 'Option e' },\r\n  { key: 'F', text: 'Option f' },\r\n  { key: 'G', text: 'Option g' },\r\n  { key: 'H', text: 'Option h' },\r\n  { key: 'I', text: 'Option i' },\r\n  { key: 'J', text: 'Option j' },\r\n  ];\r\n\r\n  private _fontMapping: { [key: string]: string } = {\r\n    ['Arial Black']: '\"Arial Black\", \"Arial Black_MSFontService\", sans-serif',\r\n    ['Time New Roman']: '\"Times New Roman\", \"Times New Roman_MSFontService\", serif',\r\n    ['Comic Sans MS']: '\"Comic Sans MS\", \"Comic Sans MS_MSFontService\", fantasy',\r\n    ['Calibri']: 'Calibri, Calibri_MSFontService, sans-serif'\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      options: [],\r\n      selectedOptionKey: null,\r\n      value: 'Calibri'\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { options, selectedOptionKey, value } = this.state;\r\n\r\n    return (\r\n      <div className='ms-ComboBoxBasicExample'>\r\n\r\n        <ComboBox\r\n          defaultSelectedKey='C'\r\n          label='Basic uncontrolled example (allowFreeform: T, AutoComplete: T):'\r\n          id='Basicdrop1'\r\n          ariaLabel='Basic ComboBox example'\r\n          allowFreeform={ true }\r\n          autoComplete='on'\r\n          options={ this._testOptions }\r\n          onRenderOption={ this._onRenderFontOption }\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n        />\r\n\r\n        <ComboBox\r\n          defaultSelectedKey='C'\r\n          label='Basic uncontrolled example (allowFreeform: T, AutoComplete: F):'\r\n          id='Basicdrop2'\r\n          ariaLabel='Basic ComboBox example'\r\n          allowFreeform={ true }\r\n          autoComplete='off'\r\n          options={ this._testOptions }\r\n          onRenderOption={ this._onRenderFontOption }\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n        />\r\n\r\n        <ComboBox\r\n          selectedKey='C'\r\n          label='Basic uncontrolled example (allowFreeform: F, AutoComplete: T):'\r\n          id='Basicdrop3'\r\n          ariaLabel='Basic ComboBox example'\r\n          allowFreeform={ false }\r\n          autoComplete='on'\r\n          options={ this._testOptions }\r\n          onRenderOption={ this._onRenderFontOption }\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n        />\r\n\r\n        <ComboBox\r\n          defaultSelectedKey='C'\r\n          label='Basic uncontrolled example (allowFreeform: F, AutoComplete: F):'\r\n          id='Basicdrop4'\r\n          ariaLabel='Basic ComboBox example'\r\n          allowFreeform={ false }\r\n          autoComplete='off'\r\n          options={ this._testOptions }\r\n          onRenderOption={ this._onRenderFontOption }\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n        />\r\n\r\n        <ComboBox\r\n          label='Basic uncontrolled example:'\r\n          id='Basicdrop5'\r\n          ariaLabel='Basic ComboBox example'\r\n          errorMessage='Error! Here is some text!'\r\n          options={ this._testOptions }\r\n          onRenderOption={ this._onRenderFontOption }\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n        />\r\n\r\n        <ComboBox\r\n          label='Disabled uncontrolled example with defaultSelectedKey:'\r\n          defaultSelectedKey='D'\r\n          options={\r\n            [\r\n              { key: 'A', text: 'Option a' },\r\n              { key: 'B', text: 'Option b' },\r\n              { key: 'C', text: 'Option c' },\r\n              { key: 'D', text: 'Option d' },\r\n              { key: 'E', text: 'Option e' },\r\n              { key: 'F', text: 'Option f' },\r\n              { key: 'G', text: 'Option g' },\r\n            ]\r\n          }\r\n          disabled={ true }\r\n          onFocus={ () => console.log('onFocus called') }\r\n          onBlur={ () => console.log('onBlur called') }\r\n        />\r\n\r\n        { value ?\r\n          <ComboBox\r\n            label='Basic controlled example:'\r\n            id='Basicdrop5'\r\n            ariaLabel='Basic ComboBox example'\r\n            allowFreeform={ true }\r\n            autoComplete='on'\r\n            options={ options }\r\n            onChanged={ this._onChanged }\r\n            onResolveOptions={ this._getOptions }\r\n            value={ value && value }\r\n            onRenderOption={ this._onRenderFontOption }\r\n            onFocus={ () => console.log('onFocus called') }\r\n            onBlur={ () => console.log('onBlur called') }\r\n          />\r\n          :\r\n          <ComboBox\r\n            selectedKey={ selectedOptionKey && selectedOptionKey }\r\n            label='Basic controlled example:'\r\n            id='Basicdrop5'\r\n            ariaLabel='Basic ComboBox example'\r\n            allowFreeform={ true }\r\n            autoComplete='on'\r\n            options={ options }\r\n            onChanged={ this._onChanged }\r\n            onResolveOptions={ this._getOptions }\r\n            onRenderOption={ this._onRenderFontOption }\r\n            onFocus={ () => console.log('onFocus called') }\r\n            onBlur={ () => console.log('onBlur called') }\r\n          />\r\n        }\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n  // Render content of item\r\n  @autobind\r\n  private _onRenderFontOption(item: IComboBoxOption): JSX.Element {\r\n\r\n    if (item.itemType === SelectableOptionMenuItemType.Header ||\r\n      item.itemType === SelectableOptionMenuItemType.Divider) {\r\n      return <span className={ 'ms-ComboBox-optionText' }>{ item.text }</span>;\r\n    }\r\n\r\n    let fontFamily = this._fontMapping[item.text];\r\n\r\n    if (fontFamily === null || fontFamily === undefined) {\r\n      let newFontFamily: string = item.text;\r\n      if (newFontFamily.indexOf(' ') > -1) {\r\n        newFontFamily = '\"' + newFontFamily + '\"';\r\n      }\r\n\r\n      // add a default fallback font\r\n      newFontFamily += ',\"Segoe UI\",Tahoma,Sans-Serif';\r\n\r\n      this._fontMapping = assign({}, this._fontMapping, { [fontFamily as string]: newFontFamily });\r\n      fontFamily = newFontFamily;\r\n    }\r\n\r\n    return <span className={ 'ms-ComboBox-optionText' } style={ { fontFamily: fontFamily && fontFamily } }>{ item.text }</span>;\r\n  }\r\n\r\n  @autobind\r\n  private _getOptions(currentOptions: IComboBoxOption[]): IComboBoxOption[] {\r\n\r\n    if (this.state.options.length > 0) {\r\n      return this.state.options;\r\n    }\r\n\r\n    let newOptions =\r\n      [\r\n        { key: 'Header', text: 'Theme Fonts', itemType: SelectableOptionMenuItemType.Header },\r\n        { key: 'A', text: 'Arial Black', fontFamily: '\"Arial Black\", \"Arial Black_MSFontService\", sans-serif' },\r\n        { key: 'B', text: 'Time New Roman', fontFamily: '\"Times New Roman\", \"Times New Roman_MSFontService\", serif' },\r\n        { key: 'C', text: 'Comic Sans MS', fontFamily: '\"Comic Sans MS\", \"Comic Sans MS_MSFontService\", fantasy' },\r\n        { key: 'C1', text: 'Calibri', fontFamily: 'Calibri, Calibri_MSFontService, sans-serif' },\r\n        { key: 'divider_2', text: '-', itemType: SelectableOptionMenuItemType.Divider },\r\n        { key: 'Header1', text: 'Other Options', itemType: SelectableOptionMenuItemType.Header },\r\n        { key: 'D', text: 'Option d' },\r\n        { key: 'E', text: 'Option e' },\r\n        { key: 'F', text: 'Option f' },\r\n        { key: 'G', text: 'Option g' },\r\n        { key: 'H', text: 'Option h' },\r\n        { key: 'I', text: 'Option i' },\r\n        { key: 'J', text: 'Option j' }\r\n      ];\r\n    this.setState({\r\n      options: newOptions,\r\n      selectedOptionKey: 'C1',\r\n      value: null\r\n    });\r\n\r\n    return newOptions;\r\n  }\r\n\r\n  @autobind\r\n  private _onChanged(option: IComboBoxOption, index: number, value: string) {\r\n    if (option !== undefined) {\r\n      this.setState({\r\n        selectedOptionKey: option.key,\r\n        value: null\r\n      });\r\n    } else if (index !== undefined && index >= 0 && index < this.state.options.length) {\r\n      this.setState({\r\n        selectedOptionKey: this.state.options[index].key,\r\n        value: null\r\n      });\r\n    } else if (value !== undefined) {\r\n      let newOption: IComboBoxOption = { key: value, text: value };\r\n\r\n      this.setState({\r\n        options: [...this.state.options, newOption],\r\n        selectedOptionKey: newOption.key,\r\n        value: null\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}
{"version":3,"sources":["components/Panel/Panel.tsx"],"names":[],"mappings":"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","file":"components/Panel/Panel.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\n\r\nimport {\r\n  BaseComponent,\r\n  autobind,\r\n  css,\r\n  getId,\r\n  getRTL\r\n} from '../../Utilities';\r\nimport { FocusTrapZone } from '../FocusTrapZone/index';\r\nimport { IPanel, IPanelProps, PanelType } from './Panel.Props';\r\nimport { Layer } from '../Layer/Layer';\r\nimport { Overlay } from '../../Overlay';\r\nimport { Popup } from '../../Popup';\r\nimport { IconButton } from '../../Button';\r\nimport { AnimationClassNames } from '../../Styling';\r\nimport * as stylesImport from './Panel.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IPanelState {\r\n  isFooterSticky?: boolean;\r\n  isOpen?: boolean;\r\n  isAnimating?: boolean;\r\n  id?: string;\r\n}\r\n\r\nexport class Panel extends BaseComponent<IPanelProps, IPanelState> implements IPanel {\r\n\r\n  public static defaultProps: IPanelProps = {\r\n    isOpen: false,\r\n    isBlocking: true,\r\n    hasCloseButton: true,\r\n    type: PanelType.smallFixedFar,\r\n  };\r\n\r\n  private _content: HTMLElement;\r\n\r\n  constructor(props: IPanelProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isFooterSticky: false,\r\n      isOpen: false,\r\n      isAnimating: false,\r\n      id: getId('Panel')\r\n    };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this._events.on(window, 'resize', this._updateFooterPosition);\r\n\r\n    if (this.props.isOpen) {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IPanelProps) {\r\n    if (newProps.isOpen !== this.state.isOpen) {\r\n      if (newProps.isOpen) {\r\n        this.open();\r\n      } else {\r\n        this.dismiss();\r\n      }\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let {\r\n      children,\r\n      className = '',\r\n      closeButtonAriaLabel,\r\n      elementToFocusOnDismiss,\r\n      firstFocusableSelector,\r\n      forceFocusInsideTrap,\r\n      hasCloseButton,\r\n      headerText,\r\n      ignoreExternalFocusing,\r\n      isBlocking,\r\n      isLightDismiss,\r\n      layerProps,\r\n      type,\r\n      customWidth,\r\n      headerClassName,\r\n      onRenderNavigation = this._onRenderNavigation,\r\n      onRenderHeader = this._onRenderHeader,\r\n      onRenderBody = this._onRenderBody,\r\n      onRenderFooter = this._onRenderFooter\r\n    } = this.props;\r\n    let { isOpen, isAnimating, id, isFooterSticky } = this.state;\r\n    let isLeft = type === PanelType.smallFixedNear ? true : false;\r\n    let isRTL = getRTL();\r\n    let isOnRightSide = isRTL ? isLeft : !isLeft;\r\n    const headerTextId = id + '-headerText';\r\n    const customWidthStyles = (type === PanelType.custom) ? { width: customWidth } : {};\r\n    const renderProps: IPanelProps = { ...this.props, componentId: id };\r\n\r\n    if (!isOpen && !isAnimating) {\r\n      return null;\r\n    }\r\n\r\n    let overlay;\r\n    if (isBlocking) {\r\n      overlay = (\r\n        <Overlay\r\n          className={ css(\r\n            styles.overlay,\r\n            isOpen && isAnimating && AnimationClassNames.fadeIn200,\r\n            !isOpen && isAnimating && AnimationClassNames.fadeOut200\r\n          ) }\r\n          isDarkThemed={ false }\r\n          onClick={ isLightDismiss ? this._onPanelClick : undefined }\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Layer { ...layerProps }>\r\n        <Popup\r\n          role='dialog'\r\n          ariaLabelledBy={ headerText && headerTextId }\r\n          onDismiss={ this.dismiss }>\r\n          <div\r\n            className={\r\n              css(\r\n                'ms-Panel',\r\n                styles.root,\r\n                className,\r\n                // because the RTL animations are not being used, we need to set a class\r\n                isOpen && ('is-open ' + styles.rootIsOpen),\r\n                type === PanelType.smallFluid && ('ms-Panel--smFluid ' + styles.rootIsSmallFluid),\r\n                type === PanelType.smallFixedNear && ('ms-Panel--smLeft ' + styles.rootIsSmallLeft),\r\n                type === PanelType.smallFixedFar && ('ms-Panel--sm ' + styles.rootIsSmall),\r\n                type === PanelType.medium && ('ms-Panel--md ' + styles.rootIsMedium),\r\n                (type === PanelType.large || type === PanelType.largeFixed) && ('ms-Panel--lg ' + styles.rootIsLarge),\r\n                type === PanelType.largeFixed && ('ms-Panel--fixed ' + styles.rootIsFixed),\r\n                type === PanelType.extraLarge && ('ms-Panel--xl ' + styles.rootIsXLarge),\r\n                type === PanelType.custom && ('ms-Panel--custom ' + styles.rootIsCustom),\r\n                hasCloseButton && ('ms-Panel--hasCloseButton ' + styles.rootHasCloseButton)\r\n              )\r\n            }\r\n          >\r\n            { overlay }\r\n            <FocusTrapZone\r\n              className={\r\n                css(\r\n                  'ms-Panel-main',\r\n                  styles.main,\r\n                  isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40,\r\n                  isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40,\r\n                  !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40,\r\n                  !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40,\r\n                ) }\r\n              style={ customWidthStyles }\r\n              elementToFocusOnDismiss={ elementToFocusOnDismiss }\r\n              isClickableOutsideFocusTrap={ isLightDismiss }\r\n              ignoreExternalFocusing={ ignoreExternalFocusing }\r\n              forceFocusInsideTrap={ forceFocusInsideTrap }\r\n              firstFocusableSelector={ firstFocusableSelector }\r\n            >\r\n              <div className={ css('ms-Panel-commands') } data-is-visible={ true } >\r\n                { onRenderNavigation(renderProps, this._onRenderNavigation) }\r\n              </div>\r\n              <div className={ css('ms-Panel-contentInner', styles.contentInner) } >\r\n                { onRenderHeader(renderProps, this._onRenderHeader) }\r\n                { onRenderBody(renderProps, this._onRenderBody) }\r\n                { onRenderFooter(renderProps, this._onRenderFooter) }\r\n              </div>\r\n            </FocusTrapZone>\r\n          </div>\r\n        </Popup>\r\n      </Layer>\r\n    );\r\n  }\r\n\r\n  public open() {\r\n    if (!this.state.isOpen) {\r\n      this.setState({\r\n        isOpen: true,\r\n        isAnimating: true\r\n      }, () => {\r\n        this._async.setTimeout(this._onTransitionComplete, 200);\r\n      });\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  public dismiss() {\r\n    if (this.state.isOpen) {\r\n      this.setState({\r\n        isOpen: false,\r\n        isAnimating: true\r\n      }, () => {\r\n        this._async.setTimeout(this._onTransitionComplete, 200);\r\n      });\r\n\r\n      if (this.props.onDismiss) {\r\n        this.props.onDismiss();\r\n      }\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderNavigation(props: IPanelProps): JSX.Element | null {\r\n    const {\r\n      closeButtonAriaLabel,\r\n      hasCloseButton\r\n    } = props;\r\n    if (hasCloseButton) {\r\n      return (\r\n        <IconButton\r\n          className={ css('ms-Panel-closeButton ms-PanelAction-close', styles.closeButton) }\r\n          onClick={ this._onPanelClick }\r\n          ariaLabel={ closeButtonAriaLabel }\r\n          data-is-visible={ true }\r\n          iconProps={ { iconName: 'Cancel' } }\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderHeader(props: IPanelProps): JSX.Element | null {\r\n    const {\r\n      headerText,\r\n      componentId,\r\n      headerClassName = '',\r\n    } = props;\r\n\r\n    const { id } = this.state;\r\n    if (headerText) {\r\n      return (\r\n        <div className={ css('ms-Panel-header', styles.header) }>\r\n          <p className={ css('ms-Panel-headerText', styles.headerText, headerClassName) } id={ componentId + '-headerText' } role='heading'>\r\n            { headerText }\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderBody(props: IPanelProps): JSX.Element {\r\n    const contentClass = css( \r\n      'ms-Panel-content', \r\n      styles.content, \r\n      props.isFooterAtBottom && styles.contentGrow \r\n    );\r\n    \r\n    return (\r\n      <div ref={ this._resolveRef('_content') } className={ contentClass } >\r\n        { props.children }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderFooter(props: IPanelProps): JSX.Element | null {\r\n    let { isFooterSticky } = this.state;\r\n    let { onRenderFooterContent = null } = this.props;\r\n    if (onRenderFooterContent != null) {\r\n      return (\r\n        <div className={ css('ms-Panel-footer', styles.footer, isFooterSticky && styles.footerIsSticky) } >\r\n          <div className={ css('ms-Panel-footerInner', styles.footerInner) }>\r\n            { onRenderFooterContent() }\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private _updateFooterPosition() {\r\n    let _content = this._content;\r\n    if (_content) {\r\n      let height = _content.clientHeight;\r\n      let innerHeight = _content.scrollHeight;\r\n\r\n      this.setState({\r\n        isFooterSticky: height < innerHeight ? true : false\r\n      });\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onPanelClick() {\r\n    this.dismiss();\r\n  }\r\n\r\n  @autobind\r\n  private _onTransitionComplete() {\r\n    this.setState({\r\n      isAnimating: false\r\n    });\r\n\r\n    if (!this.state.isOpen && this.props.onDismissed) {\r\n      this.props.onDismissed();\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}
{"version":3,"sources":["components/ActivityItem/ActivityItem.styles.ts"],"names":[],"mappings":";;AAAA,yCAIuB;AACvB,6CAEyB;AAGzB,IAAM,oBAAoB,GAAG,MAAM,CAAC;AACpC,IAAM,oBAAoB,GAAG,MAAM,CAAC;AACpC,IAAM,iBAAiB,GAAG,MAAM,CAAC;AACjC,IAAM,iBAAiB,GAAG,MAAM,CAAC;AAEpB,QAAA,SAAS,GAAG,2BAAe,CAAC,UACvC,KAA0B,EAC1B,YAAyD;IADzD,sBAAA,EAAA,QAAgB,kBAAQ,EAAE;IAC1B,6BAAA,EAAA,wBAAyD;IAEzD,IAAI,kBAAkB,GAAG;QAEvB,IAAI,EAAE;YACJ,KAAK,CAAC,KAAK,CAAC,KAAK;YACjB;gBACE,OAAO,EAAE,MAAM;gBACf,cAAc,EAAE,YAAY;gBAC5B,UAAU,EAAE,YAAY;gBACxB,UAAU,EAAE,MAAM;gBAClB,SAAS,EAAE,YAAY;gBACvB,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,gBAAgB;aACtC;SACF;QAED,aAAa,EAAE;YACb,UAAU,EAAE,QAAQ;SACrB;QAED,gBAAgB,EAAE;YAChB,OAAO,EAAE,MAAM;YACf,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,oBAAoB;YAC9B,KAAK,EAAE,oBAAoB;YAC3B,MAAM,EAAE,oBAAoB;SAC7B;QAED,yBAAyB,EAAE;YACzB,OAAO,EAAE,aAAa;YACtB,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,MAAM;YACjB,MAAM,EAAE,oBAAoB;YAC5B,KAAK,EAAE,MAAM;YACb,QAAQ,EAAE,GAAG;YACb,YAAY,EAAE,KAAK;SACpB;QAED,gBAAgB,EAAE;YAChB,MAAM,EAAE,oBAAoB;YAC5B,QAAQ,EAAE,iBAAiB;YAC3B,UAAU,EAAE,iBAAiB;SAC9B;QAED,aAAa,EAAE;YACb,MAAM,EAAE,oBAAoB;YAC5B,QAAQ,EAAE,iBAAiB;YAC3B,UAAU,EAAE,iBAAiB;YAC7B,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,YAAY;SAClC;QAED,eAAe,EAAE;YACf,OAAO,EAAE,OAAO;SACjB;QAED,aAAa,EAAE;YACb,eAAe,EAAE;gBACf,SAAS,EAAE,UAAU;aACtB;SACF;QAED,gBAAgB,EAAE;YAChB,OAAO,EAAE,cAAc;YACvB,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,SAAS;SACpB;QAED,eAAe,EAAE;YACf,OAAO,EAAE,OAAO;SACjB;QAED,YAAY,EAAE;YACZ,OAAO,EAAE,QAAQ;SAClB;QAED,gBAAgB,EAAE;YAChB,IAAI,EAAE,GAAG;YACT,OAAO,EAAE,OAAO;YAChB,UAAU,EAAE,QAAQ;YACpB,YAAY,EAAE,UAAU;YACxB,SAAS,EAAE,QAAQ;SACpB;QAED,WAAW,EAAE;YACX,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;SACpC;QAED,SAAS,EAAE;YACT,KAAK,CAAC,KAAK,CAAC,IAAI;YAChB;gBACE,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,gBAAgB;aACtC;SACF;KACF,CAAC;IAEF,MAAM,CAAC,wBAAc,CAAC,kBAAkB,EAAE,YAAY,CAAE,CAAC;AAC3D,CAAC,CAAC,CAAC","file":"components/ActivityItem/ActivityItem.styles.js","sourcesContent":["import {\r\n  mergeStyleSets,\r\n  ITheme,\r\n  getTheme\r\n} from '../../Styling';\r\nimport {\r\n  memoizeFunction\r\n} from '../../Utilities';\r\nimport { IActivityItemStyles } from './ActivityItem.Props';\r\n\r\nconst DEFAULT_PERSONA_SIZE = '32px';\r\nconst COMPACT_PERSONA_SIZE = '16px';\r\nconst DEFAULT_ICON_SIZE = '24px';\r\nconst COMPACT_ICON_SIZE = '13px';\r\n\r\nexport const getStyles = memoizeFunction((\r\n  theme: ITheme = getTheme(),\r\n  customStyles: IActivityItemStyles | undefined = undefined\r\n): IActivityItemStyles => {\r\n  let ActivityItemStyles = {\r\n\r\n    root: [\r\n      theme.fonts.small,\r\n      {\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start',\r\n        lineHeight: '17px',\r\n        boxSizing: 'border-box',\r\n        color: theme.palette.neutralSecondary\r\n      }\r\n    ],\r\n\r\n    isCompactRoot: {\r\n      alignItems: 'center'\r\n    },\r\n\r\n    personaContainer: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      minWidth: DEFAULT_PERSONA_SIZE,\r\n      width: DEFAULT_PERSONA_SIZE,\r\n      height: DEFAULT_PERSONA_SIZE\r\n    },\r\n\r\n    isCompactPersonaContainer: {\r\n      display: 'inline-flex',\r\n      flexWrap: 'nowrap',\r\n      flexBasis: 'auto',\r\n      height: COMPACT_PERSONA_SIZE,\r\n      width: 'auto',\r\n      minWidth: '0',\r\n      paddingRight: '6px'\r\n    },\r\n\r\n    activityTypeIcon: {\r\n      height: DEFAULT_PERSONA_SIZE,\r\n      fontSize: DEFAULT_ICON_SIZE,\r\n      lineHeight: DEFAULT_ICON_SIZE,\r\n    },\r\n\r\n    isCompactIcon: {\r\n      height: COMPACT_PERSONA_SIZE,\r\n      fontSize: COMPACT_ICON_SIZE,\r\n      lineHeight: COMPACT_ICON_SIZE,\r\n      color: theme.palette.themePrimary\r\n    },\r\n\r\n    activityPersona: {\r\n      display: 'block'\r\n    },\r\n\r\n    doublePersona: {\r\n      '&:first-child': {\r\n        alignSelf: 'flex-end'\r\n      }\r\n    },\r\n\r\n    isCompactPersona: {\r\n      display: 'inline-block',\r\n      width: '8px',\r\n      minWidth: '8px',\r\n      overflow: 'visible'\r\n    },\r\n\r\n    activityContent: {\r\n      padding: '0 8px'\r\n    },\r\n\r\n    activityText: {\r\n      display: 'inline'\r\n    },\r\n\r\n    isCompactContent: {\r\n      flex: '1',\r\n      padding: '0 4px',\r\n      whiteSpace: 'nowrap',\r\n      textOverflow: 'ellipsis',\r\n      overflowX: 'hidden'\r\n    },\r\n\r\n    commentText: {\r\n      color: theme.palette.neutralPrimary\r\n    },\r\n\r\n    timeStamp: [\r\n      theme.fonts.tiny,\r\n      {\r\n        fontWeight: '400',\r\n        color: theme.palette.neutralSecondary\r\n      }\r\n    ]\r\n  };\r\n\r\n  return mergeStyleSets(ActivityItemStyles, customStyles)!;\r\n});\r\n"],"sourceRoot":"..\\..\\..\\src"}
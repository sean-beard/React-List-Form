{"version":3,"sources":["components/Checkbox/examples/Checkbox.Basic.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,gEAI6C;AAC7C,8DAG4C;AAK5C;IAA0C,gDAA+C;IACvF;QAAA,YACE,iBAAO,SAOR;QALC,KAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,KAAK;SACjB,CAAC;QAEF,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IAC7D,CAAC;IAEM,qCAAM,GAAb;QAAA,iBAgEC;QA/DO,IAAA,gCAAS,CAAgB;QAE/B,IAAI,MAAM,GAAoB;YAC5B,IAAI,EAAE;gBACJ,SAAS,EAAE,IAAI;aAChB;SACF,CAAC;QAEF,MAAM,CAAC,CACL;YACE,oBAAC,mBAAQ,IACP,KAAK,EAAC,uBAAuB,EAC7B,QAAQ,EAAG,IAAI,CAAC,iBAAiB,EACjC,UAAU,EAAG;oBACX,OAAO,EAAE,cAAQ,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,CAAC,CAAC;oBACnE,MAAM,EAAE,cAAQ,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC;iBAClE,EACD,MAAM,EAAG,MAAM,GACf;YAEF,oBAAC,mBAAQ,IACP,KAAK,EAAC,gDAAgD,EACtD,cAAc,EAAG,IAAI,EACrB,QAAQ,EAAG,IAAI,CAAC,iBAAiB,EACjC,MAAM,EAAG,MAAM,GACf;YAEF,oBAAC,mBAAQ,IACP,KAAK,EAAC,gCAAgC,EACtC,QAAQ,EAAG,IAAI,EACf,MAAM,EAAG,MAAM,GACf;YAEF,oBAAC,mBAAQ,IACP,KAAK,EAAC,yDAAyD,EAC/D,QAAQ,EAAG,IAAI,EACf,cAAc,EAAG,IAAI,EACrB,QAAQ,EAAG,IAAI,CAAC,iBAAiB,EACjC,MAAM,EAAG,MAAM,GACf;YAEF,oBAAC,mBAAQ,IACP,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAG,SAAS,EACnB,QAAQ,EAAG,UAAC,EAAE,EAAE,OAAO;oBACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAQ,EAAE,CAAC,CAAC;gBACzC,CAAC,EACD,MAAM,EAAG,MAAM,GACf;YAEF,oBAAC,mBAAQ,IACP,KAAK,EAAC,sCAAsC,EAC5C,OAAO,EAAC,KAAK,EACb,MAAM,EAAG,MAAM,GACf;YAEF,oBAAC,mBAAQ,IACP,KAAK,EAAC,kBAAkB,EACxB,MAAM,EAAG,MAAM,EACf,aAAa,EAAG,IAAI,CAAC,mBAAmB,GACxC,CACE,CACP,CAAC;IACJ,CAAC;IAEO,gDAAiB,GAAzB,UAA0B,EAAgC,EAAE,SAAkB;QAC5E,OAAO,CAAC,GAAG,CAAC,oCAAkC,SAAS,MAAG,CAAC,CAAC;IAC9D,CAAC;IAEO,kDAAmB,GAA3B,UAA4B,KAAqB;QAC/C,IAAM,iBAAiB,GAAG,iDAAiD,CAAC;QAC5E,MAAM,CAAC,oBAAC,iBAAO,IAAC,WAAW,EAAG,KAAK,CAAC,KAAK,EAAG,QAAQ,EAAG,iBAAiB,EAAG,IAAI,EAAG,qBAAW,CAAC,UAAU,GAAK,CAAC;IAChH,CAAC;IACH,2BAAC;AAAD,CArFA,AAqFC,CArFyC,KAAK,CAAC,SAAS,GAqFxD;AArFY,oDAAoB","file":"components/Checkbox/examples/Checkbox.Basic.Example.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Checkbox,\r\n  ICheckboxStyles,\r\n  ICheckboxProps\r\n} from 'office-ui-fabric-react/lib/Checkbox';\r\nimport {\r\n  Persona,\r\n  PersonaSize\r\n} from 'office-ui-fabric-react/lib/Persona';\r\nexport interface ICheckboxBasicExampleState {\r\n  isChecked: boolean;\r\n}\r\n\r\nexport class CheckboxBasicExample extends React.Component<{}, ICheckboxBasicExampleState> {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isChecked: false\r\n    };\r\n\r\n    this._onCheckboxChange = this._onCheckboxChange.bind(this);\r\n  }\r\n\r\n  public render() {\r\n    let { isChecked } = this.state;\r\n\r\n    let styles: ICheckboxStyles = {\r\n      root: {\r\n        marginTop: '10'\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Checkbox\r\n          label='Uncontrolled checkbox'\r\n          onChange={ this._onCheckboxChange }\r\n          inputProps={ {\r\n            onFocus: () => { console.log('Uncontrolled checkbox is focused'); },\r\n            onBlur: () => { console.log('Uncontrolled checkbox is blured'); }\r\n          } }\r\n          styles={ styles }\r\n        />\r\n\r\n        <Checkbox\r\n          label='Uncontrolled checkbox with defaultChecked true'\r\n          defaultChecked={ true }\r\n          onChange={ this._onCheckboxChange }\r\n          styles={ styles }\r\n        />\r\n\r\n        <Checkbox\r\n          label='Disabled uncontrolled checkbox'\r\n          disabled={ true }\r\n          styles={ styles }\r\n        />\r\n\r\n        <Checkbox\r\n          label='Disabled uncontrolled checkbox with defaultChecked true'\r\n          disabled={ true }\r\n          defaultChecked={ true }\r\n          onChange={ this._onCheckboxChange }\r\n          styles={ styles }\r\n        />\r\n\r\n        <Checkbox\r\n          label='Controlled checkbox'\r\n          checked={ isChecked }\r\n          onChange={ (ev, checked) => {\r\n            this.setState({ isChecked: checked! });\r\n          } }\r\n          styles={ styles }\r\n        />\r\n\r\n        <Checkbox\r\n          label='Checkbox rendered with boxSide \"end\"'\r\n          boxSide='end'\r\n          styles={ styles }\r\n        />\r\n\r\n        <Checkbox\r\n          label='Persona Checkbox'\r\n          styles={ styles }\r\n          onRenderLabel={ this._renderPersonaLabel }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onCheckboxChange(ev: React.FormEvent<HTMLElement>, isChecked: boolean) {\r\n    console.log(`The option has been changed to ${isChecked}.`);\r\n  }\r\n\r\n  private _renderPersonaLabel(props: ICheckboxProps) {\r\n    const DEFAULT_IMAGE_URL = '/_layouts/15/userphoto.aspx?size=S&accountname=';\r\n    return <Persona primaryText={ props.label } imageUrl={ DEFAULT_IMAGE_URL } size={ PersonaSize.extraSmall } />;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}
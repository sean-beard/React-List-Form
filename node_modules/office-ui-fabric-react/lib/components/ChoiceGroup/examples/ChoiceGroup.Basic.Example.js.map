{"version":3,"sources":["components/ChoiceGroup/examples/ChoiceGroup.Basic.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,sEAAyF;AACzF,kEAAgE;AAShE;IAA6C,mDAAmD;IAC9F;QAAA,YACE,iBAAO,SAKR;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,QAAQ,EAAE,EAAE;SACb,CAAC;;IACJ,CAAC;IAEM,wCAAM,GAAb;QACE,MAAM,CAAC,CACL;YACE,oBAAC,yBAAW,IACV,kBAAkB,EAAC,GAAG,EACtB,OAAO,EAAG;oBACR;wBACE,GAAG,EAAE,GAAG;wBACR,IAAI,EAAE,UAAU;wBAChB,oBAAoB,EAAE,OAAO;qBACR;oBACvB;wBACE,GAAG,EAAE,GAAG;wBACR,IAAI,EAAE,UAAU;qBACjB;oBACD;wBACE,GAAG,EAAE,GAAG;wBACR,IAAI,EAAE,UAAU;wBAChB,QAAQ,EAAE,IAAI;qBACf;oBACD;wBACE,GAAG,EAAE,GAAG;wBACR,IAAI,EAAE,UAAU;wBAChB,QAAQ,EAAE,IAAI;qBACf;iBACF,EACD,QAAQ,EAAG,IAAI,CAAC,SAAS,EACzB,KAAK,EAAC,UAAU,EAChB,QAAQ,EAAG,IAAI,GACf;YACF,oBAAC,yBAAW,IACV,kBAAkB,EAAC,GAAG,EACtB,OAAO,EAAG;oBACR;wBACE,GAAG,EAAE,GAAG;wBACR,IAAI,EAAE,UAAU;wBAChB,QAAQ,EAAE,IAAI;qBACf;oBACD;wBACE,GAAG,EAAE,GAAG;wBACR,IAAI,EAAE,UAAU;wBAChB,QAAQ,EAAE,IAAI;qBACf;iBACF,EACD,QAAQ,EAAG,IAAI,CAAC,SAAS,EACzB,KAAK,EAAC,UAAU,EAChB,QAAQ,EAAG,IAAI,GACf,CACE,CACP,CAAC;IACJ,CAAC;IAGO,2CAAS,GAAjB,UAAkB,EAAqC,EAAE,MAAW;QAClE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IAFD;QADC,oBAAQ;4DAGR;IACH,8BAAC;CAjED,AAiEC,CAjE4C,KAAK,CAAC,SAAS,GAiE3D;AAjEY,0DAAuB","file":"components/ChoiceGroup/examples/ChoiceGroup.Basic.Example.js","sourcesContent":["import * as React from 'react';\r\nimport { ChoiceGroup, IChoiceGroupOption } from 'office-ui-fabric-react/lib/ChoiceGroup';\r\nimport { autobind } from 'office-ui-fabric-react/lib/Utilities';\r\n\r\n/**\r\n * Interface for ChoiceGroupBasicExample state.\r\n */\r\nexport interface IChoiceGroupBasicExampleState {\r\n  imageKey: string;\r\n}\r\n\r\nexport class ChoiceGroupBasicExample extends React.Component<any, IChoiceGroupBasicExampleState> {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      imageKey: ''\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <ChoiceGroup\r\n          defaultSelectedKey='B'\r\n          options={ [\r\n            {\r\n              key: 'A',\r\n              text: 'Option A',\r\n              'data-automation-id': 'auto1'\r\n            } as IChoiceGroupOption,\r\n            {\r\n              key: 'B',\r\n              text: 'Option B',\r\n            },\r\n            {\r\n              key: 'C',\r\n              text: 'Option C',\r\n              disabled: true\r\n            },\r\n            {\r\n              key: 'D',\r\n              text: 'Option D',\r\n              disabled: true\r\n            }\r\n          ] }\r\n          onChange={ this._onChange }\r\n          label='Pick one'\r\n          required={ true }\r\n        />\r\n        <ChoiceGroup\r\n          defaultSelectedKey='A'\r\n          options={ [\r\n            {\r\n              key: 'A',\r\n              text: 'Option A',\r\n              disabled: true\r\n            },\r\n            {\r\n              key: 'B',\r\n              text: 'Option B',\r\n              disabled: true\r\n            }\r\n          ] }\r\n          onChange={ this._onChange }\r\n          label='Pick one'\r\n          required={ true }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onChange(ev: React.FormEvent<HTMLInputElement>, option: any) {\r\n    console.dir(option);\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}
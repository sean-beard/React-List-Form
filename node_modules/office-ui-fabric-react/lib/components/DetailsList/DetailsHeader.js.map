{"version":3,"sources":["components/DetailsList/DetailsHeader.tsx"],"names":[],"mappings":"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","file":"components/DetailsList/DetailsHeader.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport {\r\n  BaseComponent,\r\n  autobind,\r\n  css,\r\n  getRTL,\r\n  getId,\r\n  KeyCodes,\r\n  IRenderFunction\r\n} from '../../Utilities';\r\nimport { IColumn, DetailsListLayoutMode, ColumnActionsMode } from './DetailsList.Props';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { Icon } from '../../Icon';\r\nimport { Layer } from '../../Layer';\r\nimport { GroupSpacer } from '../GroupedList/GroupSpacer';\r\nimport { CollapseAllVisibility } from '../../GroupedList';\r\nimport { DetailsRowCheck } from './DetailsRowCheck';\r\nimport { ITooltipHostProps } from '../../Tooltip';\r\nimport * as checkStyles from './DetailsRowCheck.scss';\r\nimport { ISelection, SelectionMode, SELECTION_CHANGE } from '../../utilities/selection/interfaces';\r\nimport * as stylesImport from './DetailsHeader.scss';\r\nconst styles: any = stylesImport;\r\n\r\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\r\nconst MOUSEMOVE_PRIMARY_BUTTON = 1; // for mouse move event we are using ev.buttons property, 1 means left button\r\nconst INNER_PADDING = 16;\r\nconst ISPADDED_WIDTH = 24;\r\n\r\nexport interface IDetailsHeader {\r\n  focus(): boolean;\r\n}\r\n\r\nexport interface IDetailsHeaderProps extends React.Props<DetailsHeader> {\r\n  componentRef?: (component: IDetailsHeader) => void;\r\n  columns: IColumn[];\r\n  selection: ISelection;\r\n  selectionMode: SelectionMode;\r\n  layoutMode: DetailsListLayoutMode;\r\n  onColumnIsSizingChanged?: (column: IColumn, isSizing: boolean) => void;\r\n  onColumnResized?: (column: IColumn, newWidth: number) => void;\r\n  onColumnAutoResized?: (column: IColumn, columnIndex: number) => void;\r\n  onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column: IColumn) => void;\r\n  onColumnContextMenu?: (column: IColumn, ev: React.MouseEvent<HTMLElement>) => void;\r\n  onRenderColumnHeaderTooltip?: IRenderFunction<ITooltipHostProps>;\r\n  groupNestingDepth?: number;\r\n  collapseAllVisibility?: CollapseAllVisibility;\r\n  isAllCollapsed?: boolean;\r\n  onToggleCollapseAll?: (isAllCollapsed: boolean) => void;\r\n  /** ariaLabel for the entire header */\r\n  ariaLabel?: string;\r\n  /** ariaLabel for the header checkbox that selects or deselects everything */\r\n  ariaLabelForSelectAllCheckbox?: string;\r\n  ariaLabelForSelectionColumn?: string;\r\n  selectAllVisibility?: SelectAllVisibility;\r\n}\r\n\r\nexport enum SelectAllVisibility {\r\n  none = 0,\r\n  hidden = 1,\r\n  visible = 2\r\n}\r\n\r\nexport interface IDetailsHeaderState {\r\n  columnResizeDetails?: IColumnResizeDetails;\r\n  isAllSelected?: boolean;\r\n  isSizing?: boolean;\r\n  groupNestingDepth?: number;\r\n  isAllCollapsed?: boolean;\r\n}\r\n\r\nexport interface IColumnResizeDetails {\r\n  columnIndex: number;\r\n  originX?: number;\r\n  columnMinWidth: number;\r\n}\r\n\r\nexport class DetailsHeader extends BaseComponent<IDetailsHeaderProps, IDetailsHeaderState> implements IDetailsHeader {\r\n  public static defaultProps = {\r\n    selectAllVisibility: SelectAllVisibility.visible,\r\n    collapseAllVisibility: CollapseAllVisibility.visible\r\n  };\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    root: FocusZone;\r\n  };\r\n\r\n  private _id: string;\r\n\r\n  constructor(props: IDetailsHeaderProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      columnResizeDetails: undefined,\r\n      groupNestingDepth: this.props.groupNestingDepth,\r\n      isAllCollapsed: this.props.isAllCollapsed\r\n    };\r\n\r\n    this._onToggleCollapseAll = this._onToggleCollapseAll.bind(this);\r\n    this._onSelectAllClicked = this._onSelectAllClicked.bind(this);\r\n    this._id = getId('header');\r\n  }\r\n\r\n  public componentDidMount() {\r\n    let { selection } = this.props;\r\n\r\n    this._events.on(selection, SELECTION_CHANGE, this._onSelectionChanged);\r\n\r\n    const rootElement = ReactDOM.findDOMNode(this.refs.root);\r\n\r\n    // We need to use native on this to avoid MarqueeSelection from handling the event before us.\r\n    this._events.on(rootElement, 'mousedown', this._onRootMouseDown);\r\n\r\n    this._events.on(rootElement, 'keydown', this._onRootKeyDown);\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IDetailsHeaderProps) {\r\n    let { groupNestingDepth } = this.state;\r\n\r\n    if (newProps.groupNestingDepth !== groupNestingDepth) {\r\n      this.setState({ groupNestingDepth: newProps.groupNestingDepth });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let { columns, ariaLabel, ariaLabelForSelectAllCheckbox, selectAllVisibility, ariaLabelForSelectionColumn } = this.props;\r\n    let { isAllSelected, columnResizeDetails, isSizing, groupNestingDepth, isAllCollapsed } = this.state;\r\n\r\n    const showCheckbox = selectAllVisibility !== SelectAllVisibility.none;\r\n\r\n    const {\r\n      onRenderColumnHeaderTooltip = this._onRenderColumnHeaderTooltip\r\n    } = this.props;\r\n\r\n    return (\r\n      <FocusZone\r\n        role='row'\r\n        aria-label={ ariaLabel }\r\n        className={ css(\r\n          'ms-DetailsHeader',\r\n          styles.root,\r\n          isAllSelected && ('is-allSelected ' + styles.rootIsAllSelected),\r\n          (selectAllVisibility === SelectAllVisibility.hidden) && ('is-selectAllHidden ' + styles.rootIsSelectAllHidden),\r\n          (!!columnResizeDetails && isSizing) && 'is-resizingColumn'\r\n        ) }\r\n        ref='root'\r\n        onMouseMove={ this._onRootMouseMove }\r\n        data-automationid='DetailsHeader'\r\n        direction={ FocusZoneDirection.horizontal }\r\n      >\r\n        { showCheckbox ? (\r\n          <div\r\n            className={ css(\r\n              'ms-DetailsHeader-cell',\r\n              'ms-DetailsHeader-cellIsCheck',\r\n              styles.cell,\r\n              styles.cellIsCheck,\r\n              checkStyles.owner,\r\n              isAllSelected && checkStyles.isSelected\r\n            ) }\r\n            onClick={ this._onSelectAllClicked }\r\n            aria-colindex={ 0 }\r\n            role='columnheader' >\r\n            <span\r\n              aria-label={ ariaLabelForSelectionColumn }\r\n            ></span>\r\n            {\r\n              onRenderColumnHeaderTooltip({\r\n                hostClassName: css(styles.checkTooltip),\r\n                id: `${this._id}-checkTooltip`,\r\n                setAriaDescribedBy: false,\r\n                content: ariaLabelForSelectAllCheckbox,\r\n                children: (\r\n                  <DetailsRowCheck\r\n                    aria-describedby={ `${this._id}-checkTooltip` }\r\n                    selected={ isAllSelected }\r\n                    anySelected={ false }\r\n                    canSelect={ true }\r\n                  />\r\n                )\r\n              }, this._onRenderColumnHeaderTooltip)\r\n            }\r\n          </div >\r\n        ) : null\r\n        }\r\n        {\r\n          groupNestingDepth! > 0 && this.props.collapseAllVisibility === CollapseAllVisibility.visible ? (\r\n            <div\r\n              className={ css('ms-DetailsHeader-cell', styles.cell) }\r\n              onClick={ this._onToggleCollapseAll }\r\n            >\r\n              <Icon\r\n                className={ css(\r\n                  'ms-DetailsHeader-collapseButton',\r\n                  styles.collapseButton,\r\n                  isAllCollapsed && ('is-collapsed ' + styles.collapseButtonIsCollapsed)\r\n                ) }\r\n                iconName='ChevronDown'\r\n              />\r\n            </div>\r\n          ) : (null)\r\n        }\r\n        { GroupSpacer({ count: groupNestingDepth! - 1 }) }\r\n        {\r\n          columns.map((column: IColumn, columnIndex: number) => {\r\n            const previousColumnIndex = columnIndex - 1;\r\n            const previousColumn = columns[previousColumnIndex];\r\n\r\n            return (\r\n              [\r\n                <div\r\n                  key={ column.key }\r\n                  role='columnheader'\r\n                  aria-sort={ column.isSorted ? (column.isSortedDescending ? 'descending' : 'ascending') : 'none' }\r\n                  aria-disabled={ column.columnActionsMode === ColumnActionsMode.disabled }\r\n                  aria-colindex={ (showCheckbox ? 1 : 0) + columnIndex }\r\n                  className={ css(\r\n                    'ms-DetailsHeader-cell',\r\n                    styles.cell,\r\n                    column.headerClassName,\r\n                    (column.columnActionsMode !== ColumnActionsMode.disabled) && ('is-actionable ' + styles.cellIsActionable),\r\n                    !column.name && ('is-empty ' + styles.cellIsEmpty),\r\n                    (column.isSorted || column.isGrouped || column.isFiltered) && 'is-icon-visible',\r\n                    column.isPadded && styles.cellWrapperPadded\r\n                  ) }\r\n                  style={ { width: column.calculatedWidth! + INNER_PADDING + (column.isPadded ? ISPADDED_WIDTH : 0) } }\r\n                  aria-haspopup={ column.columnActionsMode === ColumnActionsMode.hasDropdown }\r\n                  data-automationid='ColumnsHeaderColumn'\r\n                  data-item-key={ column.key }\r\n                >\r\n                  {\r\n                    onRenderColumnHeaderTooltip({\r\n                      hostClassName: css(styles.cellTooltip),\r\n                      id: `${this._id}-${column.key}-tooltip`,\r\n                      setAriaDescribedBy: false,\r\n                      content: column.columnActionsMode !== ColumnActionsMode.disabled ? column.ariaLabel : '',\r\n                      children: (\r\n                        <span\r\n                          className={ css('ms-DetailsHeader-cellTitle', styles.cellTitle) }\r\n                          data-is-focusable={ column.columnActionsMode !== ColumnActionsMode.disabled }\r\n                          role={ column.columnActionsMode !== ColumnActionsMode.disabled ? 'button' : undefined }\r\n                          aria-describedby={ `${this._id}-${column.key}-tooltip` }\r\n                          onContextMenu={ this._onColumnContextMenu.bind(this, column) }\r\n                          onClick={ this._onColumnClick.bind(this, column) }\r\n                        >\r\n                          <span\r\n                            aria-label={ column.isIconOnly ? column.name : undefined }\r\n                            className={ css('ms-DetailsHeader-cellName',\r\n                              styles.cellName, {\r\n                                [styles.iconOnlyHeader]: column.isIconOnly\r\n                              }) }\r\n                          >\r\n                            { (column.iconName || column.iconClassName) && (\r\n                              <Icon className={ css(styles.nearIcon, column.iconClassName) } iconName={ column.iconName } />\r\n                            ) }\r\n\r\n                            { !column.isIconOnly ? column.name : undefined }\r\n                          </span>\r\n\r\n                          { column.isFiltered && (\r\n                            <Icon className={ styles.nearIcon } iconName='Filter' />\r\n                          ) }\r\n\r\n                          { column.isSorted && (\r\n                            <Icon className={ styles.nearIcon } iconName={ column.isSortedDescending ? 'SortDown' : 'SortUp' } />\r\n                          ) }\r\n\r\n                          { column.isGrouped && (\r\n                            <Icon className={ styles.nearIcon } iconName='GroupedDescending' />\r\n                          ) }\r\n\r\n                          { column.columnActionsMode === ColumnActionsMode.hasDropdown && !column.isIconOnly && (\r\n                            <Icon\r\n                              className={ css('ms-DetailsHeader-filterChevron', styles.filterChevron) }\r\n                              iconName='ChevronDown'\r\n                            />\r\n                          ) }\r\n                        </span>\r\n\r\n                      )\r\n                    }, this._onRenderColumnHeaderTooltip)\r\n                  }\r\n                </div>,\r\n                (column.isResizable) && this._renderColumnSizer(columnIndex)\r\n              ]\r\n            );\r\n          })\r\n        }\r\n        {\r\n          isSizing && (\r\n            <Layer>\r\n              <div\r\n                className={ css(isSizing && styles.sizingOverlay) }\r\n                onMouseMove={ this._onSizerMouseMove }\r\n                onMouseUp={ this._onSizerMouseUp }\r\n              />\r\n            </Layer>\r\n          )\r\n        }\r\n      </FocusZone >\r\n    );\r\n  }\r\n\r\n  /** Set focus to the active thing in the focus area. */\r\n  public focus(): boolean {\r\n    return this.refs.root.focus();\r\n  }\r\n\r\n  private _renderColumnSizer(columnIndex: number) {\r\n    const { columns } = this.props;\r\n    const column = this.props.columns[columnIndex];\r\n    const { isSizing, columnResizeDetails } = this.state;\r\n\r\n    return (\r\n      <div\r\n        aria-hidden={ true }\r\n        role='button'\r\n        data-is-focusable={ false }\r\n        onClick={ stopPropagation }\r\n        data-sizer-index={ columnIndex }\r\n        onBlur={ this._onSizerBlur }\r\n        className={ css(\r\n          'ms-DetailsHeader-cellSizer',\r\n          styles.cellSizer,\r\n          columnIndex < columns.length - 1 ? styles.cellSizerStart : styles.cellSizerEnd,\r\n          {\r\n            ['is-resizing ' + styles.cellIsResizing]: columnResizeDetails && columnResizeDetails.columnIndex === columnIndex\r\n          }) }\r\n        onDoubleClick={ this._onSizerDoubleClick.bind(this, columnIndex) }\r\n      />\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderColumnHeaderTooltip(tooltipHostProps: ITooltipHostProps, defaultRender?: IRenderFunction<ITooltipHostProps>) {\r\n    return <span className={ tooltipHostProps.hostClassName }> {\r\n      tooltipHostProps.children\r\n    }</span >;\r\n  }\r\n\r\n  /**\r\n   * double click on the column sizer will auto ajust column width\r\n   * to fit the longest content among current rendered rows.\r\n   *\r\n   * @private\r\n   * @param {number} columnIndex (index of the column user double clicked)\r\n   * @param {React.MouseEvent} ev (mouse double click event)\r\n   */\r\n  private _onSizerDoubleClick(columnIndex: number, ev: React.MouseEvent<HTMLElement>) {\r\n    let { onColumnAutoResized, columns } = this.props;\r\n    if (onColumnAutoResized) {\r\n      onColumnAutoResized(columns[columnIndex], columnIndex);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the select all toggle is clicked.\r\n   */\r\n\r\n  @autobind\r\n  private _onSelectAllClicked() {\r\n    let { selection } = this.props;\r\n\r\n    selection.toggleAllSelected();\r\n  }\r\n\r\n  @autobind\r\n  private _onRootMouseDown(ev: MouseEvent) {\r\n    let columnIndexAttr = (ev.target as HTMLElement).getAttribute('data-sizer-index');\r\n    let columnIndex = Number(columnIndexAttr);\r\n    let { columns } = this.props;\r\n\r\n    if (columnIndexAttr === null || ev.button !== MOUSEDOWN_PRIMARY_BUTTON) {\r\n      // Ignore anything except the primary button.\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      columnResizeDetails: {\r\n        columnIndex: columnIndex,\r\n        columnMinWidth: columns[columnIndex].calculatedWidth!,\r\n        originX: ev.clientX\r\n      }\r\n    });\r\n\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  @autobind\r\n  private _onRootMouseMove(ev: React.MouseEvent<HTMLElement>) {\r\n    let { columnResizeDetails, isSizing } = this.state;\r\n\r\n    if (columnResizeDetails && !isSizing && ev.clientX !== columnResizeDetails.originX) {\r\n      this.setState({ isSizing: true });\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onRootKeyDown(ev: KeyboardEvent) {\r\n    const { columnResizeDetails, isSizing } = this.state;\r\n    const { columns, onColumnResized } = this.props;\r\n\r\n    const columnIndexAttr = (ev.target as HTMLElement).getAttribute('data-sizer-index');\r\n\r\n    if (!columnIndexAttr || isSizing) {\r\n      return;\r\n    }\r\n\r\n    const columnIndex = Number(columnIndexAttr);\r\n\r\n    if (!columnResizeDetails) {\r\n      if (ev.which === KeyCodes.enter) {\r\n        this.setState({\r\n          columnResizeDetails: {\r\n            columnIndex: columnIndex,\r\n            columnMinWidth: columns[columnIndex].calculatedWidth!\r\n          }\r\n        });\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    } else {\r\n      let increment: number | undefined;\r\n\r\n      if (ev.which === KeyCodes.enter) {\r\n        this.setState({\r\n          columnResizeDetails: undefined\r\n        });\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      } else if (ev.which === KeyCodes.left) {\r\n        increment = getRTL() ? 1 : -1;\r\n      } else if (ev.which === KeyCodes.right) {\r\n        increment = getRTL() ? -1 : 1;\r\n      }\r\n\r\n      if (increment) {\r\n        if (!ev.shiftKey) {\r\n          increment *= 10;\r\n        }\r\n\r\n        this.setState({\r\n          columnResizeDetails: {\r\n            ...columnResizeDetails,\r\n            columnMinWidth: columnResizeDetails.columnMinWidth + increment\r\n          }\r\n        });\r\n\r\n        if (onColumnResized) {\r\n          onColumnResized(columns[columnIndex], columnResizeDetails.columnMinWidth + increment);\r\n        }\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * mouse move event handler in the header\r\n   * it will set isSizing state to true when user clicked on the sizer and move the mouse.\r\n   *\r\n   * @private\r\n   * @param {React.MouseEvent} ev (mouse move event)\r\n   */\r\n  @autobind\r\n  private _onSizerMouseMove(ev: React.MouseEvent<HTMLElement>) {\r\n    let {\r\n      // use buttons property here since ev.button in some edge case is not upding well during the move.\r\n      // but firefox doesn't support it, so we set the default value when it is not defined.\r\n      buttons\r\n  } = ev;\r\n    let { onColumnIsSizingChanged, onColumnResized, columns } = this.props;\r\n    let { columnResizeDetails } = this.state;\r\n\r\n    if (buttons !== undefined && buttons !== MOUSEMOVE_PRIMARY_BUTTON) {\r\n      // cancel mouse down event and return early when the primary button is not pressed\r\n      this._onSizerMouseUp(ev);\r\n      return;\r\n    }\r\n\r\n    if (ev.clientX !== columnResizeDetails!.originX) {\r\n      if (onColumnIsSizingChanged) {\r\n        onColumnIsSizingChanged(columns[columnResizeDetails!.columnIndex], true);\r\n      }\r\n    }\r\n\r\n    if (onColumnResized) {\r\n      let movement = ev.clientX - columnResizeDetails!.originX!;\r\n\r\n      if (getRTL()) {\r\n        movement = -movement;\r\n      }\r\n\r\n      onColumnResized(\r\n        columns[columnResizeDetails!.columnIndex],\r\n        columnResizeDetails!.columnMinWidth + movement\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  @autobind\r\n  private _onSizerBlur(ev: React.FocusEvent<HTMLElement>) {\r\n    const { columnResizeDetails } = this.state;\r\n\r\n    if (columnResizeDetails) {\r\n      this.setState({\r\n        columnResizeDetails: undefined,\r\n        isSizing: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * mouse up event handler in the header\r\n   * clear the resize related state.\r\n   * This is to ensure we can catch double click event\r\n   *\r\n   * @private\r\n   * @param {React.MouseEvent} ev (mouse up event)\r\n   */\r\n  @autobind\r\n  private _onSizerMouseUp(ev: React.MouseEvent<HTMLElement>) {\r\n    let { columns, onColumnIsSizingChanged } = this.props;\r\n    let { columnResizeDetails } = this.state;\r\n\r\n    this.setState({\r\n      columnResizeDetails: undefined,\r\n      isSizing: false\r\n    });\r\n\r\n    if (onColumnIsSizingChanged) {\r\n      onColumnIsSizingChanged(columns[columnResizeDetails!.columnIndex], false);\r\n    }\r\n  }\r\n\r\n  private _onSelectionChanged() {\r\n    let isAllSelected = this.props.selection.isAllSelected();\r\n\r\n    if (this.state.isAllSelected !== isAllSelected) {\r\n      this.setState({\r\n        isAllSelected: isAllSelected\r\n      });\r\n    }\r\n  }\r\n\r\n  private _onColumnClick(column: IColumn, ev: React.MouseEvent<HTMLElement>) {\r\n    let { onColumnClick } = this.props;\r\n\r\n    if (column.onColumnClick) {\r\n      column.onColumnClick(ev, column);\r\n    }\r\n\r\n    if (onColumnClick) {\r\n      onColumnClick(ev, column);\r\n    }\r\n  }\r\n\r\n  private _onColumnContextMenu(column: IColumn, ev: React.MouseEvent<HTMLElement>) {\r\n    let { onColumnContextMenu } = this.props;\r\n\r\n    if (column.onColumnContextMenu) {\r\n      column.onColumnContextMenu(column, ev);\r\n\r\n      ev.preventDefault();\r\n    }\r\n\r\n    if (onColumnContextMenu) {\r\n      onColumnContextMenu(column, ev);\r\n\r\n      ev.preventDefault();\r\n    }\r\n  }\r\n\r\n  private _onToggleCollapseAll() {\r\n    let { onToggleCollapseAll } = this.props;\r\n    let newCollapsed = !this.state.isAllCollapsed;\r\n    this.setState({\r\n      isAllCollapsed: newCollapsed\r\n    });\r\n    if (onToggleCollapseAll) {\r\n      onToggleCollapseAll(newCollapsed);\r\n    }\r\n  }\r\n}\r\n\r\nfunction stopPropagation(ev: React.MouseEvent<HTMLElement>) {\r\n  ev.stopPropagation();\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}
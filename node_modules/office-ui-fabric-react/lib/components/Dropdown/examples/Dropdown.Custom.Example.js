"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var Dropdown_1 = require("office-ui-fabric-react/lib/Dropdown");
require("./Dropdown.Basic.Example.scss");
var Dropdown_Props_1 = require("./../Dropdown.Props");
var Icon_1 = require("../../Icon");
var DropdownCustomExample = (function (_super) {
    tslib_1.__extends(DropdownCustomExample, _super);
    function DropdownCustomExample() {
        var _this = _super.call(this) || this;
        _this._onRenderOption = function (option) {
            return (React.createElement("div", { className: 'dropdownExample-option' },
                option.data && option.data.icon &&
                    React.createElement(Icon_1.Icon, { style: { marginRight: '8px' }, iconName: option.data.icon, "aria-hidden": 'true', title: option.data.icon }),
                React.createElement("span", null, option.text)));
        };
        _this._onRenderPlaceHolder = function (props) {
            return (React.createElement("div", { className: 'dropdownExample-placeholder' },
                React.createElement(Icon_1.Icon, { style: { marginRight: '8px' }, iconName: 'MessageFill', "aria-hidden": 'true' }),
                React.createElement("span", null, props.placeHolder)));
        };
        _this.state = {
            selectedItem: null
        };
        return _this;
    }
    DropdownCustomExample.prototype.render = function () {
        var selectedItem = this.state.selectedItem;
        return (React.createElement("div", { className: 'dropdownExample' },
            React.createElement(Dropdown_1.Dropdown, { placeHolder: 'Select an Option', label: 'Custom example:', id: 'Customdrop1', ariaLabel: 'Custom dropdown example', onRenderPlaceHolder: this._onRenderPlaceHolder, onRenderTitle: this._onRenderOption, onRenderOption: this._onRenderOption, options: [
                    { key: 'Header', text: 'Actions', itemType: Dropdown_Props_1.DropdownMenuItemType.Header },
                    { key: 'A', text: 'Option a', data: { icon: 'Memo' } },
                    { key: 'B', text: 'Option b', data: { icon: 'Print' } },
                    { key: 'C', text: 'Option c', data: { icon: 'ShoppingCart' } },
                    { key: 'D', text: 'Option d', data: { icon: 'Train' } },
                    { key: 'E', text: 'Option e', data: { icon: 'Repair' } },
                    { key: 'divider_2', text: '-', itemType: Dropdown_Props_1.DropdownMenuItemType.Divider },
                    { key: 'Header2', text: 'People', itemType: Dropdown_Props_1.DropdownMenuItemType.Header },
                    { key: 'F', text: 'Option f', data: { icon: 'Running' } },
                    { key: 'G', text: 'Option g', data: { icon: 'EmojiNeutral' } },
                    { key: 'H', text: 'Option h', data: { icon: 'ChatInviteFriend' } },
                    { key: 'I', text: 'Option i', data: { icon: 'SecurityGroup' } },
                    { key: 'J', text: 'Option j', data: { icon: 'AddGroup' } },
                ] })));
    };
    return DropdownCustomExample;
}(React.Component));
exports.DropdownCustomExample = DropdownCustomExample;

//# sourceMappingURL=Dropdown.Custom.Example.js.map

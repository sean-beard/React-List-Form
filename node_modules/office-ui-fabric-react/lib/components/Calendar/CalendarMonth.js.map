{"version":3,"sources":["components/Calendar/CalendarMonth.tsx"],"names":[],"mappings":"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","file":"components/Calendar/CalendarMonth.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  css,\r\n  getRTL\r\n} from '../../Utilities';\r\nimport { ICalendarStrings, ICalendarIconStrings } from './Calendar.Props';\r\nimport { FocusZone } from '../../FocusZone';\r\nimport { addYears, setMonth } from '../../utilities/dateMath/DateMath';\r\nimport { Icon } from '../../Icon';\r\nimport * as stylesImport from './Calendar.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface ICalendarMonthProps extends React.Props<CalendarMonth> {\r\n  componentRef?: () => void;\r\n  navigatedDate: Date;\r\n  strings: ICalendarStrings;\r\n  onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;\r\n  today?: Date;\r\n  highlightCurrentMonth: boolean;\r\n  navigationIcons: ICalendarIconStrings;\r\n}\r\n\r\nexport class CalendarMonth extends BaseComponent<ICalendarMonthProps, {}> {\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    navigatedMonth: HTMLElement;\r\n  };\r\n\r\n  private _selectMonthCallbacks: (() => void)[];\r\n\r\n  public constructor(props: ICalendarMonthProps) {\r\n    super(props);\r\n\r\n    this._selectMonthCallbacks = [];\r\n    props.strings.shortMonths.map((month, index) => {\r\n      this._selectMonthCallbacks[index] = this._onSelectMonth.bind(this, index);\r\n    });\r\n\r\n    this.isCurrentMonth = this.isCurrentMonth.bind(this);\r\n    this._onSelectNextYear = this._onSelectNextYear.bind(this);\r\n    this._onSelectPrevYear = this._onSelectPrevYear.bind(this);\r\n    this._onSelectMonth = this._onSelectMonth.bind(this);\r\n  }\r\n\r\n  public render() {\r\n\r\n    let { navigatedDate, strings, today, highlightCurrentMonth, navigationIcons } = this.props;\r\n    let leftNavigationIcon = navigationIcons.leftNavigation;\r\n    let rightNavigationIcon = navigationIcons.rightNavigation;\r\n\r\n    return (\r\n      <div className={ css('ms-DatePicker-monthPicker', styles.monthPicker) }>\r\n        <div className={ css('ms-DatePicker-header', styles.header) }>\r\n          <div className={ css(\r\n            'ms-DatePicker-yearComponents ms-DatePicker-navContainer',\r\n            styles.yearComponents,\r\n            styles.navContainer\r\n          ) }>\r\n            <span\r\n              className={ css('ms-DatePicker-prevYear js-prevYear', styles.prevYear) }\r\n              onClick={ this._onSelectPrevYear }\r\n              onKeyDown={ this._onKeyDown.bind(this, this._onSelectPrevYear) }\r\n              aria-label={ strings.prevYearAriaLabel }\r\n              role='button'\r\n              tabIndex={ 0 }>\r\n              <Icon iconName={ getRTL() ? rightNavigationIcon : leftNavigationIcon } />\r\n            </span>\r\n            <span\r\n              className={ css('ms-DatePicker-nextYear js-nextYear', styles.nextYear) }\r\n              onClick={ this._onSelectNextYear }\r\n              onKeyDown={ this._onKeyDown.bind(this, this._onSelectNextYear) }\r\n              aria-label={ strings.nextYearAriaLabel }\r\n              role='button'\r\n              tabIndex={ 0 }>\r\n              <Icon iconName={ getRTL() ? leftNavigationIcon : rightNavigationIcon } />\r\n            </span>\r\n          </div>\r\n          <div className={ css('ms-DatePicker-currentYear js-showYearPicker', styles.currentYear) }>{ navigatedDate.getFullYear() }</div>\r\n        </div>\r\n        <FocusZone>\r\n          <div className={ css('ms-DatePicker-optionGrid', styles.optionGrid) }>\r\n            { strings.shortMonths.map((month, index) =>\r\n              <span\r\n                role='button'\r\n                className={\r\n                  css('ms-DatePicker-monthOption',\r\n                    styles.monthOption,\r\n                    {\r\n                      ['ms-DatePicker-day--today ' + styles.monthIsCurrentMonth]: highlightCurrentMonth && this.isCurrentMonth(index, navigatedDate.getFullYear(), today!)\r\n                    })\r\n                }\r\n                key={ index }\r\n                onClick={ this._selectMonthCallbacks[index] }\r\n                aria-label={ setMonth(navigatedDate, index).toLocaleString([], { month: 'long', year: 'numeric' }) }\r\n                data-is-focusable={ true }\r\n                ref={ navigatedDate.getMonth() === index ? 'navigatedMonth' : undefined }\r\n              >\r\n                { month }\r\n              </span>\r\n            ) }\r\n          </div>\r\n        </FocusZone>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this.refs.navigatedMonth) {\r\n      this.refs.navigatedMonth.tabIndex = 0;\r\n      this.refs.navigatedMonth.focus();\r\n    }\r\n  }\r\n\r\n  private isCurrentMonth(month: number, year: number, today: Date) {\r\n    return today.getFullYear() === year && today.getMonth() === month;\r\n  }\r\n\r\n  private _onKeyDown(callback: () => void, ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  private _onSelectNextYear() {\r\n    let { navigatedDate, onNavigateDate } = this.props;\r\n    onNavigateDate(addYears(navigatedDate, 1), false);\r\n  }\r\n\r\n  private _onSelectPrevYear() {\r\n    let { navigatedDate, onNavigateDate } = this.props;\r\n    onNavigateDate(addYears(navigatedDate, -1), false);\r\n  }\r\n\r\n  private _onSelectMonth(newMonth: number) {\r\n    let { navigatedDate, onNavigateDate } = this.props;\r\n    onNavigateDate(setMonth(navigatedDate, newMonth), true);\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}
{"version":3,"sources":["components/HoverCard/examples/HoverCard.Basic.Example.tsx"],"names":[],"mappings":";;;AAAA,uCAAuC;AACvC,6BAA+B;AAC/B,sCAAsC;AACtC,kEAAsF;AACtF,kEAG8C;AAC9C,sEAA4F;AAC5F,kEAAqE;AACrE,+DAA6D;AAC7D,oCAAkC;AAElC,IAAI,MAAa,CAAC;AAOlB;IAA2C,iDAAyC;IAElF,+BAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAQb;QANC,MAAM,GAAG,MAAM,IAAI,kCAAe,CAAC,EAAE,CAAC,CAAC;QAEvC,KAAI,CAAC,KAAK,GAAG;YACX,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,aAAa,EAAE;SACzB,CAAC;;IACJ,CAAC;IAEM,sCAAM,GAAb;QACM,IAAA,eAA+B,EAA7B,gBAAK,EAAE,oBAAO,CAAgB;QAEpC,MAAM,CAAC,CACL;YACE,qFAA0D;YAC1D,oBAAC,yBAAW,IACV,MAAM,EAAC,UAAU,EACjB,KAAK,EAAG,KAAM,EACd,OAAO,EAAG,OAAO,EACjB,kBAAkB,EAAG,IAAI,CAAC,mBAAmB,GAC7C,CACE,CACP,CAAC;IACJ,CAAC;IAGO,mDAAmB,GAA3B,UAA4B,IAAS,EAAE,KAAa,EAAE,MAAe;QACnE,IAAM,kBAAkB,GAAwB;YAC9C,mBAAmB,EAAE,IAAI,CAAC,oBAAoB;YAC9C,oBAAoB,EAAE,IAAI,CAAC,qBAAqB;YAChD,UAAU,EAAE,IAAI;SACjB,CAAC;QAEF,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,KAAK,UAAU,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,CACL,oBAAC,qBAAS,IAAC,EAAE,EAAC,OAAO,EAAC,kBAAkB,EAAG,kBAAkB,EAAG,kBAAkB,EAAG,IAAI;gBACvF,6BAAK,SAAS,EAAC,gBAAgB,IAC3B,IAAI,CAAC,QAAQ,CACX,CACI,CACb,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;IAGO,oDAAoB,GAA5B,UAA6B,IAAS;QACpC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAC,8BAA8B;YAC3C,2BAAG,MAAM,EAAC,QAAQ,EAAC,IAAI,EAAG,+BAA6B,IAAI,CAAC,QAAU,IAClE,IAAI,CAAC,QAAQ,CACb,CACA,CACP,CAAC;IACJ,CAAC;IAGO,qDAAqB,GAA7B,UAA8B,IAAS;QACjC,IAAA,eAA+B,EAA7B,gBAAK,EAAE,oBAAO,CAAgB;QACpC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAC,+BAA+B;YAC1C,IAAI,CAAC,WAAW;YAClB,oBAAC,yBAAW,IACV,MAAM,EAAC,iBAAiB,EACxB,KAAK,EAAG,KAAM,EACd,OAAO,EAAG,OAAO,GACjB,CACE,CACP,CAAC;IACJ,CAAC;IA5CD;QADC,oBAAQ;oEAmBR;IAGD;QADC,oBAAQ;qEASR;IAGD;QADC,oBAAQ;sEAaR;IACH,4BAAC;CA3ED,AA2EC,CA3E0C,yBAAa,GA2EvD;AA3EY,sDAAqB;AA6ElC;IACE,MAAM,CAAC,0BAAY,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,KAAK,EAAnD,CAAmD,CAAC,CAAC;AACpG,CAAC","file":"components/HoverCard/examples/HoverCard.Basic.Example.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport { BaseComponent, IRenderFunction } from 'office-ui-fabric-react/lib/Utilities';\r\nimport {\r\n  HoverCard,\r\n  IExpandingCardProps\r\n} from 'office-ui-fabric-react/lib/HoverCard';\r\nimport { DetailsList, buildColumns, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { autobind, css } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { createListItems } from '@uifabric/example-app-base';\r\nimport './HoverCard.Example.scss';\r\n\r\nlet _items: any[];\r\n\r\nexport interface IHoverCardExampleState {\r\n  items?: any[];\r\n  columns?: IColumn[];\r\n}\r\n\r\nexport class HoverCardBasicExample extends BaseComponent<{}, IHoverCardExampleState> {\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    _items = _items || createListItems(10);\r\n\r\n    this.state = {\r\n      items: _items,\r\n      columns: _buildColumns()\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { items, columns } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <p> Hover over location of a row item to see the card </p>\r\n        <DetailsList\r\n          setKey='hoverSet'\r\n          items={ items! }\r\n          columns={ columns }\r\n          onRenderItemColumn={ this._onRenderItemColumn }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderItemColumn(item: any, index: number, column: IColumn) {\r\n    const expandingCardProps: IExpandingCardProps = {\r\n      onRenderCompactCard: this._onRenderCompactCard,\r\n      onRenderExpandedCard: this._onRenderExpandedCard,\r\n      renderData: item\r\n    };\r\n\r\n    if (column.key === 'location') {\r\n      return (\r\n        <HoverCard id='myID1' expandingCardProps={ expandingCardProps } instantOpenOnClick={ true }>\r\n          <div className='HoverCard-item'>\r\n            { item.location }\r\n          </div>\r\n        </HoverCard>\r\n      );\r\n    }\r\n\r\n    return item[column.key];\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderCompactCard(item: any): JSX.Element {\r\n    return (\r\n      <div className='hoverCardExample-compactCard'>\r\n        <a target='_blank' href={ `http://wikipedia.org/wiki/${item.location}` }>\r\n          { item.location }\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderExpandedCard(item: any): JSX.Element {\r\n    let { items, columns } = this.state;\r\n    return (\r\n      <div className='hoverCardExample-expandedCard'>\r\n        { item.description }\r\n        <DetailsList\r\n          setKey='expandedCardSet'\r\n          items={ items! }\r\n          columns={ columns }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction _buildColumns() {\r\n  return buildColumns(_items).filter(column => column.name === 'location' || column.name === 'key');\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}
{"version":3,"sources":["components/Button/SplitButton/SplitButton.classNames.ts"],"names":[],"mappings":";;AAAA,gDAAqD;AACrD,4CAA+C;AASlC,QAAA,aAAa,GAAG,2BAAe,CAAC,UAC3C,MAAqB,EACrB,QAAiB,EACjB,QAAiB,EACjB,OAAgB;IAEhB,MAAM,CAAC;QACL,IAAI,EAAE,qBAAW,CACf,MAAM,CAAC,qBAAqB,EAC5B,QAAQ,IAAI;YACV,MAAM,CAAC,6BAA6B;SACrC,EACD,QAAQ,IAAI;YACV,MAAM,CAAC,6BAA6B;SACrC,EACD,OAAO,IAAI;YACT,MAAM,CAAC,4BAA4B;SACpC,CACQ;QACX,IAAI,EAAE,CAAC,QAAQ,GAAG,qBAAW,CAAC,MAAM,CAAC,mBAAmB,EAAE,MAAM,CAAC,2BAA2B,CAAC,GAAG,MAAM,CAAC,mBAAmB,CAAW;QACrI,aAAa,EAAE,MAAM,CAAC,wBAAkC;KACzD,CAAC;AACJ,CAAC,CAAC,CAAC","file":"components/Button/SplitButton/SplitButton.classNames.js","sourcesContent":["import { memoizeFunction } from '../../../Utilities';\r\nimport { mergeStyles } from '../../../Styling';\r\nimport { IButtonStyles } from '../Button.Props';\r\n\r\nexport interface ISplitButtonClassNames {\r\n  root?: string;\r\n  icon?: string;\r\n  flexContainer?: string;\r\n}\r\n\r\nexport const getClassNames = memoizeFunction((\r\n  styles: IButtonStyles,\r\n  disabled: boolean,\r\n  expanded: boolean,\r\n  checked: boolean,\r\n): ISplitButtonClassNames => {\r\n  return {\r\n    root: mergeStyles(\r\n      styles.splitButtonMenuButton,\r\n      expanded && [\r\n        styles.splitButtonMenuButtonExpanded\r\n      ],\r\n      disabled && [\r\n        styles.splitButtonMenuButtonDisabled\r\n      ],\r\n      checked && [\r\n        styles.splitButtonMenuButtonChecked\r\n      ]\r\n    ) as string,\r\n    icon: (disabled ? mergeStyles(styles.splitButtonMenuIcon, styles.splitButtonMenuIconDisabled) : styles.splitButtonMenuIcon) as string,\r\n    flexContainer: styles.splitButtonFlexContainer as string\r\n  };\r\n});\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}
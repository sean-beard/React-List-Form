{"version":3,"sources":["components/Button/BaseButton.styles.ts"],"names":[],"mappings":";;AACA,6CAAkD;AAClD,yCAIuB;AAEvB,IAAM,SAAS,GAAG;IAChB,OAAO,EAAE,CAAC;CACX,CAAC;AAEF,IAAM,SAAS,GAAG;IAChB,QAAQ,EAAE,mBAAS,CAAC,IAAI;IACxB,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE,QAAQ;IACnB,aAAa,EAAE,QAAQ;CACxB,CAAC;AAEF;;;;GAIG;AACU,QAAA,SAAS,GAAG,2BAAe,CAAC,UACvC,KAAa,EACb,UAAwB,EACxB,UAAmD;IADnD,2BAAA,EAAA,gBAAwB;IACxB,2BAAA,EAAA,aAAqB,KAAK,CAAC,OAAO,CAAC,gBAAgB;IAGnD,MAAM,CAAC;QACL,IAAI,EAAE;YACJ,uBAAa,CAAC,KAAK,EAAE,UAAU,EAAE,UAAU,CAAC;YAC5C,KAAK,CAAC,KAAK,CAAC,MAAM;YAClB;gBACE,oEAAoE;gBACpE,SAAS,EAAE,YAAY;gBACvB,MAAM,EAAE,uBAAuB;gBAC/B,UAAU,EAAE,MAAM;gBAClB,OAAO,EAAE,cAAc;gBACvB,cAAc,EAAE,MAAM;gBACtB,SAAS,EAAE,QAAQ;gBACnB,MAAM,EAAE,SAAS;gBACjB,aAAa,EAAE,KAAK;gBACpB,OAAO,EAAE,QAAQ;aAClB;SACF;QAED,YAAY,EAAE;YACZ,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;YAC7C,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,eAAe;YACpC,MAAM,EAAE,SAAS;YACjB,aAAa,EAAE,MAAM;YACrB,QAAQ,EAAE,SAAS;YACnB,QAAQ,EAAE,SAAS;SACpB;QAED,aAAa,EAAE;YACb,OAAO,EAAE,MAAM;YACf,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,QAAQ;YAClB,cAAc,EAAE,QAAQ;YACxB,UAAU,EAAE,QAAQ;SACrB;QAED,IAAI,EAAE,SAAS;QAEf,QAAQ,EAAE;YACR,SAAS;YACT;gBACE,QAAQ,EAAE,mBAAS,CAAC,KAAK;aAC1B;SACF;QAED,KAAK,EAAE;YACL,MAAM,EAAE,OAAO;YACf,UAAU,EAAE,MAAM;SACnB;KAEF,CAAC;AACJ,CAAC,CAAC,CAAC","file":"components/Button/BaseButton.styles.js","sourcesContent":["import { IButtonStyles } from './Button.Props';\r\nimport { memoizeFunction } from '../../Utilities';\r\nimport {\r\n  ITheme,\r\n  getFocusStyle,\r\n  FontSizes\r\n} from '../../Styling';\r\n\r\nconst noOutline = {\r\n  outline: 0\r\n};\r\n\r\nconst iconStyle = {\r\n  fontSize: FontSizes.icon,\r\n  margin: '0 4px',\r\n  height: '16px',\r\n  lineHeight: '16px',\r\n  textAlign: 'center',\r\n  verticalAlign: 'middle'\r\n};\r\n\r\n/**\r\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\r\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\r\n * mixing class names together.\r\n */\r\nexport const getStyles = memoizeFunction((\r\n  theme: ITheme,\r\n  focusInset: string = '0',\r\n  focusColor: string = theme.palette.neutralSecondary\r\n): IButtonStyles => {\r\n\r\n  return {\r\n    root: [\r\n      getFocusStyle(theme, focusInset, focusColor),\r\n      theme.fonts.medium,\r\n      {\r\n        // this transparent border converts to the correct colors in HC mode\r\n        boxSizing: 'border-box',\r\n        border: '1px solid transparent',\r\n        userSelect: 'none',\r\n        display: 'inline-block',\r\n        textDecoration: 'none',\r\n        textAlign: 'center',\r\n        cursor: 'pointer',\r\n        verticalAlign: 'top',\r\n        padding: '0 16px'\r\n      }\r\n    ],\r\n\r\n    rootDisabled: {\r\n      backgroundColor: theme.palette.neutralLighter,\r\n      color: theme.palette.neutralTertiary,\r\n      cursor: 'default',\r\n      pointerEvents: 'none',\r\n      ':hover': noOutline,\r\n      ':focus': noOutline\r\n    },\r\n\r\n    flexContainer: {\r\n      display: 'flex',\r\n      height: '100%',\r\n      flexWrap: 'nowrap',\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n\r\n    icon: iconStyle,\r\n\r\n    menuIcon: [\r\n      iconStyle,\r\n      {\r\n        fontSize: FontSizes.small\r\n      }\r\n    ],\r\n\r\n    label: {\r\n      margin: '0 4px',\r\n      lineHeight: '100%'\r\n    },\r\n\r\n  };\r\n});\r\n"],"sourceRoot":"..\\..\\..\\src"}
import { BaseComponent } from 'office-ui-fabric-react/lib/Utilities';
import { IPersonaProps } from 'office-ui-fabric-react/lib/Persona';
import './PeoplePicker.Types.Example.scss';
export interface IPeoplePickerExampleState {
    currentPicker?: number | string;
    delayResults?: boolean;
    peopleList: IPersonaProps[];
    mostRecentlyUsed: IPersonaProps[];
    currentSelectedItems?: IPersonaProps[];
}
export declare class PeoplePickerTypesExample extends BaseComponent<any, IPeoplePickerExampleState> {
    private _picker;
    constructor();
    render(): JSX.Element;
    _renderListPicker(): JSX.Element;
    _renderNormalPicker(): JSX.Element;
    _renderCompactPicker(): JSX.Element;
    _renderPreselectedItemsPicker(): JSX.Element;
    _renderLimitedSearch(): JSX.Element;
    _renderProcessSelectionPicker(): JSX.Element;
    _renderControlledPicker(): JSX.Element;
    onItemsChange(items: any[]): void;
    private _onSetFocusButtonClicked();
    private _renderFooterText();
    private _onRemoveSuggestion(item);
    private _onItemSelected(item);
    private _onFilterChanged(filterText, currentPersonas, limitResults?);
    private _returnMostRecentlyUsed(currentPersonas);
    private _returnMostRecentlyUsedWithLimit(currentPersonas);
    private _onFilterChangedWithLimit(filterText, currentPersonas);
    private _filterPromise(personasToReturn);
    private _listContainsPersona(persona, personas);
    private _filterPersonasByText(filterText);
    private _doesTextStartWith(text, filterText);
    private _convertResultsToPromise(results);
    private _removeDuplicates(personas, possibleDupes);
    private _toggleDelayResultsChange(toggleState);
    private _dropDownSelected(option);
    private _validateInput(input);
}

{"version":3,"sources":["components/Tooltip/Tooltip.tsx"],"names":[],"mappings":";;;AAAA,uCAAuC;AACvC,6BAA+B;AAC/B,sCAAsC;AACtC,6CAKyB;AACzB,iDAA8D;AAC9D,yCAAwC;AACxC,gEAA+D;AAC/D,6CAA+C;AAC/C,IAAM,MAAM,GAAQ,YAAY,CAAC;AACjC,yCAAoD;AAEpD;IAA6B,mCAAiC;IAA9D;;IAwDA,CAAC;IAzCQ,wBAAM,GAAb;QACQ,IAAA,eASM,EARV,gCAAa,EACb,oBAAO,EACP,8BAAY,EACZ,oCAAe,EACf,gDAAqB,EACrB,gBAAK,EACL,UAAE,EACF,uBAAuC,EAAvC,4DAAuC,CAC5B;QAEb,MAAM,CAAC,CACL,oBAAC,iBAAO,qBACN,SAAS,EAAG,eAAG,CACb,YAAY,EACZ,6BAAmB,CAAC,SAAS,EAC7B,MAAM,CAAC,IAAI;gBACT,GAAC,MAAM,CAAC,cAAc,IAAG,KAAK,KAAK,4BAAY,CAAC,MAAM;oBAEzD,EACD,aAAa,EAAG,aAAa,EAC7B,eAAe,EAAG,eAAe,EACjC,qBAAqB,EAAG,qBAAqB,IACzC,YAAY,EACX,0BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,yBAAa,CAAC;YAE9C,6BAAK,SAAS,EAAG,eAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,OAAO,CAAC,EAAG,EAAE,EAAG,EAAE,EAAG,IAAI,EAAC,SAAS,IACjF,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAChD,CACG,CACZ,CAAC;;IACJ,CAAC;IAEO,kCAAgB,GAAxB,UAAyB,KAAoB;QAC3C,MAAM,CAAC,CACL,2BAAG,SAAS,EAAG,eAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,OAAO,CAAC,IACpD,KAAK,CAAC,OAAO,CACb,CACL,CAAC;IACJ,CAAC;IArDD,+BAA+B;IACjB,oBAAY,GAAG;QAC3B,eAAe,EAAE,iCAAe,CAAC,SAAS;QAC1C,KAAK,EAAE,4BAAY,CAAC,MAAM;QAC1B,YAAY,EAAE;YACZ,aAAa,EAAE,IAAI;YACnB,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,CAAC;YACX,eAAe,EAAE,IAAI;YACrB,UAAU,EAAE,KAAK;SAClB;KACF,CAAC;IA2CJ,cAAC;CAxDD,AAwDC,CAxD4B,yBAAa,GAwDzC;AAxDY,0BAAO","file":"components/Tooltip/Tooltip.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport {\r\n  BaseComponent,\r\n  css,\r\n  getNativeProps,\r\n  divProperties\r\n} from '../../Utilities';\r\nimport { ITooltipProps, TooltipDelay } from './Tooltip.Props';\r\nimport { Callout } from '../../Callout';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport * as stylesImport from './Tooltip.scss';\r\nconst styles: any = stylesImport;\r\nimport { AnimationClassNames } from '../../Styling';\r\n\r\nexport class Tooltip extends BaseComponent<ITooltipProps, any> {\r\n\r\n  // Specify default props values\r\n  public static defaultProps = {\r\n    directionalHint: DirectionalHint.topCenter,\r\n    delay: TooltipDelay.medium,\r\n    calloutProps: {\r\n      isBeakVisible: true,\r\n      beakWidth: 16,\r\n      gapSpace: 0,\r\n      setInitialFocus: true,\r\n      doNotLayer: false\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const {\r\n      targetElement,\r\n      content,\r\n      calloutProps,\r\n      directionalHint,\r\n      directionalHintForRTL,\r\n      delay,\r\n      id,\r\n      onRenderContent = this._onRenderContent\r\n  } = this.props;\r\n\r\n    return (\r\n      <Callout\r\n        className={ css(\r\n          'ms-Tooltip',\r\n          AnimationClassNames.fadeIn200,\r\n          styles.root, {\r\n            [styles.hasMediumDelay]: delay === TooltipDelay.medium\r\n          }\r\n        ) }\r\n        targetElement={ targetElement }\r\n        directionalHint={ directionalHint }\r\n        directionalHintForRTL={ directionalHintForRTL }\r\n        {...calloutProps}\r\n        { ...getNativeProps(this.props, divProperties) }\r\n      >\r\n        <div className={ css('ms-Tooltip-content', styles.content) } id={ id } role='tooltip'>\r\n          { onRenderContent(this.props, this._onRenderContent) }\r\n        </div>\r\n      </Callout >\r\n    );\r\n  }\r\n\r\n  private _onRenderContent(props: ITooltipProps): JSX.Element {\r\n    return (\r\n      <p className={ css('ms-Tooltip-subText', styles.subText) }>\r\n        { props.content }\r\n      </p>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}
{"version":3,"sources":["common/StoreHost.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,sCAAwC;AAExC,0CAA6C;AAW7C;IAA+B,qCAAkC;IAAjE;;IAqBA,CAAC;IAVQ,mCAAe,GAAtB;QACQ,IAAA,kCAAoB,CAAkB;QACtC,IAAA,iCAAqB,CAAgB;QAE3C,MAAM,CAAC,EAAE,MAAM,EAAE,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,aAAc,CAAC,GAAG,aAAa,EAAE,CAAC;IACvF,CAAC;IAEM,0BAAM,GAAb;QACE,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAClD,CAAC;IAnBa,sBAAY,GAAG;QAC3B,MAAM,EAAE,SAAS,CAAC,MAAM;KACzB,CAAC;IAEY,2BAAiB,GAAG;QAChC,MAAM,EAAE,SAAS,CAAC,MAAM;KACzB,CAAC;IAcJ,gBAAC;CArBD,AAqBC,CArB8B,yBAAa,GAqB3C;AArBY,8BAAS","file":"common/StoreHost.js","sourcesContent":["import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { StoreSet } from './StoreSet';\r\nimport { BaseComponent } from '../Utilities';\r\n\r\nexport interface IStoreHostProps extends React.Props<StoreHost> {\r\n  componentRef?: () => void;\r\n  stores?: StoreSet;\r\n}\r\n\r\nexport interface IStoreHostContext {\r\n  stores?: StoreSet;\r\n}\r\n\r\nexport class StoreHost extends BaseComponent<IStoreHostProps, {}> {\r\n  public static contextTypes = {\r\n    stores: PropTypes.object\r\n  };\r\n\r\n  public static childContextTypes = {\r\n    stores: PropTypes.object\r\n  };\r\n\r\n  public context: IStoreHostContext;\r\n\r\n  public getChildContext(): IStoreHostContext {\r\n    let { stores: parentStores } = this.context;\r\n    let { stores: currentStores } = this.props;\r\n\r\n    return { stores: parentStores ? parentStores.merge(currentStores!) : currentStores };\r\n  }\r\n\r\n  public render() {\r\n    return React.Children.only(this.props.children);\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}
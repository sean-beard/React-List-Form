{"version":3,"sources":["components/Button/BaseButton.styles.ts"],"names":[],"mappings":";;;IAQA,IAAM,SAAS,GAAG;QAChB,OAAO,EAAE,CAAC;KACX,CAAC;IAEF,IAAM,SAAS,GAAG;QAChB,QAAQ,EAAE,mBAAS,CAAC,IAAI;QACxB,MAAM,EAAE,OAAO;QACf,MAAM,EAAE,MAAM;QACd,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE,QAAQ;QACnB,aAAa,EAAE,QAAQ;KACxB,CAAC;IAEF;;;;OAIG;IACU,QAAA,SAAS,GAAG,2BAAe,CAAC,UACvC,KAAa,EACb,UAAwB,EACxB,UAAmD;QADnD,2BAAA,EAAA,gBAAwB;QACxB,2BAAA,EAAA,aAAqB,KAAK,CAAC,OAAO,CAAC,gBAAgB;QAGnD,MAAM,CAAC;YACL,IAAI,EAAE;gBACJ,uBAAa,CAAC,KAAK,EAAE,UAAU,EAAE,UAAU,CAAC;gBAC5C,KAAK,CAAC,KAAK,CAAC,MAAM;gBAClB;oBACE,oEAAoE;oBACpE,SAAS,EAAE,YAAY;oBACvB,MAAM,EAAE,uBAAuB;oBAC/B,UAAU,EAAE,MAAM;oBAClB,OAAO,EAAE,cAAc;oBACvB,cAAc,EAAE,MAAM;oBACtB,SAAS,EAAE,QAAQ;oBACnB,MAAM,EAAE,SAAS;oBACjB,aAAa,EAAE,KAAK;oBACpB,OAAO,EAAE,QAAQ;iBAClB;aACF;YAED,YAAY,EAAE;gBACZ,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;gBAC7C,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,eAAe;gBACpC,MAAM,EAAE,SAAS;gBACjB,aAAa,EAAE,MAAM;gBACrB,QAAQ,EAAE,SAAS;gBACnB,QAAQ,EAAE,SAAS;aACpB;YAED,aAAa,EAAE;gBACb,OAAO,EAAE,MAAM;gBACf,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;gBAClB,cAAc,EAAE,QAAQ;gBACxB,UAAU,EAAE,QAAQ;aACrB;YAED,IAAI,EAAE,SAAS;YAEf,QAAQ,EAAE;gBACR,SAAS;gBACT;oBACE,QAAQ,EAAE,mBAAS,CAAC,KAAK;iBAC1B;aACF;YAED,KAAK,EAAE;gBACL,MAAM,EAAE,OAAO;gBACf,UAAU,EAAE,MAAM;aACnB;SAEF,CAAC;IACJ,CAAC,CAAC,CAAC","file":"components/Button/BaseButton.styles.js","sourcesContent":["import { IButtonStyles } from './Button.Props';\r\nimport { memoizeFunction } from '../../Utilities';\r\nimport {\r\n  ITheme,\r\n  getFocusStyle,\r\n  FontSizes\r\n} from '../../Styling';\r\n\r\nconst noOutline = {\r\n  outline: 0\r\n};\r\n\r\nconst iconStyle = {\r\n  fontSize: FontSizes.icon,\r\n  margin: '0 4px',\r\n  height: '16px',\r\n  lineHeight: '16px',\r\n  textAlign: 'center',\r\n  verticalAlign: 'middle'\r\n};\r\n\r\n/**\r\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\r\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\r\n * mixing class names together.\r\n */\r\nexport const getStyles = memoizeFunction((\r\n  theme: ITheme,\r\n  focusInset: string = '0',\r\n  focusColor: string = theme.palette.neutralSecondary\r\n): IButtonStyles => {\r\n\r\n  return {\r\n    root: [\r\n      getFocusStyle(theme, focusInset, focusColor),\r\n      theme.fonts.medium,\r\n      {\r\n        // this transparent border converts to the correct colors in HC mode\r\n        boxSizing: 'border-box',\r\n        border: '1px solid transparent',\r\n        userSelect: 'none',\r\n        display: 'inline-block',\r\n        textDecoration: 'none',\r\n        textAlign: 'center',\r\n        cursor: 'pointer',\r\n        verticalAlign: 'top',\r\n        padding: '0 16px'\r\n      }\r\n    ],\r\n\r\n    rootDisabled: {\r\n      backgroundColor: theme.palette.neutralLighter,\r\n      color: theme.palette.neutralTertiary,\r\n      cursor: 'default',\r\n      pointerEvents: 'none',\r\n      ':hover': noOutline,\r\n      ':focus': noOutline\r\n    },\r\n\r\n    flexContainer: {\r\n      display: 'flex',\r\n      height: '100%',\r\n      flexWrap: 'nowrap',\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n\r\n    icon: iconStyle,\r\n\r\n    menuIcon: [\r\n      iconStyle,\r\n      {\r\n        fontSize: FontSizes.small\r\n      }\r\n    ],\r\n\r\n    label: {\r\n      margin: '0 4px',\r\n      lineHeight: '100%'\r\n    },\r\n\r\n  };\r\n});\r\n"],"sourceRoot":"..\\..\\..\\src"}
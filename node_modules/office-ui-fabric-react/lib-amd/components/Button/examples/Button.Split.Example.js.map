{"version":3,"sources":["components/Button/examples/Button.Split.Example.tsx"],"names":[],"mappings":";;;IAIA;QAAwC,8CAAiC;QACvE;mBACE,iBAAO;QACT,CAAC;QAEM,mCAAM,GAAb;YACM,IAAA,eAAkC,EAAhC,sBAAQ,EAAE,oBAAO,CAAgB;YAEvC,MAAM,CAAC,CACL;gBACE,oBAAC,aAAK,uBAAqB;gBAC3B,oBAAC,sBAAa,0BACO,MAAM,EACzB,QAAQ,EAAG,QAAQ,EACnB,OAAO,EAAG,OAAO,EACjB,IAAI,EAAC,gBAAgB,EACrB,OAAO,EAAG,cAAM,OAAA,KAAK,CAAC,SAAS,CAAC,EAAhB,CAAgB,EAChC,KAAK,EAAG,IAAI,EACZ,SAAS,EAAG;wBACV,KAAK,EAAE;4BACL;gCACE,GAAG,EAAE,cAAc;gCACnB,IAAI,EAAE,eAAe;gCACrB,IAAI,EAAE,MAAM;6BACb;4BACD;gCACE,GAAG,EAAE,eAAe;gCACpB,IAAI,EAAE,gBAAgB;gCACtB,IAAI,EAAE,UAAU;6BACjB;yBACF;qBACF,GACD,CACE,CACP,CAAC;QACJ,CAAC;QACH,yBAAC;IAAD,CApCA,AAoCC,CApCuC,KAAK,CAAC,SAAS,GAoCtD;IApCY,gDAAkB;IAsC/B;QAA8C,oDAAiC;QAC7E;mBACE,iBAAO;QACT,CAAC;QAEM,yCAAM,GAAb;YACM,IAAA,eAAkC,EAAhC,sBAAQ,EAAE,oBAAO,CAAgB;YACvC,IAAM,KAAK,GAAkB,EAAE,qBAAqB,EAAE,EAAE,eAAe,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,mBAAmB,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC;YAE9I,MAAM,CAAC,CACL;gBACE,oBAAC,aAAK,8BAA4B;gBAClC,oBAAC,mBAAU,0BACU,MAAM,EACzB,QAAQ,EAAG,QAAQ,EACnB,OAAO,EAAG,OAAO,EACjB,SAAS,EAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAClC,IAAI,EAAC,gBAAgB,EACrB,OAAO,EAAG,cAAM,OAAA,KAAK,CAAC,SAAS,CAAC,EAAhB,CAAgB,EAChC,KAAK,EAAG,IAAI,EACZ,MAAM,EAAG,KAAK,EACd,SAAS,EAAG;wBACV,KAAK,EAAE;4BACL;gCACE,GAAG,EAAE,cAAc;gCACnB,IAAI,EAAE,eAAe;gCACrB,IAAI,EAAE,MAAM;6BACb;4BACD;gCACE,GAAG,EAAE,eAAe;gCACpB,IAAI,EAAE,gBAAgB;gCACtB,IAAI,EAAE,UAAU;6BACjB;yBACF;qBACF,GACD,CACE,CACP,CAAC;QACJ,CAAC;QACH,+BAAC;IAAD,CAvCA,AAuCC,CAvC6C,KAAK,CAAC,SAAS,GAuC5D;IAvCY,4DAAwB","file":"components/Button/examples/Button.Split.Example.js","sourcesContent":["import * as React from 'react';\r\nimport { DefaultButton, IconButton, IButtonProps, IButtonStyles } from 'office-ui-fabric-react/lib/Button';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\n\r\nexport class ButtonSplitExample extends React.Component<IButtonProps, {}> {\r\n  public constructor() {\r\n    super();\r\n  }\r\n\r\n  public render() {\r\n    let { disabled, checked } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Label>Split button</Label>\r\n        <DefaultButton\r\n          data-automation-id='test'\r\n          disabled={ disabled }\r\n          checked={ checked }\r\n          text='Create account'\r\n          onClick={ () => alert('Clicked') }\r\n          split={ true }\r\n          menuProps={ {\r\n            items: [\r\n              {\r\n                key: 'emailMessage',\r\n                name: 'Email message',\r\n                icon: 'Mail'\r\n              },\r\n              {\r\n                key: 'calendarEvent',\r\n                name: 'Calendar event',\r\n                icon: 'Calendar'\r\n              }\r\n            ]\r\n          } }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class ButtonSplitCustomExample extends React.Component<IButtonProps, {}> {\r\n  public constructor() {\r\n    super();\r\n  }\r\n\r\n  public render() {\r\n    let { disabled, checked } = this.props;\r\n    const style: IButtonStyles = { splitButtonMenuButton: { backgroundColor: 'white', width: '10px' }, splitButtonMenuIcon: { fontSize: '7px' } };\r\n\r\n    return (\r\n      <div>\r\n        <Label>Custom Split button</Label>\r\n        <IconButton\r\n          data-automation-id='test'\r\n          disabled={ disabled }\r\n          checked={ checked }\r\n          iconProps={ { iconName: 'Emoji2' } }\r\n          text='Create account'\r\n          onClick={ () => alert('Clicked') }\r\n          split={ true }\r\n          styles={ style }\r\n          menuProps={ {\r\n            items: [\r\n              {\r\n                key: 'emailMessage',\r\n                name: 'Email message',\r\n                icon: 'Mail'\r\n              },\r\n              {\r\n                key: 'calendarEvent',\r\n                name: 'Calendar event',\r\n                icon: 'Calendar'\r\n              }\r\n            ]\r\n          } }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}
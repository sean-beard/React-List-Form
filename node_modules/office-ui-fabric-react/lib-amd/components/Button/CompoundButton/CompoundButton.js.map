{"version":3,"sources":["components/Button/CompoundButton/CompoundButton.tsx"],"names":[],"mappings":";;;IAQA;QAAoC,0CAA+B;QADnE;YAAA,qEAkBC;YAhBC;;eAEG;YACO,+BAAyB,GAAG,KAAK,CAAC;;QAa9C,CAAC;QAXQ,+BAAM,GAAb;YACM,IAAA,eAA8B,EAA5B,kBAAM,EAAE,gBAAK,CAAgB;YACnC,MAAM,CAAC,CACL,oBAAC,uBAAU,uBACJ,IAAI,CAAC,KAAK,IACf,gBAAgB,EAAC,qBAAqB,EACtC,MAAM,EAAG,iCAAS,CAAC,KAAM,EAAE,MAAM,CAAC,EAClC,YAAY,EAAG,sBAAU,IACzB,CACH,CAAC;QACJ,CAAC;QAhBU,cAAc;YAD1B,wBAAY,CAAC,CAAC,0BAAgB,CAAC,CAAC;WACpB,cAAc,CAiB1B;QAAD,qBAAC;KAjBD,AAiBC,CAjBmC,yBAAa,GAiBhD;IAjBY,wCAAc","file":"components/Button/CompoundButton/CompoundButton.js","sourcesContent":["import * as React from 'react';\r\nimport { BaseButton } from '../BaseButton';\r\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\r\nimport { ThemeSettingName } from '../../../Styling';\r\nimport { IButtonProps } from '../Button.Props';\r\nimport { getStyles } from './CompoundButton.styles';\r\n\r\n@customizable([ThemeSettingName])\r\nexport class CompoundButton extends BaseComponent<IButtonProps, {}> {\r\n  /**\r\n   * Tell BaseComponent to bypass resolution of componentRef.\r\n   */\r\n  protected _shouldUpdateComponentRef = false;\r\n\r\n  public render() {\r\n    let { styles, theme } = this.props;\r\n    return (\r\n      <BaseButton\r\n        { ...this.props }\r\n        variantClassName='ms-Button--compound'\r\n        styles={ getStyles(theme!, styles) }\r\n        onRenderIcon={ nullRender }\r\n      />\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}
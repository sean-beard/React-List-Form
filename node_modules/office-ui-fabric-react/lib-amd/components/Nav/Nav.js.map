{"version":3,"sources":["components/Nav/Nav.tsx"],"names":[],"mappings":"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","file":"components/Nav/Nav.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  autobind,\r\n  BaseComponent,\r\n  css,\r\n  getRTL\r\n} from '../../Utilities';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { CommandButton } from '../../Button';\r\nimport { Icon } from '../../Icon';\r\nimport * as stylesImport from './Nav.scss';\r\nconst styles: any = stylesImport;\r\nimport { AnimationClassNames } from '../../Styling';\r\nimport {\r\n  INav,\r\n  INavProps,\r\n  INavLinkGroup,\r\n  INavLink\r\n} from './Nav.Props';\r\n\r\n// The number pixels per indentation level for Nav links.\r\nconst _indentationSize: number = 14;\r\n// Tne number of pixels of left margin when there is expand/collaps button\r\nconst _indentWithExpandButton: number = 28;\r\n// Tne number of pixels of left margin when there is expand/collaps button\r\nconst _indentNoExpandButton: number = 20;\r\n\r\n// global var used in _isLinkSelectedKey\r\nlet _urlResolver: HTMLAnchorElement | undefined;\r\n\r\nexport function isRelativeUrl(url: string): boolean {\r\n  // A URL is relative if it has no protocol.\r\n  return !!url && !/^[a-z0-9+-.]:\\/\\//i.test(url);\r\n}\r\n\r\nexport interface INavState {\r\n  isGroupCollapsed?: { [key: string]: boolean };\r\n  isLinkExpandStateChanged?: boolean;\r\n  selectedKey?: string;\r\n}\r\n\r\nexport class Nav extends BaseComponent<INavProps, INavState> implements INav {\r\n\r\n  public static defaultProps: INavProps = {\r\n    groups: null,\r\n    onRenderLink: (link: INavLink) => (<span className={ css('ms-Nav-linkText', styles.linkText) }>{ link.name }</span>)\r\n  };\r\n\r\n  private _hasExpandButton: boolean;\r\n\r\n  constructor(props: INavProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isGroupCollapsed: {},\r\n      isLinkExpandStateChanged: false,\r\n      selectedKey: props.initialSelectedKey || props.selectedKey,\r\n    };\r\n\r\n    if (props.groups) {\r\n      for (let group of props.groups) {\r\n        if (group.collapseByDefault && group.name) {\r\n          this.state.isGroupCollapsed![group.name] = true;\r\n        }\r\n      }\r\n    }\r\n    this._hasExpandButton = false;\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: INavProps) {\r\n    let newGroups = newProps.groups || [];\r\n    let isGroupCollapsed = this.state.isGroupCollapsed!;\r\n\r\n    // If the component's props were updated, new groups may have been added, which may have\r\n    // collapseByDefault set. Ensure that setting is respected for any new groups.\r\n    // (If isGroupCollapsed is already set for a group, don't overwrite that.)\r\n    let hasUpdated = false;\r\n    for (let newGroup of newGroups) {\r\n      if (newGroup.name && newGroup.collapseByDefault && !isGroupCollapsed.hasOwnProperty(newGroup.name)) {\r\n        isGroupCollapsed[newGroup.name] = true;\r\n        hasUpdated = true;\r\n      }\r\n    }\r\n\r\n    if (hasUpdated) {\r\n      this.setState({\r\n        isGroupCollapsed: isGroupCollapsed\r\n      });\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element | null {\r\n    const { groups, className, isOnTop } = this.props;\r\n\r\n    if (!groups) {\r\n      return null;\r\n    }\r\n\r\n    // When groups[x].name is specified or any of the links have children, the expand/collapse\r\n    // chevron button is shown and different padding is needed. _hasExpandButton marks this condition.\r\n    this._hasExpandButton = groups.some((group: INavLinkGroup) => {\r\n      return group ? !!group.name || (group.links && group.links.some((link: INavLink) => {\r\n        return !!(link && link.links && link.links.length);\r\n      })) : false;\r\n    });\r\n\r\n    const groupElements: React.ReactElement<{}>[] = groups.map(this._renderGroup);\r\n\r\n    return (\r\n      <FocusZone direction={ FocusZoneDirection.vertical }>\r\n        <nav role='navigation'\r\n          className={ css(\r\n            'ms-Nav',\r\n            styles.root,\r\n            className,\r\n            isOnTop && css('is-onTop', styles.rootIsOnTop, AnimationClassNames.slideRightIn40)\r\n          ) }>\r\n          { groupElements }\r\n        </nav>\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  public get selectedKey(): string | undefined {\r\n    return this.state.selectedKey;\r\n  }\r\n\r\n  private _renderAnchorLink(link: INavLink, linkIndex: number, nestingLevel: number): React.ReactElement<{}> {\r\n    // Determine the appropriate padding to add before this link.\r\n    // In RTL, the \"before\" padding will go on the right instead of the left.\r\n    const isRtl: boolean = getRTL();\r\n    const paddingBefore = _indentationSize * nestingLevel +\r\n      (this._hasExpandButton ? _indentWithExpandButton : _indentNoExpandButton);\r\n    // Prevent hijacking of the parent window if link.target is defined\r\n    const rel = link.url && link.target && !isRelativeUrl(link.url) ? 'noopener noreferrer' : undefined;\r\n\r\n    return (\r\n      <a\r\n        className={ css('ms-Nav-link', styles.link) }\r\n        style={ { [isRtl ? 'paddingRight' : 'paddingLeft']: paddingBefore + 'px' } }\r\n        href={ link.url || 'javascript:' }\r\n        onClick={ this._onNavAnchorLinkClicked.bind(this, link) }\r\n        aria-label={ link.ariaLabel }\r\n        title={ link.title || link.name }\r\n        target={ link.target }\r\n        rel={ rel }\r\n      >\r\n        { link.iconClassName && (\r\n          <Icon\r\n            className={ css(link.iconClassName, styles.iconLink) }\r\n            iconName='IconLink'\r\n          />\r\n        ) }\r\n        { this.props.onRenderLink!(link) }\r\n      </a>\r\n    );\r\n  }\r\n\r\n  private _renderButtonLink(link: INavLink, linkIndex: number) {\r\n    return (\r\n      <CommandButton\r\n        className={ css('ms-Nav-link ms-Nav-linkButton', styles.link, {\r\n          'isOnExpanded': this._hasExpandButton,\r\n          [styles.linkIsOnExpanded]: this._hasExpandButton\r\n        }) }\r\n        href={ link.url }\r\n        iconProps={ { iconName: link.icon } }\r\n        description={ link.title || link.name }\r\n        onClick={ this._onNavButtonLinkClicked.bind(this, link) }>\r\n        { link.name }\r\n      </CommandButton>);\r\n  }\r\n\r\n  private _renderCompositeLink(link: INavLink, linkIndex: number, nestingLevel: number): React.ReactElement<{}> {\r\n    const isLinkSelected: boolean = this._isLinkSelected(link);\r\n    const isRtl: boolean = getRTL();\r\n    const paddingBefore: string = `${_indentationSize * nestingLevel}px`;\r\n\r\n    return (\r\n      <div key={ link.key || linkIndex }\r\n        className={ css('ms-Nav-compositeLink', styles.compositeLink, {\r\n          ' is-expanded': !!link.isExpanded,\r\n          'is-selected': isLinkSelected,\r\n          [styles.compositeLinkIsExpanded]: !!link.isExpanded,\r\n          [styles.compositeLinkIsSelected]: isLinkSelected\r\n        }) }>\r\n        { (link.links && link.links.length > 0 ?\r\n          <button\r\n            style={ { [isRtl ? 'marginRight' : 'marginLeft']: paddingBefore } }\r\n            className={ css('ms-Nav-chevronButton ms-Nav-chevronButton--link', styles.chevronButton, styles.chevronButtonLink) }\r\n            onClick={ this._onLinkExpandClicked.bind(this, link) }\r\n            aria-label={ this.props.expandButtonAriaLabel }\r\n            aria-expanded={ link.isExpanded ? 'true' : 'false' }\r\n          >\r\n            <Icon\r\n              className={ css('ms-Nav-chevron', styles.chevronIcon, link.isExpanded) }\r\n              iconName='ChevronDown'\r\n            />\r\n          </button> : null\r\n        ) }\r\n        { link.onClick && !link.forceAnchor\r\n          ? this._renderButtonLink(link, linkIndex)\r\n          : this._renderAnchorLink(link, linkIndex, nestingLevel) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderLink(link: INavLink, linkIndex: number, nestingLevel: number): React.ReactElement<{}> {\r\n    return (\r\n      <li key={ link.key || linkIndex } role='listitem' className={ css(styles.navItem) }>\r\n        { this._renderCompositeLink(link, linkIndex, nestingLevel) }\r\n        { (link.isExpanded ? this._renderLinks(link.links, ++nestingLevel) : null) }\r\n      </li>\r\n    );\r\n  }\r\n\r\n  private _renderLinks(links: INavLink[] | undefined, nestingLevel: number): React.ReactElement<{}> | null {\r\n    if (!links || !links.length) {\r\n      return null;\r\n    }\r\n    const linkElements: React.ReactElement<{}>[] = links.map(\r\n      (link: INavLink, linkIndex: number) => this._renderLink(link, linkIndex, nestingLevel));\r\n\r\n    return (\r\n      <ul role='list' aria-label={ this.props.ariaLabel } className={ css(styles.navItems) }>\r\n        { linkElements }\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _renderGroup(group: INavLinkGroup, groupIndex: number): React.ReactElement<{}> {\r\n    const isGroupExpanded: boolean = !this.state.isGroupCollapsed![group.name!];\r\n\r\n    return (\r\n      <div key={ groupIndex } className={ css('ms-Nav-group', styles.group, {\r\n        'is-expanded': isGroupExpanded,\r\n        [styles.groupIsExpanded]: isGroupExpanded\r\n      }) }>\r\n        { (group.name ?\r\n          <button\r\n            className={ css('ms-Nav-chevronButton ms-Nav-chevronButton--group ms-Nav-groupHeaderFontSize', styles.chevronButton, styles.chevronButtonIsGroup, styles.groupHeaderFontSize) }\r\n            onClick={ this._onGroupHeaderClicked.bind(this, group) }\r\n          >\r\n            <Icon\r\n              className={ css(\r\n                'ms-Nav-chevron',\r\n                styles.chevronIcon,\r\n                isGroupExpanded && styles.chevronIsExpanded\r\n              ) }\r\n              iconName='ChevronDown'\r\n            />\r\n            { group.name }\r\n          </button> : null)\r\n        }\r\n        <div className={ css('ms-Nav-groupContent', AnimationClassNames.slideDownIn20, styles.groupContent) }>\r\n          { this._renderLinks(group.links, 0 /* nestingLevel */) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onGroupHeaderClicked(group: INavLinkGroup, ev: React.MouseEvent<HTMLElement>): void {\r\n    let { isGroupCollapsed } = this.state;\r\n    let groupKey = group.name!;\r\n    let isCollapsed = !isGroupCollapsed![groupKey];\r\n\r\n    if (group.onHeaderClick) {\r\n      group.onHeaderClick(ev, isCollapsed);\r\n    }\r\n\r\n    isGroupCollapsed![groupKey] = isCollapsed;\r\n    this.setState({ isGroupCollapsed: isGroupCollapsed });\r\n\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  private _onLinkExpandClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\r\n    link.isExpanded = !link.isExpanded;\r\n    this.setState({ isLinkExpandStateChanged: true });\r\n\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  private _onNavAnchorLinkClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\r\n    if (this.props.onLinkClick) {\r\n      this.props.onLinkClick(ev, link);\r\n    }\r\n\r\n    this.setState({ selectedKey: link.key });\r\n  }\r\n\r\n  private _onNavButtonLinkClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\r\n    if (link.onClick) {\r\n      link.onClick(ev, link);\r\n    }\r\n\r\n    this.setState({ selectedKey: link.key });\r\n  }\r\n\r\n  private _isLinkSelected(link: INavLink): boolean {\r\n    // if caller passes in selectedKey, use it as first choice or\r\n    // if current state.selectedKey (from addressbar) is match to the link\r\n    if (this.props.selectedKey !== undefined) {\r\n      return link.key === this.props.selectedKey;\r\n    } else if (this.state.selectedKey !== undefined && link.key === this.state.selectedKey) {\r\n      return true;\r\n    }\r\n\r\n    // resolve is not supported for ssr\r\n    if (typeof (window) === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    if (!link.url) {\r\n      return false;\r\n    }\r\n\r\n    _urlResolver = _urlResolver || document.createElement('a');\r\n\r\n    _urlResolver.href = link.url || '';\r\n    const target: string = _urlResolver.href;\r\n\r\n    if (location.href === target) {\r\n      return true;\r\n    }\r\n\r\n    if (location.protocol + '//' + location.host + location.pathname === target) {\r\n      return true;\r\n    }\r\n\r\n    if (location.hash) {\r\n      // Match the hash to the url.\r\n      if (location.hash === link.url) {\r\n        return true;\r\n      }\r\n\r\n      // Match a rebased url. (e.g. #foo becomes http://hostname/foo)\r\n      _urlResolver.href = location.hash.substring(1);\r\n\r\n      return _urlResolver.href === target;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}
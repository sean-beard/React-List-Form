{"version":3,"sources":["components/pickers/Suggestions/SuggestionsController.ts"],"names":[],"mappings":"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","file":"components/pickers/Suggestions/SuggestionsController.js","sourcesContent":["export interface ISuggestionModel<T> {\r\n  item: T;\r\n  selected: boolean;\r\n}\r\n\r\nexport class SuggestionsController<T> {\r\n  public currentIndex: number;\r\n  public currentSuggestion: ISuggestionModel<T> | undefined;\r\n  public suggestions: ISuggestionModel<T>[];\r\n\r\n  constructor() {\r\n    this.suggestions = [];\r\n    this.currentIndex = -1;\r\n  }\r\n\r\n  public updateSuggestions(newSuggestions: T[], selectedIndex?: number) {\r\n    if (newSuggestions && newSuggestions.length > 0) {\r\n      this.suggestions = this._convertSuggestionsToSuggestionItems(newSuggestions);\r\n      this.currentIndex = 0;\r\n      if (selectedIndex !== undefined) {\r\n        this.suggestions[selectedIndex].selected = true;\r\n        this.currentSuggestion = this.suggestions[selectedIndex];\r\n      }\r\n    } else {\r\n      this.suggestions = [];\r\n      this.currentIndex = -1;\r\n      this.currentSuggestion = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Increments the suggestion index and gets the next suggestion in the list.\r\n   */\r\n  public nextSuggestion(): boolean {\r\n    if (this.suggestions && this.suggestions.length) {\r\n      if (this.currentIndex < (this.suggestions.length - 1)) {\r\n        this.setSelectedSuggestion(this.currentIndex + 1);\r\n        return true;\r\n      } else if (this.currentIndex === (this.suggestions.length - 1)) {\r\n        this.setSelectedSuggestion(0);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Decrements the suggestion index and gets the previous suggestion in the list.\r\n   */\r\n  public previousSuggestion(): boolean {\r\n    if (this.suggestions && this.suggestions.length) {\r\n      if (this.currentIndex > 0) {\r\n        this.setSelectedSuggestion(this.currentIndex - 1);\r\n        return true;\r\n      } else if (this.currentIndex === 0) {\r\n        this.setSelectedSuggestion(this.suggestions.length - 1);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public getSuggestions(): ISuggestionModel<T>[] {\r\n    return this.suggestions;\r\n  }\r\n\r\n  public getCurrentItem(): ISuggestionModel<T> {\r\n    return this.currentSuggestion!;\r\n  }\r\n\r\n  public getSuggestionAtIndex(index: number): ISuggestionModel<T> {\r\n    return this.suggestions[index];\r\n  }\r\n\r\n  public hasSelectedSuggestion(): boolean {\r\n    return this.currentSuggestion ? true : false;\r\n  }\r\n\r\n  public removeSuggestion(index: number) {\r\n    this.suggestions.splice(index, 1);\r\n  }\r\n\r\n  public createGenericSuggestion(itemToConvert: ISuggestionModel<T>) {\r\n    let itemToAdd = this._convertSuggestionsToSuggestionItems([itemToConvert])[0];\r\n    this.currentSuggestion = itemToAdd;\r\n  }\r\n\r\n  public _convertSuggestionsToSuggestionItems(suggestions: any[]): ISuggestionModel<T>[] {\r\n    let converted: ISuggestionModel<T>[] = [];\r\n    suggestions.forEach((suggestion: any) => converted.push({ item: suggestion, selected: false }));\r\n    return converted;\r\n  }\r\n\r\n  public deselectAllSuggestions(): void {\r\n    this.currentIndex = -1;\r\n    this.suggestions[this.currentIndex].selected = false;\r\n  }\r\n\r\n  public setSelectedSuggestion(index: number): void {\r\n    if (index > this.suggestions.length - 1 || index < 0) {\r\n      this.currentIndex = 0;\r\n      this.currentSuggestion!.selected = false;\r\n      this.currentSuggestion = this.suggestions[0];\r\n      this.currentSuggestion.selected = true;\r\n    } else {\r\n      if (this.currentIndex > -1) {\r\n        this.suggestions[this.currentIndex].selected = false;\r\n      }\r\n      this.suggestions[index].selected = true;\r\n      this.currentIndex = index;\r\n      this.currentSuggestion = this.suggestions[index];\r\n    }\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}
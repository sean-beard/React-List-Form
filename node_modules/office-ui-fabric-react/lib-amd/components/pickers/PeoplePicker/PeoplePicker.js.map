{"version":3,"sources":["components/pickers/PeoplePicker/PeoplePicker.tsx"],"names":[],"mappings":";;;IAeA;QAAsC,4CAA6C;QAAnF;;QACA,CAAC;QAAD,uBAAC;IAAD,CADA,AACC,CADqC,uBAAU,GAC/C;IADY,4CAAgB;IAG7B;QAA4C,kDAAsD;QAAlG;;QACA,CAAC;QAAD,6BAAC;IAAD,CADA,AACC,CAD2C,gCAAmB,GAC9D;IADY,wDAAsB;IAGnC;;OAEG;IACH;QAAwC,8CAAgB;QAAxD;;QAMA,CAAC;QALe,+BAAY,GAAG;YAC3B,YAAY,EAAE,UAAC,KAA6B,IAAK,OAAA,oBAAC,yCAAmB,uBAAK,KAAK,EAAI,EAAlC,CAAkC;YACnF,uBAAuB,EAAE,UAAC,KAAoB,EAAE,SAAuC,IAAK,OAAA,4CAAoB,sBAAM,KAAK,wBAAS,SAAS,EAAG,EAApD,CAAoD;YAChJ,iBAAiB,EAAE,iBAAiB;SACrC,CAAC;QACJ,yBAAC;KAND,AAMC,CANuC,gBAAgB,GAMvD;IANY,gDAAkB;IAQ/B;;MAEE;IACF;QAAyC,+CAAgB;QAAzD;;QAMA,CAAC;QALe,gCAAY,GAAG;YAC3B,YAAY,EAAE,UAAC,KAA6B,IAAK,OAAA,oBAAC,yCAAmB,uBAAK,KAAK,EAAI,EAAlC,CAAkC;YACnF,uBAAuB,EAAE,UAAC,KAAoB,EAAE,SAAuC,IAAK,OAAA,2CAAmB,sBAAM,KAAK,wBAAS,SAAS,EAAG,EAAnD,CAAmD;YAC/I,iBAAiB,EAAE,iBAAiB;SACrC,CAAC;QACJ,0BAAC;KAND,AAMC,CANwC,gBAAgB,GAMxD;IANY,kDAAmB;IAQhC;;OAEG;IACH;QAAsC,4CAAsB;QAA5D;;QAMA,CAAC;QALe,6BAAY,GAAG;YAC3B,YAAY,EAAE,UAAC,KAA6B,IAAK,OAAA,oBAAC,yCAAmB,uBAAK,KAAK,EAAI,EAAlC,CAAkC;YACnF,uBAAuB,EAAE,UAAC,KAAoB,EAAE,SAAuC,IAAK,OAAA,4CAAoB,sBAAM,KAAK,wBAAS,SAAS,EAAG,EAApD,CAAoD;YAChJ,iBAAiB,EAAE,iBAAiB;SACrC,CAAC;QACJ,uBAAC;KAND,AAMC,CANqC,sBAAsB,GAM3D;IANY,4CAAgB;IAQ7B,2BAAkC,IAAY,EAAE,sBAAuC;QACrF,IAAI,gBAAgB,GAAG;YACrB,GAAG,EAAE,IAAI;YACT,WAAW,EAAE,IAAI;YACjB,aAAa,EAAE,GAAG;YAClB,eAAe,EAAE,sBAAsB;SACxC,CAAC;QAEF,EAAE,CAAC,CAAC,sBAAsB,KAAK,kCAAe,CAAC,OAAO,CAAC,CAAC,CAAC;YACvD,gBAAgB,CAAC,aAAa,GAAG,uBAAW,CAAC,IAAI,EAAE,kBAAM,EAAE,CAAC,CAAC;QAC/D,CAAC;QAED,MAAM,CAAC,gBAAgB,CAAC;IAC1B,CAAC;IAbD,8CAaC","file":"components/pickers/PeoplePicker/PeoplePicker.js","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport { getRTL, getInitials } from '../../../Utilities';\r\nimport { BasePicker, BasePickerListBelow } from '../BasePicker';\r\nimport { IBasePickerProps, IBasePickerSuggestionsProps, ValidationState } from '../BasePicker.Props';\r\nimport { SelectedItemDefault } from './PeoplePickerItems/SelectedItemDefault';\r\nimport { IPersonaProps } from '../../../Persona';\r\nimport { SuggestionItemSmall, SuggestionItemNormal } from './PeoplePickerItems/SuggestionItemDefault';\r\nimport './PeoplePicker.scss';\r\nimport { IPeoplePickerItemProps } from './PeoplePickerItems/PeoplePickerItem.Props';\r\n\r\nexport interface IPeoplePickerProps extends IBasePickerProps<IPersonaProps> {\r\n}\r\n\r\nexport class BasePeoplePicker extends BasePicker<IPersonaProps, IPeoplePickerProps> {\r\n}\r\n\r\nexport class MemberListPeoplePicker extends BasePickerListBelow<IPersonaProps, IPeoplePickerProps> {\r\n}\r\n\r\n/**\r\n * Standard People Picker.\r\n */\r\nexport class NormalPeoplePicker extends BasePeoplePicker {\r\n  public static defaultProps = {\r\n    onRenderItem: (props: IPeoplePickerItemProps) => <SelectedItemDefault {...props} />,\r\n    onRenderSuggestionsItem: (props: IPersonaProps, itemProps?: IBasePickerSuggestionsProps) => SuggestionItemNormal({ ...props }, { ...itemProps }),\r\n    createGenericItem: createGenericItem\r\n  };\r\n}\r\n\r\n/**\r\n* Compact layout. It uses small personas when displaying search results.\r\n*/\r\nexport class CompactPeoplePicker extends BasePeoplePicker {\r\n  public static defaultProps = {\r\n    onRenderItem: (props: IPeoplePickerItemProps) => <SelectedItemDefault {...props} />,\r\n    onRenderSuggestionsItem: (props: IPersonaProps, itemProps?: IBasePickerSuggestionsProps) => SuggestionItemSmall({ ...props }, { ...itemProps }),\r\n    createGenericItem: createGenericItem\r\n  };\r\n}\r\n\r\n/**\r\n * MemberList layout. The selected people show up below the search box.\r\n */\r\nexport class ListPeoplePicker extends MemberListPeoplePicker {\r\n  public static defaultProps = {\r\n    onRenderItem: (props: IPeoplePickerItemProps) => <SelectedItemDefault {...props} />,\r\n    onRenderSuggestionsItem: (props: IPersonaProps, itemProps?: IBasePickerSuggestionsProps) => SuggestionItemNormal({ ...props }, { ...itemProps }),\r\n    createGenericItem: createGenericItem\r\n  };\r\n}\r\n\r\nexport function createGenericItem(name: string, currentValidationState: ValidationState) {\r\n  let personaToConvert = {\r\n    key: name,\r\n    primaryText: name,\r\n    imageInitials: '!',\r\n    ValidationState: currentValidationState\r\n  };\r\n\r\n  if (currentValidationState !== ValidationState.warning) {\r\n    personaToConvert.imageInitials = getInitials(name, getRTL());\r\n  }\r\n\r\n  return personaToConvert;\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}
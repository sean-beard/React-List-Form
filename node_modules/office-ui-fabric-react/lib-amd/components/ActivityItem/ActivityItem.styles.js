define(["require", "exports", "../../Styling", "../../Utilities"], function (require, exports, Styling_1, Utilities_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DEFAULT_PERSONA_SIZE = '32px';
    var COMPACT_PERSONA_SIZE = '16px';
    var DEFAULT_ICON_SIZE = '24px';
    var COMPACT_ICON_SIZE = '13px';
    exports.getStyles = Utilities_1.memoizeFunction(function (theme, customStyles) {
        if (theme === void 0) { theme = Styling_1.getTheme(); }
        if (customStyles === void 0) { customStyles = undefined; }
        var ActivityItemStyles = {
            root: [
                theme.fonts.small,
                {
                    display: 'flex',
                    justifyContent: 'flex-start',
                    alignItems: 'flex-start',
                    lineHeight: '17px',
                    boxSizing: 'border-box',
                    color: theme.palette.neutralSecondary
                }
            ],
            isCompactRoot: {
                alignItems: 'center'
            },
            personaContainer: {
                display: 'flex',
                flexWrap: 'wrap',
                minWidth: DEFAULT_PERSONA_SIZE,
                width: DEFAULT_PERSONA_SIZE,
                height: DEFAULT_PERSONA_SIZE
            },
            isCompactPersonaContainer: {
                display: 'inline-flex',
                flexWrap: 'nowrap',
                flexBasis: 'auto',
                height: COMPACT_PERSONA_SIZE,
                width: 'auto',
                minWidth: '0',
                paddingRight: '6px'
            },
            activityTypeIcon: {
                height: DEFAULT_PERSONA_SIZE,
                fontSize: DEFAULT_ICON_SIZE,
                lineHeight: DEFAULT_ICON_SIZE,
            },
            isCompactIcon: {
                height: COMPACT_PERSONA_SIZE,
                fontSize: COMPACT_ICON_SIZE,
                lineHeight: COMPACT_ICON_SIZE,
                color: theme.palette.themePrimary
            },
            activityPersona: {
                display: 'block'
            },
            doublePersona: {
                '&:first-child': {
                    alignSelf: 'flex-end'
                }
            },
            isCompactPersona: {
                display: 'inline-block',
                width: '8px',
                minWidth: '8px',
                overflow: 'visible'
            },
            activityContent: {
                padding: '0 8px'
            },
            activityText: {
                display: 'inline'
            },
            isCompactContent: {
                flex: '1',
                padding: '0 4px',
                whiteSpace: 'nowrap',
                textOverflow: 'ellipsis',
                overflowX: 'hidden'
            },
            commentText: {
                color: theme.palette.neutralPrimary
            },
            timeStamp: [
                theme.fonts.tiny,
                {
                    fontWeight: '400',
                    color: theme.palette.neutralSecondary
                }
            ]
        };
        return Styling_1.mergeStyleSets(ActivityItemStyles, customStyles);
    });
});

//# sourceMappingURL=ActivityItem.styles.js.map

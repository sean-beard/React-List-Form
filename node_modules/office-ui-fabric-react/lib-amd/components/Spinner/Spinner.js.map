{"version":3,"sources":["components/Spinner/Spinner.tsx"],"names":[],"mappings":";;;IAIA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAEjC;QAA6B,mCAAiC;QAA9D;;QAqCA,CAAC;QA/BQ,wBAAM,GAAb;YACM,IAAA,eAAkE,EAAhE,cAAI,EAAE,cAAI,EAAE,gBAAK,EAAE,wBAAS,EAAE,sBAAQ,EAAE,wBAAS,CAAgB,CAAC,mDAAmD;YAC3H,IAAM,aAAa,GAAG,SAAS,IAAI,KAAK,CAAC;YAEzC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,YAAY,EAAE,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC;gBACxD,6BAAK,SAAS,EAAG,eAAG,CAAC,mBAAmB,EAAE,MAAM,CAAC,MAAM;wBAEnD,GAAC,qBAAqB,GAAG,MAAM,CAAC,cAAc,IAAG,IAAI,KAAK,2BAAW,CAAC,MAAM;wBAC5E,GAAC,oBAAoB,GAAG,MAAM,CAAC,aAAa,IAAG,IAAI,KAAK,2BAAW,CAAC,KAAK;wBACzE,GAAC,qBAAqB,GAAG,MAAM,CAAC,cAAc,IAAG,IAAI,KAAK,2BAAW,CAAC,MAAM;wBAC5E,GAAC,oBAAoB,GAAG,MAAM,CAAC,aAAa,IAAG,IAAI,KAAK,2BAAW,CAAC,KAAK;wBACzE,GAAC,qBAAqB,GAAG,MAAM,CAAC,kBAAkB,IAAG,IAAI,KAAK,2BAAW,CAAC,MAAM;wBAChF,GAAC,oBAAoB,GAAG,MAAM,CAAC,iBAAiB,IAAG,IAAI,KAAK,2BAAW,CAAC,KAAK,CAAC,2CAA2C;;4BACzH,GAEE;gBAEJ,KAAK,IAAI,6BAAK,SAAS,EAAG,eAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC,KAAK,CAAC,IAAK,KAAK,CAAQ;gBAGjF,aAAa;oBACb,6BAAK,IAAI,EAAC,QAAQ,eAAa,IAAI,CAAC,KAAK,CAAC,QAAQ;wBAChD,oBAAC,yBAAa;4BACZ,6BAAK,SAAS,EAAG,MAAM,CAAC,gBAAgB,IAAK,aAAa,CAAQ,CACpD,CACZ,CAEJ,CACP,CAAC;;QACJ,CAAC;QAnCa,oBAAY,GAAkB;YAC1C,IAAI,EAAE,2BAAW,CAAC,MAAM;YACxB,QAAQ,EAAE,QAAQ;SACnB,CAAC;QAiCJ,cAAC;KArCD,AAqCC,CArC4B,yBAAa,GAqCzC;IArCY,0BAAO","file":"components/Spinner/Spinner.js","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, css, DelayedRender } from '../../Utilities';\r\nimport { ISpinnerProps, SpinnerType, SpinnerSize } from './Spinner.Props';\r\nimport * as stylesImport from './Spinner.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport class Spinner extends BaseComponent<ISpinnerProps, any> {\r\n  public static defaultProps: ISpinnerProps = {\r\n    size: SpinnerSize.medium,\r\n    ariaLive: 'polite'\r\n  };\r\n\r\n  public render() {\r\n    let { type, size, label, className, ariaLive, ariaLabel } = this.props; // TODO remove deprecated type property at >= 2.0.0\r\n    const statusMessage = ariaLabel || label;\r\n\r\n    return (\r\n      <div className={ css('ms-Spinner', styles.root, className) }>\r\n        <div className={ css('ms-Spinner-circle', styles.circle,\r\n          {\r\n            ['ms-Spinner--xSmall ' + styles.circleIsXSmall]: size === SpinnerSize.xSmall,\r\n            ['ms-Spinner--small ' + styles.circleIsSmall]: size === SpinnerSize.small,\r\n            ['ms-Spinner--medium ' + styles.circleIsMedium]: size === SpinnerSize.medium,\r\n            ['ms-Spinner--large ' + styles.circleIsLarge]: size === SpinnerSize.large,\r\n            ['ms-Spinner--normal ' + styles.circleIsTypeMedium]: type === SpinnerType.normal, // TODO remove deprecated value at >= 2.0.0\r\n            ['ms-Spinner--large ' + styles.circleIsTypeLarge]: type === SpinnerType.large // TODO remove deprecated value at >= 2.0.0\r\n          })\r\n        }>\r\n        </div>\r\n        {\r\n          label && <div className={ css('ms-Spinner-label', styles.label) }>{ label }</div>\r\n        }\r\n        {\r\n          statusMessage &&\r\n          <div role='status' aria-live={ this.props.ariaLive }>\r\n            <DelayedRender>\r\n              <div className={ styles.screenReaderOnly }>{ statusMessage }</div>\r\n            </DelayedRender>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\src"}
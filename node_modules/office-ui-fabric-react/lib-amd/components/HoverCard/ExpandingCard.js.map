{"version":3,"sources":["components/HoverCard/ExpandingCard.tsx"],"names":[],"mappings":"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","file":"components/HoverCard/ExpandingCard.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport {\r\n  BaseComponent,\r\n  css,\r\n  getNativeProps,\r\n  divProperties,\r\n  customizable,\r\n  autobind,\r\n  getRTL\r\n} from '../../Utilities';\r\nimport { IExpandingCardProps, IExpandingCardStyles, ExpandingCardMode } from './ExpandingCard.Props';\r\nimport { Callout, ICallout } from '../../Callout';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport { AnimationClassNames, mergeStyles } from '../../Styling';\r\n\r\nimport { getStyles } from './ExpandingCard.styles';\r\n\r\nexport interface IExpandingCardState {\r\n  firstFrameRendered: boolean;\r\n  needsScroll: boolean;\r\n}\r\n\r\n@customizable(['theme'])\r\nexport class ExpandingCard extends BaseComponent<IExpandingCardProps, IExpandingCardState> {\r\n  public static defaultProps = {\r\n    compactCardHeight: 156,\r\n    expandedCardHeight: 384\r\n  };\r\n\r\n  private _styles: IExpandingCardStyles;\r\n  private _callout: ICallout;\r\n  private _expandedElem: HTMLDivElement;\r\n\r\n  constructor(props: IExpandingCardProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstFrameRendered: false,\r\n      needsScroll: false\r\n    };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    if (this._expandedElem && this._expandedElem.scrollHeight >= (this.props.expandedCardHeight as number)) {\r\n      this.setState({\r\n        needsScroll: true\r\n      });\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this._async.dispose();\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      targetElement,\r\n      id,\r\n      theme,\r\n      styles: customStyles,\r\n      onRenderCompactCard,\r\n      onRenderExpandedCard,\r\n      compactCardHeight,\r\n      expandedCardHeight\r\n    } = this.props;\r\n    this._styles = getStyles(theme!, customStyles);\r\n\r\n    return (\r\n      <Callout\r\n        { ...getNativeProps(this.props, divProperties) }\r\n        componentRef={ this._resolveRef('_callout') }\r\n        className={ css(\r\n          AnimationClassNames.scaleUpIn100,\r\n          this._styles.root\r\n        ) }\r\n        targetElement={ targetElement }\r\n        isBeakVisible={ false }\r\n        directionalHint={ getRTL() ? DirectionalHint.bottomRightEdge : DirectionalHint.bottomLeftEdge }\r\n        directionalHintFixed={ true }\r\n        finalHeight={ compactCardHeight! + expandedCardHeight! }\r\n        minPagePadding={ 24 }\r\n      >\r\n        <div\r\n          onFocusCapture={ this.props.onEnter }\r\n          onBlurCapture={ this.props.onLeave }\r\n          onMouseEnter={ this.props.onEnter }\r\n          onMouseLeave={ this.props.onLeave }\r\n        >\r\n          { this._onRenderCompactCard() }\r\n          { this._onRenderExpandedCard() }\r\n        </div>\r\n      </Callout >\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderCompactCard(): JSX.Element {\r\n    return (\r\n      <div className={ mergeStyles(this._styles.compactCard, { height: this.props.compactCardHeight + 'px' }) as string }>\r\n        { this.props.onRenderCompactCard!(this.props.renderData) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderExpandedCard(): JSX.Element {\r\n    // firstFrameRendered helps in initially setting height of expanded card to 0, even if\r\n    // mode prop is set to ExpandingCardMode.expanded on first render. This is to make sure transition animation takes place.\r\n    this._async.requestAnimationFrame(() => {\r\n      this.setState({\r\n        firstFrameRendered: true\r\n      });\r\n    });\r\n\r\n    return (\r\n      <div className={ mergeStyles(\r\n        this._styles.expandedCard,\r\n        this.props.mode === ExpandingCardMode.expanded && this.state.firstFrameRendered && { height: this.props.expandedCardHeight + 'px' },\r\n        this.state.needsScroll && { 'overflow-y': 'auto' }\r\n      ) as string }\r\n        ref={ this._resolveRef('_expandedElem') }\r\n      >\r\n        <div className={ this._styles.expandedCardScroll as string }>\r\n          { this.props.onRenderExpandedCard && this.props.onRenderExpandedCard(this.props.renderData) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _checkNeedsScroll(): void {\r\n    if (this._expandedElem) {\r\n      this._async.requestAnimationFrame(() => {\r\n        if (this._expandedElem.scrollHeight >= this.props.expandedCardHeight!) {\r\n          this.setState({\r\n            needsScroll: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}
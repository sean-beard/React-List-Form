{"version":3,"sources":["components/Dropdown/Dropdown.tsx"],"names":[],"mappings":"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","file":"components/Dropdown/Dropdown.js","sourcesContent":["import * as React from 'react';\r\nimport { IDropdownProps, IDropdownOption, DropdownMenuItemType } from './Dropdown.Props';\r\nimport { Checkbox } from '../../Checkbox';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport { Callout } from '../../Callout';\r\nimport { Label } from '../../Label';\r\nimport { CommandButton } from '../../Button';\r\nimport { Panel } from '../../Panel';\r\nimport { Icon } from '../../Icon';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { withResponsiveMode, ResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\r\nimport { IWithResponsiveModeState } from '../../utilities/decorators/withResponsiveMode';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  autobind,\r\n  css,\r\n  findIndex,\r\n  getId,\r\n  getNativeProps,\r\n  divProperties\r\n} from '../../Utilities';\r\nimport { SelectableOptionMenuItemType } from '../../utilities/selectableOption/SelectableOption.Props';\r\nimport * as stylesImport from './Dropdown.scss';\r\nconst styles: any = stylesImport;\r\n\r\n// Internal only props interface to support mixing in responsive mode\r\nexport interface IDropdownInternalProps extends IDropdownProps, IWithResponsiveModeState {\r\n\r\n}\r\n\r\nexport interface IDropdownState {\r\n  isOpen?: boolean;\r\n  selectedIndex?: number;\r\n  selectedIndexes?: number[];\r\n}\r\n\r\n@withResponsiveMode\r\nexport class Dropdown extends BaseComponent<IDropdownInternalProps, IDropdownState> {\r\n\r\n  public static defaultProps = {\r\n    options: [] as any[]\r\n  };\r\n\r\n  private static Option: string = 'option';\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance,\r\n    root: HTMLElement,\r\n    focusZone: FocusZone\r\n  };\r\n\r\n  private _focusZone: FocusZone;\r\n  private _dropDown: HTMLDivElement;\r\n  private _dropdownLabel: HTMLElement;\r\n  private _id: string;\r\n\r\n  constructor(props: IDropdownProps) {\r\n    props.options.forEach((option: any) => {\r\n      if (!option.itemType) {\r\n        option.itemType = DropdownMenuItemType.Normal;\r\n      }\r\n    });\r\n    super(props);\r\n\r\n    this._warnDeprecations({\r\n      'isDisabled': 'disabled'\r\n    });\r\n\r\n    this._warnMutuallyExclusive({\r\n      'defaultSelectedKey': 'selectedKey',\r\n      'defaultSelectedKeys': 'selectedKeys',\r\n      'selectedKeys': 'selectedKey',\r\n      'multiSelect': 'defaultSelectedKey',\r\n      'selectedKey': 'multiSelect'\r\n    });\r\n\r\n    this._id = props.id || getId('Dropdown');\r\n\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n    if (this.props.multiSelect) {\r\n      let selectedKeys = props.defaultSelectedKeys !== undefined ? props.defaultSelectedKeys : props.selectedKeys;\r\n      this.state = {\r\n        selectedIndexes: this._getSelectedIndexes(props.options, selectedKeys!)\r\n      };\r\n    } else {\r\n      let selectedKey = props.defaultSelectedKey !== undefined ? props.defaultSelectedKey : props.selectedKey;\r\n      this.state = {\r\n        selectedIndex: this._getSelectedIndex(props.options, selectedKey!)\r\n      };\r\n    }\r\n\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IDropdownProps) {\r\n    // In controlled component usage where selectedKey is provided, update the selectedIndex\r\n    // state if the key or options change.\r\n    if (newProps.selectedKey !== undefined &&\r\n      (newProps.selectedKey !== this.props.selectedKey || newProps.options !== this.props.options)) {\r\n      if (this.props.multiSelect) {\r\n        this.setState({\r\n          selectedIndexes: this._getSelectedIndexes(newProps.options, newProps.selectedKeys)\r\n        });\r\n      } else {\r\n        this.setState({\r\n          selectedIndex: this._getSelectedIndex(newProps.options, newProps.selectedKey)\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IDropdownProps, prevState: IDropdownState) {\r\n    if (prevState.isOpen === true && this.state.isOpen === false) {\r\n      this._dropDown.focus();\r\n    }\r\n  }\r\n\r\n  // Primary Render\r\n  public render() {\r\n    let id = this._id;\r\n    let {\r\n      className,\r\n      label,\r\n      options,\r\n      disabled,\r\n      isDisabled,\r\n      ariaLabel,\r\n      required,\r\n      errorMessage,\r\n      onRenderTitle = this._onRenderTitle,\r\n      onRenderContainer = this._onRenderContainer,\r\n      onRenderPlaceHolder = this._onRenderPlaceHolder\r\n    } = this.props;\r\n    let { isOpen, selectedIndex, selectedIndexes } = this.state;\r\n    let selectedOption = this.props.multiSelect ? selectedIndexes && this._getAllSelectedOptions(options, selectedIndexes)\r\n      : options[selectedIndex as number];\r\n    let divProps = getNativeProps(this.props, divProperties);\r\n\r\n    // Remove this deprecation workaround at 1.0.0\r\n    if (isDisabled !== undefined) {\r\n      disabled = isDisabled;\r\n    }\r\n\r\n    return (\r\n      <div ref='root' className={ css('ms-Dropdown-container') }>\r\n        { label && (\r\n          <Label className={ css('ms-Dropdown-label') } id={ id + '-label' } ref={ this._resolveRef('_dropdownLabel') } required={ required }>{ label }</Label>\r\n        ) }\r\n        <div\r\n          data-is-focusable={ !disabled }\r\n          ref={ this._resolveRef('_dropDown') }\r\n          id={ id }\r\n          tabIndex={ disabled ? -1 : 0 }\r\n          aria-expanded={ isOpen ? 'true' : 'false' }\r\n          role='menu'\r\n          aria-live={ disabled || isOpen ? 'off' : 'assertive' }\r\n          aria-label={ ariaLabel || label }\r\n          aria-describedby={ id + '-option' }\r\n          aria-activedescendant={ isOpen && selectedIndex! >= 0 ? (this._id + '-list' + selectedIndex) : null }\r\n          aria-disabled={ disabled }\r\n          aria-owns={ isOpen ? id + '-list' : null }\r\n          { ...divProps }\r\n          className={ css('ms-Dropdown', styles.root, className, {\r\n            'is-open': isOpen!,\r\n            ['is-disabled ' + styles.rootIsDisabled]: disabled!,\r\n            'is-required ': required!,\r\n          }) }\r\n          onBlur={ this._onDropdownBlur }\r\n          onKeyDown={ this._onDropdownKeyDown }\r\n          onKeyUp={ this._onDropdownKeyUp }\r\n          onClick={ this._onDropdownClick }\r\n        >\r\n          <span\r\n            id={ id + '-option' }\r\n            className={ css(\r\n              'ms-Dropdown-title', styles.title,\r\n              !selectedOption && styles.titleIsPlaceHolder,\r\n              (errorMessage && errorMessage.length > 0 ? styles.titleIsError : null))\r\n            }\r\n            key={ selectedIndex }\r\n            aria-atomic={ true }\r\n            role='textbox'\r\n            aria-readonly='true'\r\n          >\r\n            { // If option is selected render title, otherwise render the placeholder text\r\n              selectedOption ? (\r\n                onRenderTitle(selectedOption, this._onRenderTitle)\r\n              ) :\r\n                onRenderPlaceHolder(this.props, this._onRenderPlaceHolder)\r\n            }\r\n          </span>\r\n          <Icon className={ css('ms-Dropdown-caretDown', styles.caretDown) } iconName='ChevronDown' />\r\n        </div>\r\n        { isOpen && (\r\n          onRenderContainer(this.props, this._onRenderContainer)\r\n        ) }\r\n        {\r\n          errorMessage &&\r\n          <div\r\n            className={ css(styles.errorMessage) }>\r\n            { errorMessage }\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this._dropDown && this._dropDown.tabIndex !== -1) {\r\n      this._dropDown.focus();\r\n    }\r\n  }\r\n\r\n  public setSelectedIndex(index: number) {\r\n    let { onChanged, options, selectedKey, selectedKeys } = this.props;\r\n    let { selectedIndex, selectedIndexes } = this.state;\r\n    let checked: boolean = selectedIndexes ? selectedIndexes.indexOf(index) > -1 : false;\r\n\r\n    index = Math.max(0, Math.min(options.length - 1, index));\r\n\r\n    if (index !== selectedIndex) {\r\n      if (selectedKey === undefined) {\r\n        // Set the selected option if this is an uncontrolled component\r\n        if (this.props.multiSelect) {\r\n          let newIndexes = selectedIndexes ? this._copyArray(selectedIndexes) : [];\r\n          if (checked) {\r\n            let position = newIndexes.indexOf(index);\r\n            if (position > -1) {\r\n              // unchecked the current one\r\n              newIndexes.splice(position, 1);\r\n            }\r\n          } else {\r\n            // add the new selected index into the existing one\r\n            newIndexes.push(index);\r\n          }\r\n          this.setState({\r\n            selectedIndexes: newIndexes\r\n          });\r\n        } else {\r\n          this.setState({\r\n            selectedIndex: index\r\n          });\r\n        }\r\n      }\r\n      if (onChanged) {\r\n        // for single-select, option passed in will always be selected.\r\n        // for multi-select, flip the checked value\r\n        let changedOpt = options[index];\r\n        changedOpt.selected = this.props.multiSelect ? !checked : true;\r\n        onChanged(changedOpt, index);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _copyArray(array: any[]): any[] {\r\n    let newArray = [];\r\n    for (let element of array) {\r\n      newArray.push(element);\r\n    }\r\n    return newArray;\r\n  }\r\n\r\n  /**\r\n   * Finds the next valid Dropdown option and sets the selected index to it.\r\n   * @param stepValue Value of how many items the function should traverse.  Should be -1 or 1.\r\n   * @param index Index of where the search should start\r\n   * @param selectedIndex The selectedIndex Dropdown's state\r\n   * @returns The next valid dropdown option's index\r\n   */\r\n  private _moveIndex(stepValue: number, index: number, selectedIndex: number): number {\r\n    const { options } = this.props;\r\n    // Return selectedIndex if nothing has changed or options is empty\r\n    if (selectedIndex === index || options.length === 0) {\r\n      return selectedIndex;\r\n    }\r\n\r\n    // Set starting index to 0 if index is < 0\r\n    if (index < 0) {\r\n      index = 0;\r\n    }\r\n    // Set starting index to last option index if greater than options.length\r\n    if (index >= options.length) {\r\n      index = options.length - 1;\r\n    }\r\n    let stepCounter = 0;\r\n    // If current index is a header or divider, increment by step\r\n    while (options[index].itemType === DropdownMenuItemType.Header || options[index].itemType === DropdownMenuItemType.Divider) {\r\n      // If stepCounter exceeds length of options, then return selectedIndex (-1)\r\n      if (stepCounter >= options.length) {\r\n        return selectedIndex;\r\n      }\r\n      // If index + stepValue is out of bounds, reverse step direction\r\n      if (index + stepValue < 0 || index + stepValue >= options.length) {\r\n        stepValue *= -1;\r\n      }\r\n      index = index + stepValue;\r\n      stepCounter++;\r\n    }\r\n\r\n    this.setSelectedIndex(index);\r\n    return index;\r\n  }\r\n\r\n  // Render text in dropdown input\r\n  @autobind\r\n  private _onRenderTitle(item: IDropdownOption | IDropdownOption[]): JSX.Element {\r\n    let displayTxt: string = '';\r\n    if (this.props.multiSelect && Array.isArray(item)) {\r\n      for (let i = 0; i < item.length; i++) {\r\n        displayTxt += item[i].text;\r\n        displayTxt += (i === item.length - 1) ? '' : ',';\r\n      }\r\n    } else {\r\n      displayTxt = (item as IDropdownOption).text;\r\n    }\r\n    return <span>{ displayTxt }</span>;\r\n  }\r\n\r\n  // Render placeHolder text in dropdown input\r\n  @autobind\r\n  private _onRenderPlaceHolder(props: IDropdownProps): JSX.Element | null {\r\n    if (!props.placeHolder) {\r\n      return null;\r\n    }\r\n    return <span>{ props.placeHolder }</span>;\r\n  }\r\n\r\n  // Render Callout or Panel container and pass in list\r\n  @autobind\r\n  private _onRenderContainer(props: IDropdownProps): JSX.Element {\r\n    let {\r\n      onRenderList = this._onRenderList,\r\n      responsiveMode,\r\n      calloutProps,\r\n      dropdownWidth\r\n    } = this.props;\r\n\r\n    let isSmall = responsiveMode! <= ResponsiveMode.medium;\r\n\r\n    return (\r\n      isSmall ?\r\n        <Panel\r\n          className={ css('ms-Dropdown-panel', styles.panel) }\r\n          isOpen={ true }\r\n          isLightDismiss={ true }\r\n          onDismissed={ this._onDismiss }\r\n          hasCloseButton={ false }\r\n        >\r\n          { onRenderList(props, this._onRenderList) }\r\n        </Panel>\r\n        :\r\n        <Callout\r\n          isBeakVisible={ false }\r\n          gapSpace={ 0 }\r\n          doNotLayer={ false }\r\n          directionalHintFixed={ true }\r\n          directionalHint={ DirectionalHint.bottomLeftEdge }\r\n          { ...calloutProps }\r\n          className={ css('ms-Dropdown-callout', styles.callout, calloutProps ? calloutProps.className : undefined) }\r\n          targetElement={ this._dropDown }\r\n          onDismiss={ this._onDismiss }\r\n          onPositioned={ this._onPositioned }\r\n          calloutWidth={ dropdownWidth || this._dropDown.clientWidth }\r\n        >\r\n          { onRenderList(props, this._onRenderList) }\r\n        </Callout>\r\n    );\r\n  }\r\n\r\n  // Render List of items\r\n  @autobind\r\n  private _onRenderList(props: IDropdownProps): JSX.Element {\r\n    let {\r\n      onRenderItem = this._onRenderItem\r\n    } = this.props;\r\n\r\n    let id = this._id;\r\n    let { selectedIndex } = this.state;\r\n\r\n    return (\r\n      <FocusZone\r\n        ref={ this._resolveRef('_focusZone') }\r\n        direction={ FocusZoneDirection.vertical }\r\n        defaultActiveElement={ '#' + id + '-list' + selectedIndex }\r\n        id={ id + '-list' }\r\n        className={ css('ms-Dropdown-items', styles.items) }\r\n        aria-labelledby={ id + '-label' }\r\n        onKeyDown={ this._onZoneKeyDown }\r\n        role='listbox'\r\n      >\r\n        { this.props.options.map((item: any, index: number) => onRenderItem({ ...item, index }, this._onRenderItem)) }\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  // Render items\r\n  @autobind\r\n  private _onRenderItem(item: IDropdownOption): JSX.Element | null {\r\n    switch (item.itemType) {\r\n      case SelectableOptionMenuItemType.Divider:\r\n        return this._renderSeparator(item);\r\n      case SelectableOptionMenuItemType.Header:\r\n        return this._renderHeader(item);\r\n      default:\r\n        return this._renderOption(item);\r\n    }\r\n  }\r\n\r\n  // Render separator\r\n  private _renderSeparator(item: IDropdownOption): JSX.Element | null {\r\n    let { index, key } = item;\r\n    if (index! > 0) {\r\n      return <div\r\n        role='separator'\r\n        key={ key }\r\n        className={ css('ms-Dropdown-divider', styles.divider) } />;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private _renderHeader(item: IDropdownOption): JSX.Element {\r\n    const { onRenderOption = this._onRenderOption } = this.props;\r\n    const { key } = item;\r\n    return (\r\n      <div key={ key }\r\n        className={ css('ms-Dropdown-header', styles.header) }>\r\n        { onRenderOption(item, this._onRenderOption) }\r\n      </div>);\r\n  }\r\n\r\n  // Render menu item\r\n  @autobind\r\n  private _renderOption(item: IDropdownOption): JSX.Element {\r\n    let { onRenderOption = this._onRenderOption } = this.props;\r\n    let { selectedIndexes } = this.state;\r\n    let id = this._id;\r\n    let isItemSelected;\r\n    if (this.props.multiSelect) {\r\n      isItemSelected = item.index && selectedIndexes ? selectedIndexes.indexOf(item.index) > -1 : false;\r\n    }\r\n    return (\r\n      !this.props.multiSelect ?\r\n        <CommandButton\r\n          id={ id + '-list' + item.index }\r\n          ref={ Dropdown.Option + item.index }\r\n          key={ item.key }\r\n          data-index={ item.index }\r\n          data-is-focusable={ true }\r\n          className={ css(\r\n            'ms-Dropdown-item', styles.item, {\r\n              ['is-selected ' + styles.itemIsSelected]: this.state.selectedIndex === item.index,\r\n              ['is-disabled ' + styles.itemIsDisabled]: this.props.disabled === true\r\n            }\r\n          ) }\r\n          onClick={ () => this._onItemClick(item.index!) }\r\n          role='option'\r\n          aria-selected={ this.state.selectedIndex === item.index ? 'true' : 'false' }\r\n          ariaLabel={ item.ariaLabel || item.text }\r\n          title={ item.text }\r\n        > { onRenderOption(item, this._onRenderOption) }</CommandButton>\r\n        :\r\n        <Checkbox\r\n          id={ id + '-list' + item.index }\r\n          ref={ Dropdown.Option + item.index }\r\n          key={ item.key }\r\n          data-index={ item.index }\r\n          data-is-focusable={ true }\r\n          onChange={ () => this._onItemClick(item.index!) }\r\n          label={ item.text }\r\n          className={ css(\r\n            'ms-ColumnManagementPanel-checkbox',\r\n            'ms-Dropdown-item', styles.item, {\r\n              ['is-selected ' + styles.itemIsSelected]: isItemSelected,\r\n              ['is-disabled ' + styles.itemIsDisabled]: isItemSelected\r\n            }\r\n          ) }\r\n          role='option'\r\n          aria-selected={ isItemSelected ? 'true' : 'false' }\r\n          checked={ isItemSelected }\r\n        >{ onRenderOption(item, this._onRenderOption) } </Checkbox>\r\n    );\r\n  }\r\n\r\n  // Render content of item (i.e. text/icon inside of button)\r\n  @autobind\r\n  private _onRenderOption(item: IDropdownOption): JSX.Element {\r\n    return <span className={ css('ms-Dropdown-optionText', styles.optionText) }>{ item.text }</span>;\r\n  }\r\n\r\n  @autobind\r\n  private _onPositioned() {\r\n    this._focusZone.focus();\r\n  }\r\n\r\n  private _onItemClick(index: number) {\r\n    this.setSelectedIndex(index);\r\n    if (!this.props.multiSelect) {\r\n      // only close the callout when it's in single-select mode\r\n      this.setState({\r\n        isOpen: false\r\n      });\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onDismiss() {\r\n    this.setState({ isOpen: false });\r\n    this._dropDown.focus();\r\n  }\r\n\r\n  // Get all selected indexes for multi-select mode\r\n  private _getSelectedIndexes(options: IDropdownOption[], selectedKey: any): number[] {\r\n    let selectedIndex: number[] = [];\r\n    if (!selectedKey) {\r\n      return selectedIndex;\r\n    }\r\n    for (let key of selectedKey) {\r\n      selectedIndex.push(this._getSelectedIndex(options, key));\r\n    }\r\n    return selectedIndex;\r\n  }\r\n\r\n  // Get all selected options for multi-select mode\r\n  private _getAllSelectedOptions(options: IDropdownOption[], selectedIndex: number[]) {\r\n    let selectedOptions: IDropdownOption[] = [];\r\n    for (let index of selectedIndex) {\r\n      selectedOptions.push(options[index]);\r\n    }\r\n    if (selectedOptions.length < 1) {\r\n      return undefined;\r\n    }\r\n    return selectedOptions;\r\n  }\r\n\r\n  private _getSelectedIndex(options: IDropdownOption[], selectedKey: string | number): number {\r\n    return findIndex(options, (option => (option.isSelected || option.selected || (selectedKey != null) && option.key === selectedKey)));\r\n  }\r\n\r\n  @autobind\r\n  private _onDropdownBlur(ev: React.FocusEvent<HTMLDivElement>) {\r\n    if (this.state.isOpen) {\r\n      // Do not onBlur when the callout is opened\r\n      return;\r\n    }\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur(ev);\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onDropdownKeyDown(ev: React.KeyboardEvent<HTMLDivElement>) {\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(ev);\r\n      if (ev.preventDefault) {\r\n        return;\r\n      }\r\n    }\r\n    let newIndex: number | undefined;\r\n    const selectedIndex = this.props.multiSelect ? (this.state.selectedIndexes ? this.state.selectedIndexes[0] : -1) : this.state.selectedIndex!;\r\n\r\n    switch (ev.which) {\r\n      case KeyCodes.enter:\r\n        this.setState({\r\n          isOpen: !this.state.isOpen\r\n        });\r\n        break;\r\n\r\n      case KeyCodes.escape:\r\n        if (!this.state.isOpen) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          isOpen: false\r\n        });\r\n        break;\r\n\r\n      case KeyCodes.up:\r\n        if (this.props.multiSelect) {\r\n          this.setState({ isOpen: true });\r\n        } else {\r\n          newIndex = this._moveIndex(-1, selectedIndex - 1, selectedIndex);\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.down:\r\n        if (ev.altKey || ev.metaKey || this.props.multiSelect) {\r\n          this.setState({ isOpen: true });\r\n        } else {\r\n          newIndex = this._moveIndex(1, selectedIndex + 1, selectedIndex);\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.home:\r\n        newIndex = this._moveIndex(1, 0, selectedIndex);\r\n        break;\r\n\r\n      case KeyCodes.end:\r\n        newIndex = this._moveIndex(-1, this.props.options.length - 1, selectedIndex);\r\n        break;\r\n\r\n      case KeyCodes.space:\r\n        // event handled in _onDropdownKeyUp\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n    if (newIndex !== selectedIndex) {\r\n      ev.stopPropagation();\r\n      ev.preventDefault();\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onDropdownKeyUp(ev: React.KeyboardEvent<HTMLDivElement>) {\r\n    if (this.props.onKeyUp) {\r\n      this.props.onKeyUp(ev);\r\n      if (ev.preventDefault) {\r\n        return;\r\n      }\r\n    }\r\n    switch (ev.which) {\r\n      case KeyCodes.space:\r\n        this.setState({\r\n          isOpen: !this.state.isOpen\r\n        });\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n    ev.stopPropagation();\r\n    ev.preventDefault();\r\n  }\r\n\r\n  @autobind\r\n  private _onZoneKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\r\n    switch (ev.which) {\r\n\r\n      case KeyCodes.up:\r\n        if (ev.altKey || ev.metaKey) {\r\n          this.setState({ isOpen: false });\r\n          break;\r\n        }\r\n\r\n        return;\r\n\r\n      case KeyCodes.escape:\r\n        this.setState({ isOpen: false });\r\n        break;\r\n\r\n      case KeyCodes.tab:\r\n        this.setState({ isOpen: false });\r\n        return;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n    ev.stopPropagation();\r\n    ev.preventDefault();\r\n  }\r\n\r\n  @autobind\r\n  private _onDropdownClick(ev: React.MouseEvent<HTMLDivElement>) {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(ev);\r\n      if (ev.preventDefault) {\r\n        return;\r\n      }\r\n    }\r\n    let { disabled, isDisabled } = this.props;\r\n    let { isOpen } = this.state;\r\n\r\n    // Remove this deprecation workaround at 1.0.0\r\n    if (isDisabled !== undefined) {\r\n      disabled = isDisabled;\r\n    }\r\n\r\n    if (!disabled) {\r\n      this.setState({\r\n        isOpen: !isOpen\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}
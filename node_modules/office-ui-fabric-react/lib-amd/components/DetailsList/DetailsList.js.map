{"version":3,"sources":["components/DetailsList/DetailsList.tsx"],"names":[],"mappings":";;;IAuCA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAajC,IAAM,gBAAgB,GAAG,GAAG,CAAC,CAAC,+BAA+B;IAC7D,IAAM,cAAc,GAAG,EAAE,CAAC;IAC1B,IAAM,kBAAkB,GAAG,EAAE,CAAC;IAC9B,IAAM,qBAAqB,GAAG,EAAE,CAAC;IACjC,IAAM,cAAc,GAAG,EAAE,CAAC;IAE1B,IAAM,8BAA8B,GAAG,CAAC,CAAC;IACzC,IAAM,+BAA+B,GAAG,CAAC,CAAC;IAG1C;QAAiC,uCAAmD;QA0BlF,qBAAY,KAAwB;YAApC,YACE,kBAAM,KAAK,CAAC,SAiCb;YA/BC,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,KAAI,CAAC,wBAAwB,GAAG,KAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACzE,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACzD,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACjE,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACrD,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAC3D,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAC3D,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAC/D,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACzD,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAC3D,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACnD,KAAI,CAAC,0BAA0B,GAAG,KAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAE7E,KAAI,CAAC,KAAK,GAAG;gBACX,SAAS,EAAE,CAAC;gBACZ,eAAe,EAAE,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;gBAChD,UAAU,EAAE,KAAK,CAAC,UAAU;gBAC5B,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,WAAW,EAAE,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,oBAAoB;gBACtE,mBAAmB,EAAE,KAAK,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,oBAAoB;aAChF,CAAC;YAEF,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,IAAI,IAAI,iBAAS,CAAC,EAAE,kBAAkB,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;YAC5G,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAyB,EAAE,KAAK,CAAC,CAAC;YACjE,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC,cAAc,GAAG,IAAI,+BAAc,CAAC;gBAC/D,SAAS,EAAE,KAAI,CAAC,UAAU;gBAC1B,oBAAoB,EAAE,KAAK,CAAC,oBAAoB;aACjD,CAAC,GAAG,IAAI,CAAC;YACV,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC,mBAAmB,CAAC;;QACxD,CAAC;QAEM,0CAAoB,GAA3B;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;YACjC,CAAC;QACH,CAAC;QAEM,wCAAkB,GAAzB,UAA0B,SAAc,EAAE,SAAc;YACtD,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5C,IAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBACxD,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACR,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;gBACpC,CAAC;YACH,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC;QAEM,+CAAyB,GAAhC,UAAiC,QAA2B;YACtD,IAAA,eAOU,EANZ,0CAAkB,EAClB,gBAAK,EACL,kBAAM,EACN,gCAAa,EACb,oBAAO,EACP,sBAAQ,CACK;YACT,IAAA,kCAAU,CAAgB;YAChC,IAAI,oBAAoB,GAAG,CAAC,QAAQ,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,QAAQ,CAAC,MAAM,KAAK,SAAS,CAAC;YACzF,IAAI,kBAAkB,GAAG,KAAK,CAAC;YAE/B,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,KAAK,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;gBAClD,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;gBACjC,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;gBAC1C,kBAAkB,GAAG,IAAI,CAAC;YAC5B,CAAC;YAED,EAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,mBAAmB,CAAC;YAC3D,CAAC;YAED,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;YACjE,CAAC;YAED,EAAE,CAAC,CACD,QAAQ,CAAC,kBAAkB,KAAK,kBAAkB;gBAClD,QAAQ,CAAC,OAAO,KAAK,OAAO;gBAC5B,QAAQ,CAAC,QAAS,CAAC,KAAK,KAAK,QAAS,CAAC,KACzC,CAAC,CAAC,CAAC;gBACD,kBAAkB,GAAG,IAAI,CAAC;YAC5B,CAAC;YAED,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;YAEhD,EAAE,CAAC,CAAC,QAAQ,CAAC,aAAa,KAAK,aAAa,CAAC,CAAC,CAAC;gBAC7C,kBAAkB,GAAG,IAAI,CAAC;YAC5B,CAAC;YAED,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3B,CAAC;QACH,CAAC;QAEM,4BAAM,GAAb;YAAA,iBAkKC;YAjKK,IAAA,eA2BU,EA1BZ,kDAAsB,EACtB,gEAA6B,EAC7B,4DAA2B,EAC3B,wBAAS,EACT,0CAAkB,EAClB,oBAAO,EACP,gCAAa,EACb,kCAAc,EACd,kBAAM,EACN,0BAAU,EACV,gBAAK,EACL,oCAAe,EACf,gCAAa,EACb,wCAAiB,EACjB,4CAAmB,EACnB,wDAAyB,EACzB,gCAAa,EACb,kEAA8B,EAC9B,wBAAS,EACT,sCAAgB,EAChB,0CAAkB,EAClB,kCAAkC,EAAlC,uDAAkC,EAClC,kBAAM,EACN,wBAAS,EACT,8BAAY,EACZ,0CAAkB,CACL;YACX,IAAA,eAMU,EALZ,oCAAe,EACf,4BAAW,EACX,0BAAU,EACV,sBAAQ,EACR,4CAAmB,CACN;YACX,IAAA,SAGI,EAFN,yBAAqB,EACrB,mCAA+B,CACxB;YACT,IAAI,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACrD,IAAM,mBAAmB,sBACvB,oBAAoB,EAAE,QAAQ,GAAG,CAAC,GAAG,8BAA8B,EACnE,qBAAqB,EAAE,QAAQ,GAAG,CAAC,GAAG,+BAA+B,EACrE,MAAM,QAAA,IACH,SAAS,CACb,CAAC;YACF,IAAI,mBAAmB,GAAG,mCAAmB,CAAC,IAAI,CAAC,CAAC,yBAAyB;YAC7E,EAAE,CAAC,CAAC,aAAa,KAAK,qBAAa,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC3C,mBAAmB,GAAG,mCAAmB,CAAC,MAAM,CAAC;YACnD,CAAC;YACD,EAAE,CAAC,CAAC,aAAa,KAAK,qBAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC7C,uGAAuG;gBACvG,IAAI,6BAA6B,GAAG,UAAU,IAAI,UAAU,CAAC,WAAW,IAAI,UAAU,CAAC,WAAW,CAAC,6BAA6B,CAAC;gBACjI,EAAE,CAAC,CAAC,6BAA6B,KAAK,SAAS,CAAC,CAAC,CAAC;oBAChD,6BAA6B,GAAG,IAAI,CAAC;gBACvC,CAAC;gBACD,IAAI,kBAAkB,GAAG,6BAA6B,IAAI,CAAC,MAAM,IAAI,mBAAmB,CAAC;gBACzF,mBAAmB,GAAG,kBAAkB,GAAG,mCAAmB,CAAC,OAAO,GAAG,mCAAmB,CAAC,MAAM,CAAC;YACtG,CAAC;YAED,EAAE,CAAC,CAAC,kBAAkB,KAAK,sCAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;gBACrD,mBAAmB,GAAG,mCAAmB,CAAC,IAAI,CAAC;YACjD,CAAC;YAGC,IAAA,qCAAmD,EAAnD,wEAAmD,CACtC;YAEf,MAAM,CAAC;YACL,kGAAkG;YAClG,aAAa;YACb,8CACE,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAC/B,SAAS,EAAG,eAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,IAAI,EAAE,SAAS;wBACtD,UAAU,EAAE,UAAU,KAAK,yCAAqB,CAAC,YAAY;;oBAC7D,GAAC,2BAA2B,GAAG,MAAM,CAAC,2BAA2B,IAAG,aAAa,KAAK,iCAAa,CAAC,qBAAqB;oBACzH,6BAAyB,GAAE,CAAC,CAAC,OAAO;oBACpC,GAAC,MAAM,CAAC,WAAW,IAAG,CAAC,CAAC,OAAO;wBAC/B,uBACgB,aAAa,wBACZ,OAAO,gBACb,SAAS,IACjB,CAAC,0BAA0B,GAAG,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,EAAE,CAAC;gBAChE,6BAAK,IAAI,EAAC,MAAM,gBACD,gBAAgB,mBACb,CAAC,eAAe,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,mBACtD,CAAC,mBAAmB,KAAK,mCAAmB,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,eAAe,GAAG,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,mBAC7G,MAAM;oBACpB,6BAAK,SAAS,EAAG,IAAI,CAAC,gBAAgB,EAAG,IAAI,EAAC,cAAc,IACxD,eAAe,IAAI,qBAAqB,CAAC;wBACzC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;wBACzC,aAAa,EAAE,aAAc;wBAC7B,UAAU,EAAE,UAAW;wBACvB,SAAS,EAAE,SAAS;wBACpB,OAAO,EAAE,eAA4B;wBACrC,aAAa,EAAE,mBAAmB;wBAClC,mBAAmB,EAAE,yBAAyB;wBAC9C,eAAe,EAAE,IAAI,CAAC,gBAAgB;wBACtC,uBAAuB,EAAE,IAAI,CAAC,wBAAwB;wBACtD,mBAAmB,EAAE,IAAI,CAAC,oBAAoB;wBAC9C,iBAAiB,EAAE,iBAAiB;wBACpC,cAAc,EAAE,WAAW;wBAC3B,mBAAmB,EAAE,IAAI,CAAC,iBAAiB;wBAC3C,SAAS,EAAE,sBAAsB;wBACjC,6BAA6B,EAAE,6BAA6B;wBAC5D,2BAA2B,EAAE,2BAA2B;wBACxD,mBAAmB,EAAE,mBAAmB;wBACxC,qBAAqB,EAAE,UAAU,IAAI,UAAU,CAAC,qBAAqB;qBACtE,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAC3B;oBACN,6BAAK,SAAS,EAAG,IAAI,CAAC,iBAAiB,EAAG,IAAI,EAAC,cAAc;wBAC3D,oBAAC,qBAAS,IACR,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EACpC,SAAS,EAAG,MAAM,CAAC,SAAS,EAC5B,SAAS,EAAG,8BAAkB,CAAC,QAAQ,EACvC,oBAAoB,EAAG,YAAY,EACnC,sBAAsB,EAAG,IAAI,CAAC,mBAAmB;4BAEjD,oBAAC,qBAAa,IACZ,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,EACxC,SAAS,EAAG,SAAS,EACrB,8BAA8B,EAAG,8BAA8B,EAC/D,aAAa,EAAG,aAAa,EAC7B,aAAa,EAAG,aAAa,EAC7B,iBAAiB,EAAG,iBAAiB,IAEnC,MAAM,GAAG,CACT,oBAAC,yBAAW,IACV,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EACtC,MAAM,EAAG,MAAM,EACf,UAAU,EAAG,UAAU,EACvB,KAAK,EAAG,KAAK,EACb,YAAY,EAAG,IAAI,CAAC,aAAa,EACjC,SAAS,EAAG,SAAS,EACrB,aAAa,EAAG,aAAa,EAC7B,cAAc,EAAG,cAAc,EAC/B,cAAc,EAAG,cAAgC,EACjD,gBAAgB,EAAG,kBAAkB,EACrC,SAAS,EAAG,mBAAmB,EAC/B,yBAAyB,EAAG,IAAI,CAAC,0BAA0B,EAC3D,YAAY,EAAG,YAAY,EAC3B,kBAAkB,EAAG,kBAAkB,GACvC,CACH,GAAG,CACA,oBAAC,WAAI,qBACH,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAC/B,IAAI,EAAC,cAAc,EACnB,KAAK,EAAG,KAAK,EACb,YAAY,EAAG,UAAC,IAAI,EAAE,SAAS,IAAK,OAAA,KAAI,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,EAAE,SAAmB,CAAC,EAAhD,CAAgD,EACpF,YAAY,EAAG,YAAY,EAC3B,kBAAkB,EAAG,kBAAkB,IAClC,mBAAmB,EACxB,CACH,CAEW,CACN,CACR,CACF,CACF,CACP,CAAC;;QACJ,CAAC;QAEM,iCAAW,GAAlB;YACE,iBAAM,WAAW,WAAE,CAAC;YACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;QAGS,kCAAY,GAAtB,UAAuB,KAAuB,EAAE,aAAmB;YACjE,MAAM,CAAC,oBAAC,uBAAU,uBAAM,KAAK,EAAK,CAAC;QACrC,CAAC;QAGO,4CAAsB,GAA9B,UAA+B,kBAAuC,EAAE,aAAoD;YAC1H,MAAM,CAAC,oBAAC,6BAAa,uBAAM,kBAAkB,EAAK,CAAC;QACrD,CAAC;QAEO,mCAAa,GAArB,UAAsB,YAAoB,EAAE,IAAS,EAAE,KAAa;YAC9D,IAAA,eAaU,EAZZ,oBAAO,EACP,kCAAc,EACd,wCAAoC,EACpC,4CAAmB,EACnB,0CAAkB,EAClB,mBAA+B,EAA/B,oDAA+B,EAC/B,gCAAa,EACb,sBAAQ,EACR,0CAAkB,EAClB,oCAAe,EACf,8CAAoB,EACpB,0BAAU,CACG;YACf,IAAI,qBAAqB,GAAG,UAAU,IAAI,UAAU,CAAC,qBAAqB,CAAC;YAC3E,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;YAChC,IAAI,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;YAExC,IAAA,oCAAwB,CACX;YAEf,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;oBACxB,mBAAmB,CAAC,KAAK,CAAC,CAAC;gBAC7B,CAAC;gBAED,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAED,MAAM,CAAC,WAAW,CAAC;gBACjB,IAAI,EAAE,IAAI;gBACV,SAAS,EAAE,KAAK;gBAChB,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAoB;gBAC7B,iBAAiB,EAAE,YAAY;gBAC/B,aAAa,EAAE,aAAc;gBAC7B,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI,CAAC,cAAc;gBAC/B,aAAa,EAAE,IAAI,CAAC,iBAAiB;gBACrC,kBAAkB,EAAE,kBAAkB;gBACtC,gBAAgB,EAAE,gBAAgB;gBAClC,cAAc,EAAE,cAAc;gBAC9B,cAAc,EAAE,cAAe;gBAC/B,QAAQ,EAAE,QAAQ;gBAClB,kBAAkB,EAAE,kBAAkB;gBACtC,qBAAqB,EAAE,qBAAqB;gBAC5C,eAAe,EAAE,eAAe;gBAChC,oBAAoB,EAAE,oBAAoB;aAC3C,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACxB,CAAC;QAEO,gDAA0B,GAAlC,UAAmC,mBAA4B;YAC7D,IAAI,CAAC,QAAQ,CAAC,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,CAAC,CAAC;QAC9D,CAAC;QAEO,8CAAwB,GAAhC,UAAiC,MAAe,EAAE,QAAiB;YACjE,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QACxC,CAAC;QAEO,sCAAgB,GAAxB,UAAyB,EAAoC;YAC3D,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,kBAAkB,CAAC,CAAC,CAAC;gBAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC/C,EAAE,CAAC,cAAc,EAAE,CAAC;oBACpB,EAAE,CAAC,eAAe,EAAE,CAAC;gBACvB,CAAC;YACH,CAAC;QACH,CAAC;QAEO,uCAAiB,GAAzB,UAA0B,EAAoC;YAC5D,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,gBAAgB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBACzC,EAAE,CAAC,cAAc,EAAE,CAAC;oBACpB,EAAE,CAAC,eAAe,EAAE,CAAC;gBACvB,CAAC;YACH,CAAC;QACH,CAAC;QAEO,2CAAqB,GAA7B;YACQ,IAAA,0BAAM,CAAgB;YAC5B,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,aAAa,GAAG,MAAM,CAAC;YAE3B,OAAO,aAAa,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACjD,KAAK,EAAE,CAAC;gBACR,aAAa,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAC5C,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAEO,oCAAc,GAAtB,UAAuB,GAAe;YAC9B,IAAA,wCAAa,CAAgB;YACnC,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC;YAEhC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,sCAAsC;YAErE,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;YAElC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClB,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACvC,CAAC;QACH,CAAC;QAEO,6CAAuB,GAA/B,UAAgC,GAAe;YAC7C,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC;YAChC,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACnF,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBACxB,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;gBACxC,CAAC;gBACD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;oBACrB,GAAG,CAAC,KAAK,EAAE,CAAC;gBACd,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEN,OAAO,IAAI,CAAC,oBAAoB,CAAC;YACnC,CAAC;QACH,CAAC;QAEO,uCAAiB,GAAzB,UAA0B,GAAe;YACjC,IAAA,8CAAgB,CAAgB;YACtC,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC;YAEhC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACrB,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC;QAEO,uCAAiB,GAAzB,UAA0B,SAAkB;YAC1C,IAAI,CAAC,QAAQ,CAAC;gBACZ,WAAW,EAAE,SAAS;aACvB,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;YACjD,CAAC;QACH,CAAC;QAEO,uCAAiB,GAAzB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;YAClC,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YAC3B,CAAC;QACH,CAAC;QAEO,oCAAc,GAAtB,UAAuB,QAA2B,EAAE,WAAqB,EAAE,UAAkC;YAC3G,IAAI,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;YAC5E,IAAA,yCAAoB,CAA0B;YAEpD,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,QAAQ,CAAC;oBACZ,eAAe,EAAE,eAAe;oBAChC,SAAS,EAAE,aAAa;oBACxB,UAAU,EAAE,UAAU;iBACvB,CAAC,CAAC;YACL,CAAC;QACH,CAAC;QAED,yEAAyE;QACjE,yCAAmB,GAA3B,UAA4B,QAA2B,EAAE,WAAqB,EAAE,UAAkC;YAAlH,iBAwCC;YAvCO,IAAA,6BAAmB,EAAE,yBAAe,EAAE,sCAAa,CAAc;YACjE,IAAA,uCAAoB,CAAwB;YAElD,EAAE,CAAC,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC7B,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;YACnC,CAAC;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;YACnD,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YACvD,IAAI,iBAAiB,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,SAAS,CAAC;YAE9E,EAAE,CAAC,CAAC,aAAa,KAAK,SAAS,CAAC,CAAC,CAAC;gBAChC,EAAE,CAAC,CAAC,CAAC,WAAW;oBACd,SAAS,KAAK,aAAa;oBAC3B,iBAAiB,KAAK,aAAa;oBACnC,CAAC,CAAC,OAAO,IAAI,UAAU,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC;oBACvC,MAAM,CAAC,SAAS,CAAC;gBACnB,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAS,CAAC,KAAK,CAAC;YAC7C,CAAC;YAED,UAAU,GAAG,UAAU,IAAI,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAExD,IAAI,eAA0B,CAAC;YAE/B,EAAE,CAAC,CAAC,UAAU,KAAK,yCAAqB,CAAC,YAAY,CAAC,CAAC,CAAC;gBACtD,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;YACtD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YACnF,CAAC;YAED,8CAA8C;YAC9C,eAAe,CAAC,OAAO,CAAC,UAAA,MAAM;gBAC5B,IAAI,SAAS,GAAG,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAa,CAAC;gBACvG,SAAS,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;YACrD,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,eAAe,CAAC;QACzB,CAAC;QAED,2FAA2F;QACnF,sCAAgB,GAAxB,UAAyB,UAAqB;YAA9C,iBAUC;YATC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,MAAM;gBAC1B,IAAI,SAAS,GAAG,kBAAM,CAAC,EAAE,EAAE,MAAM,EAAE,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gBAEtE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;oBAC/B,SAAS,CAAC,eAAe,GAAG,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,QAAQ,IAAI,gBAAgB,CAAC;gBAC3F,CAAC;gBAED,MAAM,CAAC,SAAS,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC;QAED,gEAAgE;QACxD,0CAAoB,GAA5B,UAA6B,UAAqB,EAAE,aAAqB,EAAE,KAAwB;YAE/F,IAAA,mCAAa,EACb,6CAAkB,EAClB,qBAAM,CACE;YACV,IAAI,YAAY,GAAG,qBAAqB,CAAC;YACzC,IAAI,aAAa,GAAG,CAAC,aAAa,KAAK,qBAAa,CAAC,IAAI,IAAI,kBAAkB,KAAK,sCAAkB,CAAC,MAAM,CAAC,GAAG,cAAc,GAAG,CAAC,CAAC;YACpI,IAAI,gBAAgB,GAAG,MAAM,GAAG,kBAAkB,GAAG,CAAC,CAAC;YACvD,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC,iDAAiD;YACrE,IAAI,cAAc,GAAG,aAAa,GAAG,CAAC,YAAY,GAAG,aAAa,GAAG,gBAAgB,CAAC,CAAC;YACvF,IAAI,eAAe,GAAc,UAAU,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,CAAC;gBACxD,IAAI,SAAS,GAAG,kBAAM,CACpB,EAAE,EACF,MAAM,EACN;oBACE,eAAe,EAAE,MAAM,CAAC,QAAQ,IAAI,gBAAgB;iBACrD,CAAC,CAAC;gBAEL,UAAU,IAAI,SAAS,CAAC,eAAe,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,qBAAqB,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,GAAG,cAAc,GAAG,CAAC,CAAC,CAAC;gBAEvH,MAAM,CAAC,SAAS,CAAC;YACnB,CAAC,CAAC,CAAC;YAEH,IAAI,SAAS,GAAG,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC;YAE3C,8BAA8B;YAC9B,OAAO,SAAS,GAAG,CAAC,IAAI,UAAU,GAAG,cAAc,EAAE,CAAC;gBACpD,IAAI,MAAM,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC;gBAExC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;oBACzB,UAAU,IAAI,MAAM,CAAC,eAAgB,GAAG,qBAAqB,CAAC;oBAC9D,eAAe,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBACvC,CAAC;gBACD,SAAS,EAAE,CAAC;YACd,CAAC;YAED,+EAA+E;YAC/E,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,IAAI,UAAU,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC/E,IAAI,MAAM,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAC/B,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,IAAI,QAAQ,IAAI,gBAAgB,CAAC;gBAC/D,IAAI,SAAS,GAAG,cAAc,GAAG,UAAU,CAAC;gBAC5C,IAAI,SAAS,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,GAAG,QAAQ,CAAC,GAAG,SAAS,CAAC;gBAEhF,0CAA0C;gBAC1C,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvC,SAAS,GAAG,SAAS,CAAC;gBACxB,CAAC;gBAED,MAAM,CAAC,eAAe,GAAI,MAAM,CAAC,eAA0B,GAAG,SAAS,CAAC;gBACxE,UAAU,IAAI,SAAS,CAAC;YAC1B,CAAC;YAED,yEAAyE;YACzE,EAAE,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC3B,eAAe,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;YAClE,CAAC;YAED,MAAM,CAAC,eAAe,CAAC;QACzB,CAAC;QAEO,sCAAgB,GAAxB,UAAyB,cAAuB,EAAE,QAAgB;YAChE,IAAI,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,IAAI,gBAAgB,EAAE,QAAQ,CAAC,CAAC;YACzF,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;YAChE,CAAC;YACD,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,eAAe,GAAG,kBAAkB,CAAC;YAC/E,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,yCAAqB,CAAC,YAAY,CAAC,CAAC;YAC1E,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;QAED;;;;;;;;;WASG;QACK,0CAAoB,GAA5B,UAA6B,MAAe,EAAE,WAAmB;YAAjE,iBAiBC;YAhBC,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC;YAEtD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACjC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACzC,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;oBACvC,UAAU,CAAC,WAAW,CAAC,WAAW,EAAE,UAAC,KAAa;wBAChD,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;wBAC3B,KAAK,EAAE,CAAC;wBACR,EAAE,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC;4BACzB,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;wBACrC,CAAC;oBACH,CAAC,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;QACH,CAAC;QAED;;;;;;;WAOG;QACK,yCAAmB,GAA3B,UAA4B,EAAgB,EAAE,EAAkC;YAC1E,IAAA,eAA2C,EAAzC,gBAAK,EAAE,4CAAmB,CAAgB;YAEhD,EAAE,CAAC,CAAC,CAAC,mBAAmB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC;YACT,CAAC;YACD,IAAI,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACvD,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;gBACf,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;YAC/C,CAAC;QACH,CAAC;QAjoBa,wBAAY,GAAG;YAC3B,UAAU,EAAE,yCAAqB,CAAC,SAAS;YAC3C,aAAa,EAAE,qBAAa,CAAC,QAAQ;YACrC,aAAa,EAAE,iCAAa,CAAC,qBAAqB;YAClD,kBAAkB,EAAE,sCAAkB,CAAC,OAAO;YAC9C,eAAe,EAAE,IAAI;SACtB,CAAC;QAkSF;YADC,oBAAQ;uDAGR;QAGD;YADC,oBAAQ;iEAGR;QAhTU,WAAW;YADvB,2BAAY;WACA,WAAW,CAmoBvB;QAAD,kBAAC;KAnoBD,AAmoBC,CAnoBgC,yBAAa,GAmoB7C;IAnoBY,kCAAW;IAqoBxB,sBACE,KAAY,EACZ,gBAA0B,EAC1B,aAA2E,EAC3E,eAAwB,EACxB,kBAA4B,EAC5B,gBAAyB,EACzB,WAAqB;QACrB,IAAI,OAAO,GAAc,EAAE,CAAC;QAE5B,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,IAAI,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,aAAa,GAAG,IAAI,CAAC;YAEzB,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,SAAS,CAAC,CAAC,CAAC;gBAC/B,EAAE,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACvC,OAAO,CAAC,IAAI,CAAC;wBACX,GAAG,EAAE,QAAQ;wBACb,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,QAAQ;wBACnB,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,GAAG;wBACb,aAAa,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM;wBAC/B,WAAW,EAAE,CAAC,WAAW,KAAK,SAAS,CAAC,GAAG,KAAK,GAAG,WAAW;wBAC9D,QAAQ,EAAE,eAAe,KAAK,QAAQ;wBACtC,kBAAkB,EAAE,CAAC,CAAC,kBAAkB;wBACxC,WAAW,EAAE,KAAK;wBAClB,iBAAiB,EAAE,qCAAiB,CAAC,SAAS;wBAC9C,WAAW,EAAE,gBAAgB;wBAC7B,aAAa,EAAE,aAAa;wBAC5B,SAAS,EAAE,gBAAgB,KAAK,QAAQ;qBACzC,CAAC,CAAC;oBAEH,aAAa,GAAG,KAAK,CAAC;gBACxB,CAAC;YACH,CAAC;QACH,CAAC;QAED,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAvCD,oCAuCC;IAED,sBAAsB,KAAuC;QAC3D,MAAM,CAAC,KAAK,CAAC,KAAK,KAAK,6BAAiB,gBAAgB,CAAC;IAC3D,CAAC","file":"components/DetailsList/DetailsList.js","sourcesContent":["\r\nimport * as React from 'react';\r\nimport * as stylesImport from './DetailsList.scss';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  assign,\r\n  autobind,\r\n  css,\r\n  getRTLSafeKeyCode,\r\n  IRenderFunction\r\n} from '../../Utilities';\r\nimport {\r\n  CheckboxVisibility,\r\n  ColumnActionsMode,\r\n  ConstrainMode,\r\n  DetailsListLayoutMode,\r\n  IColumn,\r\n  IDetailsList,\r\n  IDetailsListProps,\r\n} from '../DetailsList/DetailsList.Props';\r\nimport { DetailsHeader, IDetailsHeader, SelectAllVisibility, IDetailsHeaderProps } from '../DetailsList/DetailsHeader';\r\nimport { DetailsRow, IDetailsRowProps } from '../DetailsList/DetailsRow';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport {\r\n  IObjectWithKey,\r\n  ISelection,\r\n  Selection,\r\n  SelectionMode,\r\n  SelectionZone,\r\n} from '../../utilities/selection/index';\r\n\r\nimport { DragDropHelper } from '../../utilities/dragdrop/DragDropHelper';\r\nimport { GroupedList } from '../../GroupedList';\r\nimport { List, IListProps } from '../../List';\r\nimport { withViewport } from '../../utilities/decorators/withViewport';\r\n\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IDetailsListState {\r\n  lastWidth?: number;\r\n  lastSelectionMode?: SelectionMode;\r\n  adjustedColumns?: IColumn[];\r\n  layoutMode?: DetailsListLayoutMode;\r\n  isCollapsed?: boolean;\r\n  isSizing?: boolean;\r\n  isDropping?: boolean;\r\n  isSomeGroupExpanded?: boolean;\r\n}\r\n\r\nconst MIN_COLUMN_WIDTH = 100; // this is the global min width\r\nconst CHECKBOX_WIDTH = 36;\r\nconst GROUP_EXPAND_WIDTH = 36;\r\nconst DEFAULT_INNER_PADDING = 16;\r\nconst ISPADDED_WIDTH = 24;\r\n\r\nconst DEFAULT_RENDERED_WINDOWS_AHEAD = 2;\r\nconst DEFAULT_RENDERED_WINDOWS_BEHIND = 2;\r\n\r\n@withViewport\r\nexport class DetailsList extends BaseComponent<IDetailsListProps, IDetailsListState> implements IDetailsList {\r\n  public static defaultProps = {\r\n    layoutMode: DetailsListLayoutMode.justified,\r\n    selectionMode: SelectionMode.multiple,\r\n    constrainMode: ConstrainMode.horizontalConstrained,\r\n    checkboxVisibility: CheckboxVisibility.onHover,\r\n    isHeaderVisible: true\r\n  };\r\n\r\n  // References\r\n  private _root: HTMLElement;\r\n  private _header: IDetailsHeader;\r\n  private _groupedList: GroupedList;\r\n  private _list: List;\r\n  private _focusZone: FocusZone;\r\n  private _selectionZone: SelectionZone;\r\n\r\n  private _selection: ISelection;\r\n  private _activeRows: { [key: string]: DetailsRow };\r\n  private _dragDropHelper: DragDropHelper | null;\r\n  private _initialFocusedIndex: number | undefined;\r\n\r\n  private _columnOverrides: {\r\n    [key: string]: IColumn;\r\n  };\r\n\r\n  constructor(props: IDetailsListProps) {\r\n    super(props);\r\n\r\n    this._activeRows = {};\r\n    this._columnOverrides = {};\r\n    this._onColumnIsSizingChanged = this._onColumnIsSizingChanged.bind(this);\r\n    this._onColumnResized = this._onColumnResized.bind(this);\r\n    this._onColumnAutoResized = this._onColumnAutoResized.bind(this);\r\n    this._onRowDidMount = this._onRowDidMount.bind(this);\r\n    this._onRowWillUnmount = this._onRowWillUnmount.bind(this);\r\n    this._onToggleCollapse = this._onToggleCollapse.bind(this);\r\n    this._onActiveRowChanged = this._onActiveRowChanged.bind(this);\r\n    this._onHeaderKeyDown = this._onHeaderKeyDown.bind(this);\r\n    this._onContentKeyDown = this._onContentKeyDown.bind(this);\r\n    this._onRenderCell = this._onRenderCell.bind(this);\r\n    this._onGroupExpandStateChanged = this._onGroupExpandStateChanged.bind(this);\r\n\r\n    this.state = {\r\n      lastWidth: 0,\r\n      adjustedColumns: this._getAdjustedColumns(props),\r\n      layoutMode: props.layoutMode,\r\n      isSizing: false,\r\n      isDropping: false,\r\n      isCollapsed: props.groupProps && props.groupProps.isAllGroupsCollapsed,\r\n      isSomeGroupExpanded: props.groupProps && !props.groupProps.isAllGroupsCollapsed\r\n    };\r\n\r\n    this._selection = props.selection || new Selection({ onSelectionChanged: undefined, getKey: props.getKey });\r\n    this._selection.setItems(props.items as IObjectWithKey[], false);\r\n    this._dragDropHelper = props.dragDropEvents ? new DragDropHelper({\r\n      selection: this._selection,\r\n      minimumPixelsForDrag: props.minimumPixelsForDrag\r\n    }) : null;\r\n    this._initialFocusedIndex = props.initialFocusedIndex;\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this._dragDropHelper) {\r\n      this._dragDropHelper.dispose();\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: any, prevState: any) {\r\n    if (this._initialFocusedIndex !== undefined) {\r\n      const row = this._activeRows[this._initialFocusedIndex];\r\n      if (row) {\r\n        this._setFocusToRowIfPending(row);\r\n      }\r\n    }\r\n\r\n    if (this.props.onDidUpdate) {\r\n      this.props.onDidUpdate(this);\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IDetailsListProps) {\r\n    let {\r\n      checkboxVisibility,\r\n      items,\r\n      setKey,\r\n      selectionMode,\r\n      columns,\r\n      viewport\r\n    } = this.props;\r\n    let { layoutMode } = this.state;\r\n    let shouldResetSelection = (newProps.setKey !== setKey) || newProps.setKey === undefined;\r\n    let shouldForceUpdates = false;\r\n\r\n    if (newProps.layoutMode !== this.props.layoutMode) {\r\n      layoutMode = newProps.layoutMode;\r\n      this.setState({ layoutMode: layoutMode });\r\n      shouldForceUpdates = true;\r\n    }\r\n\r\n    if (shouldResetSelection) {\r\n      this._initialFocusedIndex = newProps.initialFocusedIndex;\r\n    }\r\n\r\n    if (newProps.items !== items) {\r\n      this._selection.setItems(newProps.items, shouldResetSelection);\r\n    }\r\n\r\n    if (\r\n      newProps.checkboxVisibility !== checkboxVisibility ||\r\n      newProps.columns !== columns ||\r\n      newProps.viewport!.width !== viewport!.width\r\n    ) {\r\n      shouldForceUpdates = true;\r\n    }\r\n\r\n    this._adjustColumns(newProps, true, layoutMode);\r\n\r\n    if (newProps.selectionMode !== selectionMode) {\r\n      shouldForceUpdates = true;\r\n    }\r\n\r\n    if (shouldForceUpdates) {\r\n      this._forceListUpdates();\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let {\r\n      ariaLabelForListHeader,\r\n      ariaLabelForSelectAllCheckbox,\r\n      ariaLabelForSelectionColumn,\r\n      className,\r\n      checkboxVisibility,\r\n      compact,\r\n      constrainMode,\r\n      dragDropEvents,\r\n      groups,\r\n      groupProps,\r\n      items,\r\n      isHeaderVisible,\r\n      onItemInvoked,\r\n      onItemContextMenu,\r\n      onColumnHeaderClick,\r\n      onColumnHeaderContextMenu,\r\n      selectionMode,\r\n      selectionPreservedOnEmptyClick,\r\n      ariaLabel,\r\n      ariaLabelForGrid,\r\n      rowElementEventMap,\r\n      shouldApplyApplicationRole = false,\r\n      getKey,\r\n      listProps,\r\n      usePageCache,\r\n      onShouldVirtualize\r\n    } = this.props;\r\n    let {\r\n      adjustedColumns,\r\n      isCollapsed,\r\n      layoutMode,\r\n      isSizing,\r\n      isSomeGroupExpanded\r\n    } = this.state;\r\n    let {\r\n      _selection: selection,\r\n      _dragDropHelper: dragDropHelper\r\n    } = this;\r\n    let groupNestingDepth = this._getGroupNestingDepth();\r\n    const additionalListProps: IListProps = {\r\n      renderedWindowsAhead: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_AHEAD,\r\n      renderedWindowsBehind: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_BEHIND,\r\n      getKey,\r\n      ...listProps\r\n    };\r\n    let selectAllVisibility = SelectAllVisibility.none; // for SelectionMode.none\r\n    if (selectionMode === SelectionMode.single) {\r\n      selectAllVisibility = SelectAllVisibility.hidden;\r\n    }\r\n    if (selectionMode === SelectionMode.multiple) {\r\n      // if isCollapsedGroupSelectVisible is false, disable select all when the list has all collapsed groups\r\n      let isCollapsedGroupSelectVisible = groupProps && groupProps.headerProps && groupProps.headerProps.isCollapsedGroupSelectVisible;\r\n      if (isCollapsedGroupSelectVisible === undefined) {\r\n        isCollapsedGroupSelectVisible = true;\r\n      }\r\n      let isSelectAllVisible = isCollapsedGroupSelectVisible || !groups || isSomeGroupExpanded;\r\n      selectAllVisibility = isSelectAllVisible ? SelectAllVisibility.visible : SelectAllVisibility.hidden;\r\n    }\r\n\r\n    if (checkboxVisibility === CheckboxVisibility.hidden) {\r\n      selectAllVisibility = SelectAllVisibility.none;\r\n    }\r\n\r\n    const {\r\n      onRenderDetailsHeader = this._onRenderDetailsHeader\r\n    } = this.props;\r\n\r\n    return (\r\n      // If shouldApplyApplicationRole is true, role application will be applied to make arrow keys work\r\n      // with JAWS.\r\n      <div\r\n        ref={ this._resolveRef('_root') }\r\n        className={ css('ms-DetailsList', styles.root, className, {\r\n          'is-fixed': layoutMode === DetailsListLayoutMode.fixedColumns,\r\n          ['is-horizontalConstrained ' + styles.rootIsHorizontalConstrained]: constrainMode === ConstrainMode.horizontalConstrained,\r\n          'ms-DetailsList--Compact': !!compact,\r\n          [styles.rootCompact]: !!compact\r\n        }) }\r\n        data-automationid='DetailsList'\r\n        data-is-scrollable='false'\r\n        aria-label={ ariaLabel }\r\n        { ...(shouldApplyApplicationRole ? { role: 'application' } : {}) }>\r\n        <div role='grid'\r\n          aria-label={ ariaLabelForGrid }\r\n          aria-rowcount={ (isHeaderVisible ? 1 : 0) + (items ? items.length : 0) }\r\n          aria-colcount={ (selectAllVisibility !== SelectAllVisibility.none ? 1 : 0) + (adjustedColumns ? adjustedColumns.length : 0) }\r\n          aria-readonly='true'>\r\n          <div onKeyDown={ this._onHeaderKeyDown } role='presentation'>\r\n            { isHeaderVisible && onRenderDetailsHeader({\r\n              componentRef: this._resolveRef('_header'),\r\n              selectionMode: selectionMode!,\r\n              layoutMode: layoutMode!,\r\n              selection: selection,\r\n              columns: adjustedColumns as IColumn[],\r\n              onColumnClick: onColumnHeaderClick,\r\n              onColumnContextMenu: onColumnHeaderContextMenu,\r\n              onColumnResized: this._onColumnResized,\r\n              onColumnIsSizingChanged: this._onColumnIsSizingChanged,\r\n              onColumnAutoResized: this._onColumnAutoResized,\r\n              groupNestingDepth: groupNestingDepth,\r\n              isAllCollapsed: isCollapsed,\r\n              onToggleCollapseAll: this._onToggleCollapse,\r\n              ariaLabel: ariaLabelForListHeader,\r\n              ariaLabelForSelectAllCheckbox: ariaLabelForSelectAllCheckbox,\r\n              ariaLabelForSelectionColumn: ariaLabelForSelectionColumn,\r\n              selectAllVisibility: selectAllVisibility,\r\n              collapseAllVisibility: groupProps && groupProps.collapseAllVisibility\r\n            }, this._onRenderDetailsHeader) }\r\n          </div>\r\n          <div onKeyDown={ this._onContentKeyDown } role='presentation'>\r\n            <FocusZone\r\n              ref={ this._resolveRef('_focusZone') }\r\n              className={ styles.focusZone }\r\n              direction={ FocusZoneDirection.vertical }\r\n              isInnerZoneKeystroke={ isRightArrow }\r\n              onActiveElementChanged={ this._onActiveRowChanged }\r\n            >\r\n              <SelectionZone\r\n                ref={ this._resolveRef('_selectionZone') }\r\n                selection={ selection }\r\n                selectionPreservedOnEmptyClick={ selectionPreservedOnEmptyClick }\r\n                selectionMode={ selectionMode }\r\n                onItemInvoked={ onItemInvoked }\r\n                onItemContextMenu={ onItemContextMenu }\r\n              >\r\n                { groups ? (\r\n                  <GroupedList\r\n                    ref={ this._resolveRef('_groupedList') }\r\n                    groups={ groups }\r\n                    groupProps={ groupProps }\r\n                    items={ items }\r\n                    onRenderCell={ this._onRenderCell }\r\n                    selection={ selection }\r\n                    selectionMode={ selectionMode }\r\n                    dragDropEvents={ dragDropEvents }\r\n                    dragDropHelper={ dragDropHelper as DragDropHelper }\r\n                    eventsToRegister={ rowElementEventMap }\r\n                    listProps={ additionalListProps }\r\n                    onGroupExpandStateChanged={ this._onGroupExpandStateChanged }\r\n                    usePageCache={ usePageCache }\r\n                    onShouldVirtualize={ onShouldVirtualize }\r\n                  />\r\n                ) : (\r\n                    <List\r\n                      ref={ this._resolveRef('_list') }\r\n                      role='presentation'\r\n                      items={ items }\r\n                      onRenderCell={ (item, itemIndex) => this._onRenderCell(0, item, itemIndex as number) }\r\n                      usePageCache={ usePageCache }\r\n                      onShouldVirtualize={ onShouldVirtualize }\r\n                      { ...additionalListProps }\r\n                    />\r\n                  )\r\n                }\r\n              </SelectionZone>\r\n            </FocusZone>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public forceUpdate() {\r\n    super.forceUpdate();\r\n    this._forceListUpdates();\r\n  }\r\n\r\n  @autobind\r\n  protected _onRenderRow(props: IDetailsRowProps, defaultRender?: any) {\r\n    return <DetailsRow { ...props } />;\r\n  }\r\n\r\n  @autobind\r\n  private _onRenderDetailsHeader(detailsHeaderProps: IDetailsHeaderProps, defaultRender?: IRenderFunction<IDetailsHeaderProps>) {\r\n    return <DetailsHeader { ...detailsHeaderProps } />;\r\n  }\r\n\r\n  private _onRenderCell(nestingDepth: number, item: any, index: number): React.ReactNode {\r\n    let {\r\n      compact,\r\n      dragDropEvents,\r\n      rowElementEventMap: eventsToRegister,\r\n      onRenderMissingItem,\r\n      onRenderItemColumn,\r\n      onRenderRow = this._onRenderRow,\r\n      selectionMode,\r\n      viewport,\r\n      checkboxVisibility,\r\n      getRowAriaLabel,\r\n      checkButtonAriaLabel,\r\n      groupProps\r\n    } = this.props;\r\n    let collapseAllVisibility = groupProps && groupProps.collapseAllVisibility;\r\n    let selection = this._selection;\r\n    let dragDropHelper = this._dragDropHelper;\r\n    let {\r\n      adjustedColumns: columns\r\n    } = this.state;\r\n\r\n    if (!item) {\r\n      if (onRenderMissingItem) {\r\n        onRenderMissingItem(index);\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    return onRenderRow({\r\n      item: item,\r\n      itemIndex: index,\r\n      compact: compact,\r\n      columns: columns as IColumn[],\r\n      groupNestingDepth: nestingDepth,\r\n      selectionMode: selectionMode!,\r\n      selection: selection,\r\n      onDidMount: this._onRowDidMount,\r\n      onWillUnmount: this._onRowWillUnmount,\r\n      onRenderItemColumn: onRenderItemColumn,\r\n      eventsToRegister: eventsToRegister,\r\n      dragDropEvents: dragDropEvents,\r\n      dragDropHelper: dragDropHelper!,\r\n      viewport: viewport,\r\n      checkboxVisibility: checkboxVisibility,\r\n      collapseAllVisibility: collapseAllVisibility,\r\n      getRowAriaLabel: getRowAriaLabel,\r\n      checkButtonAriaLabel: checkButtonAriaLabel\r\n    }, this._onRenderRow);\r\n  }\r\n\r\n  private _onGroupExpandStateChanged(isSomeGroupExpanded: boolean) {\r\n    this.setState({ isSomeGroupExpanded: isSomeGroupExpanded });\r\n  }\r\n\r\n  private _onColumnIsSizingChanged(column: IColumn, isSizing: boolean) {\r\n    this.setState({ isSizing: isSizing });\r\n  }\r\n\r\n  private _onHeaderKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (ev.which === KeyCodes.down) {\r\n      if (this._focusZone && this._focusZone.focus()) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onContentKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\r\n    if (ev.which === KeyCodes.up && !ev.altKey) {\r\n      if (this._header && this._header.focus()) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _getGroupNestingDepth(): number {\r\n    let { groups } = this.props;\r\n    let level = 0;\r\n    let groupsInLevel = groups;\r\n\r\n    while (groupsInLevel && groupsInLevel.length > 0) {\r\n      level++;\r\n      groupsInLevel = groupsInLevel[0].children;\r\n    }\r\n\r\n    return level;\r\n  }\r\n\r\n  private _onRowDidMount(row: DetailsRow) {\r\n    let { onRowDidMount } = this.props;\r\n    let index = row.props.itemIndex;\r\n\r\n    this._activeRows[index] = row; // this is used for column auto resize\r\n\r\n    this._setFocusToRowIfPending(row);\r\n\r\n    if (onRowDidMount) {\r\n      onRowDidMount(row.props.item, index);\r\n    }\r\n  }\r\n\r\n  private _setFocusToRowIfPending(row: DetailsRow) {\r\n    let index = row.props.itemIndex;\r\n    if (this._initialFocusedIndex !== undefined && index === this._initialFocusedIndex) {\r\n      if (this._selectionZone) {\r\n        this._selectionZone.ignoreNextFocus();\r\n      }\r\n      this._async.setTimeout(() => {\r\n        row.focus();\r\n      }, 0);\r\n\r\n      delete this._initialFocusedIndex;\r\n    }\r\n  }\r\n\r\n  private _onRowWillUnmount(row: DetailsRow) {\r\n    let { onRowWillUnmount } = this.props;\r\n    let index = row.props.itemIndex;\r\n\r\n    delete this._activeRows[index];\r\n    this._events.off(row.refs.root);\r\n    if (onRowWillUnmount) {\r\n      onRowWillUnmount(row.props.item, index);\r\n    }\r\n  }\r\n\r\n  private _onToggleCollapse(collapsed: boolean) {\r\n    this.setState({\r\n      isCollapsed: collapsed\r\n    });\r\n    if (this._groupedList) {\r\n      this._groupedList.toggleCollapseAll(collapsed);\r\n    }\r\n  }\r\n\r\n  private _forceListUpdates() {\r\n    if (this._groupedList) {\r\n      this._groupedList.forceUpdate();\r\n    }\r\n    if (this._list) {\r\n      this._list.forceUpdate();\r\n    }\r\n  }\r\n\r\n  private _adjustColumns(newProps: IDetailsListProps, forceUpdate?: boolean, layoutMode?: DetailsListLayoutMode) {\r\n    let adjustedColumns = this._getAdjustedColumns(newProps, forceUpdate, layoutMode);\r\n    let { width: viewportWidth } = this.props.viewport!;\r\n\r\n    if (adjustedColumns) {\r\n      this.setState({\r\n        adjustedColumns: adjustedColumns,\r\n        lastWidth: viewportWidth,\r\n        layoutMode: layoutMode\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Returns adjusted columns, given the viewport size and layout mode. */\r\n  private _getAdjustedColumns(newProps: IDetailsListProps, forceUpdate?: boolean, layoutMode?: DetailsListLayoutMode): IColumn[] | undefined {\r\n    let { columns: newColumns, items: newItems, selectionMode } = newProps;\r\n    let { width: viewportWidth } = newProps.viewport!;\r\n\r\n    if (layoutMode === undefined) {\r\n      layoutMode = newProps.layoutMode;\r\n    }\r\n\r\n    let columns = this.props ? this.props.columns : [];\r\n    let lastWidth = this.state ? this.state.lastWidth : -1;\r\n    let lastSelectionMode = this.state ? this.state.lastSelectionMode : undefined;\r\n\r\n    if (viewportWidth !== undefined) {\r\n      if (!forceUpdate &&\r\n        lastWidth === viewportWidth &&\r\n        lastSelectionMode === selectionMode &&\r\n        (!columns || newColumns === columns)) {\r\n        return undefined;\r\n      }\r\n    } else {\r\n      viewportWidth = this.props.viewport!.width;\r\n    }\r\n\r\n    newColumns = newColumns || buildColumns(newItems, true);\r\n\r\n    let adjustedColumns: IColumn[];\r\n\r\n    if (layoutMode === DetailsListLayoutMode.fixedColumns) {\r\n      adjustedColumns = this._getFixedColumns(newColumns);\r\n    } else {\r\n      adjustedColumns = this._getJustifiedColumns(newColumns, viewportWidth, newProps);\r\n    }\r\n\r\n    // Preserve adjusted column calculated widths.\r\n    adjustedColumns.forEach(column => {\r\n      let overrides = this._columnOverrides[column.key] = this._columnOverrides[column.key] || {} as IColumn;\r\n      overrides.calculatedWidth = column.calculatedWidth;\r\n    });\r\n\r\n    return adjustedColumns;\r\n  }\r\n\r\n  /** Builds a set of columns based on the given columns mixed with the current overrides. */\r\n  private _getFixedColumns(newColumns: IColumn[]) {\r\n    return newColumns.map(column => {\r\n      let newColumn = assign({}, column, this._columnOverrides[column.key]);\r\n\r\n      if (!newColumn.calculatedWidth) {\r\n        newColumn.calculatedWidth = newColumn.maxWidth || newColumn.minWidth || MIN_COLUMN_WIDTH;\r\n      }\r\n\r\n      return newColumn;\r\n    });\r\n  }\r\n\r\n  /** Builds a set of columns to fix within the viewport width. */\r\n  private _getJustifiedColumns(newColumns: IColumn[], viewportWidth: number, props: IDetailsListProps) {\r\n    let {\r\n      selectionMode,\r\n      checkboxVisibility,\r\n      groups\r\n    } = props;\r\n    let outerPadding = DEFAULT_INNER_PADDING;\r\n    let rowCheckWidth = (selectionMode !== SelectionMode.none && checkboxVisibility !== CheckboxVisibility.hidden) ? CHECKBOX_WIDTH : 0;\r\n    let groupExpandWidth = groups ? GROUP_EXPAND_WIDTH : 0;\r\n    let totalWidth = 0; // offset because we have one less inner padding.\r\n    let availableWidth = viewportWidth - (outerPadding + rowCheckWidth + groupExpandWidth);\r\n    let adjustedColumns: IColumn[] = newColumns.map((column, i) => {\r\n      let newColumn = assign(\r\n        {},\r\n        column,\r\n        {\r\n          calculatedWidth: column.minWidth || MIN_COLUMN_WIDTH\r\n        });\r\n\r\n      totalWidth += newColumn.calculatedWidth + (i > 0 ? DEFAULT_INNER_PADDING : 0) + (column.isPadded ? ISPADDED_WIDTH : 0);\r\n\r\n      return newColumn;\r\n    });\r\n\r\n    let lastIndex = adjustedColumns.length - 1;\r\n\r\n    // Remove collapsable columns.\r\n    while (lastIndex > 1 && totalWidth > availableWidth) {\r\n      let column = adjustedColumns[lastIndex];\r\n\r\n      if (column.isCollapsable) {\r\n        totalWidth -= column.calculatedWidth! + DEFAULT_INNER_PADDING;\r\n        adjustedColumns.splice(lastIndex, 1);\r\n      }\r\n      lastIndex--;\r\n    }\r\n\r\n    // Then expand columns starting at the beginning, until we've filled the width.\r\n    for (let i = 0; i < adjustedColumns.length && totalWidth < availableWidth; i++) {\r\n      let column = adjustedColumns[i];\r\n      let maxWidth = column.maxWidth;\r\n      let minWidth = column.minWidth || maxWidth || MIN_COLUMN_WIDTH;\r\n      let spaceLeft = availableWidth - totalWidth;\r\n      let increment = maxWidth ? Math.min(spaceLeft, maxWidth - minWidth) : spaceLeft;\r\n\r\n      // Add remaining space to the last column.\r\n      if (i === (adjustedColumns.length - 1)) {\r\n        increment = spaceLeft;\r\n      }\r\n\r\n      column.calculatedWidth = (column.calculatedWidth as number) + increment;\r\n      totalWidth += increment;\r\n    }\r\n\r\n    // Mark the last column as not resizable to avoid extra scrolling issues.\r\n    if (adjustedColumns.length) {\r\n      adjustedColumns[adjustedColumns.length - 1].isResizable = false;\r\n    }\r\n\r\n    return adjustedColumns;\r\n  }\r\n\r\n  private _onColumnResized(resizingColumn: IColumn, newWidth: number) {\r\n    let newCalculatedWidth = Math.max(resizingColumn.minWidth || MIN_COLUMN_WIDTH, newWidth);\r\n    if (this.props.onColumnResize) {\r\n      this.props.onColumnResize(resizingColumn, newCalculatedWidth);\r\n    }\r\n    this._columnOverrides[resizingColumn.key].calculatedWidth = newCalculatedWidth;\r\n    this._adjustColumns(this.props, true, DetailsListLayoutMode.fixedColumns);\r\n    this._forceListUpdates();\r\n  }\r\n\r\n  /**\r\n   * Callback function when double clicked on the details header column resizer\r\n   * which will measure the column cells of all the active rows and resize the\r\n   * column to the max cell width.\r\n   *\r\n   * @private\r\n   * @param {IColumn} column (double clicked column definition)\r\n   * @param {number} columnIndex (double clicked column index)\r\n   * @todo min width 100 should be changed to const value and should be consistent with the value used on _onSizerMove method in DetailsHeader\r\n   */\r\n  private _onColumnAutoResized(column: IColumn, columnIndex: number) {\r\n    let max = 0;\r\n    let count = 0;\r\n    let totalCount = Object.keys(this._activeRows).length;\r\n\r\n    for (let key in this._activeRows) {\r\n      if (this._activeRows.hasOwnProperty(key)) {\r\n        let currentRow = this._activeRows[key];\r\n        currentRow.measureCell(columnIndex, (width: number) => {\r\n          max = Math.max(max, width);\r\n          count++;\r\n          if (count === totalCount) {\r\n            this._onColumnResized(column, max);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call back function when an element in FocusZone becomes active. It will transalate it into item\r\n   * and call onActiveItemChanged callback if specified.\r\n   *\r\n   * @private\r\n   * @param {el} row element that became active in Focus Zone\r\n   * @param {ev} focus event from Focus Zone\r\n   */\r\n  private _onActiveRowChanged(el?: HTMLElement, ev?: React.FocusEvent<HTMLElement>) {\r\n    let { items, onActiveItemChanged } = this.props;\r\n\r\n    if (!onActiveItemChanged || !el) {\r\n      return;\r\n    }\r\n    let index = Number(el.getAttribute('data-item-index'));\r\n    if (index >= 0) {\r\n      onActiveItemChanged(items[index], index, ev);\r\n    }\r\n  }\r\n}\r\n\r\nexport function buildColumns(\r\n  items: any[],\r\n  canResizeColumns?: boolean,\r\n  onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column: IColumn) => any,\r\n  sortedColumnKey?: string,\r\n  isSortedDescending?: boolean,\r\n  groupedColumnKey?: string,\r\n  isMultiline?: boolean) {\r\n  let columns: IColumn[] = [];\r\n\r\n  if (items && items.length) {\r\n    let firstItem = items[0];\r\n    let isFirstColumn = true;\r\n\r\n    for (let propName in firstItem) {\r\n      if (firstItem.hasOwnProperty(propName)) {\r\n        columns.push({\r\n          key: propName,\r\n          name: propName,\r\n          fieldName: propName,\r\n          minWidth: MIN_COLUMN_WIDTH,\r\n          maxWidth: 300,\r\n          isCollapsable: !!columns.length,\r\n          isMultiline: (isMultiline === undefined) ? false : isMultiline,\r\n          isSorted: sortedColumnKey === propName,\r\n          isSortedDescending: !!isSortedDescending,\r\n          isRowHeader: false,\r\n          columnActionsMode: ColumnActionsMode.clickable,\r\n          isResizable: canResizeColumns,\r\n          onColumnClick: onColumnClick,\r\n          isGrouped: groupedColumnKey === propName\r\n        });\r\n\r\n        isFirstColumn = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return columns;\r\n}\r\n\r\nfunction isRightArrow(event: React.KeyboardEvent<HTMLElement>) {\r\n  return event.which === getRTLSafeKeyCode(KeyCodes.right);\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}
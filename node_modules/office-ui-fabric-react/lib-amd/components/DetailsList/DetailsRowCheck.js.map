{"version":3,"sources":["components/DetailsList/DetailsRowCheck.tsx"],"names":[],"mappings":";;;IAkBa,QAAA,eAAe,GAAG,UAAC,KAA4B;QAExD,IAAA,2BAAS,EACT,6BAAU,EACV,+BAAW,EACX,yBAAQ,EACR,2FAAc,CACN;QAEV,IAAI,SAAS,GAAG,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,QAAQ,CAAC;QAEnD,MAAM,CAAC,CACL,mDACO,WAAW,IAChB,IAAI,EAAC,UAAU,EACf,SAAS,EAAG,eAAG,CAAC,qBAAqB,EAAE,MAAM,CAAC,KAAK;gBACjD,GAAC,MAAM,CAAC,UAAU,IAAG,CAAC,KAAK,CAAC,SAAS;gBACrC,qCAAiC,GAAE,CAAC,KAAK,CAAC,SAAS;oBACnD,kBACa,SAAS,2BACA,IAAI,uBACV,iBAAiB;YAEnC,oBAAC,aAAK,IAAC,OAAO,EAAG,SAAS,GAAK,CACxB,CACV,CAAC;;IACJ,CAAC,CAAC","file":"components/DetailsList/DetailsRowCheck.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport { css } from '../../Utilities';\r\nimport { Check } from '../../Check';\r\nimport * as styles from './DetailsRowCheck.scss';\r\n\r\nexport interface IDetailsRowCheckProps extends React.HTMLAttributes<HTMLElement> {\r\n  selected?: boolean;\r\n  /**\r\n   * Deprecated at v.65.1 and will be removed by v 1.0. Use 'selected' instead.\r\n   * @deprecated\r\n   */\r\n  isSelected?: boolean;\r\n  anySelected: boolean;\r\n  canSelect: boolean;\r\n}\r\n\r\nexport const DetailsRowCheck = (props: IDetailsRowCheckProps) => {\r\n  const {\r\n    canSelect,\r\n    isSelected,\r\n    anySelected,\r\n    selected,\r\n    ...buttonProps\r\n  } = props;\r\n\r\n  let isPressed = props.isSelected || props.selected;\r\n\r\n  return (\r\n    <button\r\n      { ...buttonProps }\r\n      role='checkbox'\r\n      className={ css('ms-DetailsRow-check', styles.check, {\r\n        [styles.isDisabled]: !props.canSelect,\r\n        'ms-DetailsRow-check--isDisabled': !props.canSelect\r\n      }) }\r\n      aria-checked={ isPressed }\r\n      data-selection-toggle={ true }\r\n      data-automationid='DetailsRowCheck'\r\n    >\r\n      <Check checked={ isPressed } />\r\n    </button>\r\n  );\r\n};\r\n"],"sourceRoot":"..\\..\\..\\src"}
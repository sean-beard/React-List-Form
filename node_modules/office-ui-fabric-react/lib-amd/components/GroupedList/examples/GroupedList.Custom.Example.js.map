{"version":3,"sources":["components/GroupedList/examples/GroupedList.Custom.Example.tsx"],"names":[],"mappings":";;;IAYA,IAAI,MAAa,CAAC;IAClB,IAAI,OAAiB,CAAC;IAEtB;QAA8C,oDAAyB;QAErE;YAAA,YACE,iBAAO,SAIR;YAFC,MAAM,GAAG,MAAM,IAAI,kCAAe,CAAC,EAAE,CAAC,CAAC;YACvC,OAAO,GAAG,+BAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;QACrC,CAAC;QAEM,yCAAM,GAAb;YACE,MAAM,CAAC,CACL,oBAAC,mBAAW,IACV,GAAG,EAAC,aAAa,EACjB,KAAK,EAAG,MAAM,EACd,YAAY,EAAG,IAAI,CAAC,aAAa,EACjC,UAAU,EACR;oBACE,cAAc,EAAE,IAAI,CAAC,eAAe;oBACpC,cAAc,EAAE,IAAI,CAAC,eAAe;iBACrC,EAEH,MAAM,EAAG,OAAO,GAChB,CACH,CAAC;QACJ,CAAC;QAEO,gDAAa,GAArB,UAAsB,YAAoB,EAAE,IAAS,EAAE,SAAiB;YACtE,MAAM,CAAC,CACL,qDAA4B,SAAS;gBACnC,8BAAM,SAAS,EAAC,4BAA4B,IACxC,IAAI,CAAC,IAAI,CACN,CACH,CACP,CAAC;QACJ,CAAC;QAEO,kDAAe,GAAvB,UAAwB,KAAyB;YAC/C,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,8BAA8B,EAAE,wBAAc,CAAC,MAAM,CAAC;;gBAC3C,KAAK,CAAC,KAAM,CAAC,IAAI;;gBACxC,oBAAC,WAAI,IAAC,OAAO,EAAG,cAAM,OAAA,KAAK,CAAC,gBAAiB,CAAC,KAAK,CAAC,KAAM,CAAC,EAArC,CAAqC,IAAK,KAAK,CAAC,KAAM,CAAC,WAAW,GAAG,QAAQ,GAAG,UAAU,CAAS;oBAC5H,CACP,CAAC;QACJ,CAAC;QAEO,kDAAe,GAAvB,UAAwB,KAAyB;YAC/C,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,8BAA8B,EAAE,wBAAc,CAAC,MAAM,CAAC;;gBAC3C,KAAK,CAAC,KAAM,CAAC,IAAI,CAC3C,CACP,CAAC;QACJ,CAAC;QACH,+BAAC;IAAD,CApDA,AAoDC,CApD6C,KAAK,CAAC,SAAS,GAoD5D;IApDY,4DAAwB","file":"components/GroupedList/examples/GroupedList.Custom.Example.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  GroupedList,\r\n  IGroup,\r\n  IGroupDividerProps\r\n} from 'office-ui-fabric-react/lib/components/GroupedList/index';\r\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { createListItems, createGroups } from '@uifabric/example-app-base';\r\nimport { FontClassNames } from '../../../Styling';\r\nimport './GroupedList.Custom.Example.scss';\r\n\r\nlet _items: any[];\r\nlet _groups: IGroup[];\r\n\r\nexport class GroupedListCustomExample extends React.Component<any, any> {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    _items = _items || createListItems(20);\r\n    _groups = createGroups(4, 0, 0, 5);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <GroupedList\r\n        ref='groupedList'\r\n        items={ _items }\r\n        onRenderCell={ this._onRenderCell }\r\n        groupProps={\r\n          {\r\n            onRenderHeader: this._onRenderHeader,\r\n            onRenderFooter: this._onRenderFooter\r\n          }\r\n        }\r\n        groups={ _groups }\r\n      />\r\n    );\r\n  }\r\n\r\n  private _onRenderCell(nestingDepth: number, item: any, itemIndex: number) {\r\n    return (\r\n      <div data-selection-index={ itemIndex }>\r\n        <span className='ms-GroupedListExample-name'>\r\n          { item.name }\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderHeader(props: IGroupDividerProps): JSX.Element {\r\n    return (\r\n      <div className={ css('ms-GroupedListExample-header', FontClassNames.xLarge) }>\r\n        This is a custom header for { props.group!.name }\r\n        &nbsp;(<Link onClick={ () => props.onToggleCollapse!(props.group!) }>{ props.group!.isCollapsed ? 'Expand' : 'Collapse' }</Link>)\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderFooter(props: IGroupDividerProps): JSX.Element {\r\n    return (\r\n      <div className={ css('ms-GroupedListExample-footer', FontClassNames.xLarge) }>\r\n        This is a custom footer for { props.group!.name }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}
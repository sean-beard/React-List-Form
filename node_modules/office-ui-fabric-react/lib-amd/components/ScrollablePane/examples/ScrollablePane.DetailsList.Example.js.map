{"version":3,"sources":["components/ScrollablePane/examples/ScrollablePane.DetailsList.Example.tsx"],"names":[],"mappings":"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","file":"components/ScrollablePane/examples/ScrollablePane.DetailsList.Example.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport {\r\n  DetailsList,\r\n  DetailsListLayoutMode,\r\n  IDetailsHeaderProps,\r\n  Selection,\r\n  IColumn\r\n} from 'office-ui-fabric-react/lib/DetailsList';\r\nimport {\r\n  IRenderFunction\r\n} from 'office-ui-fabric-react/lib/Utilities';\r\nimport {\r\n  TooltipHost,\r\n  ITooltipHostProps\r\n} from 'office-ui-fabric-react/lib/Tooltip';\r\nimport {\r\n  ScrollablePane\r\n} from 'office-ui-fabric-react/lib/ScrollablePane';\r\nimport {\r\n  Sticky\r\n} from 'office-ui-fabric-react/lib/Sticky';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\n\r\nlet _items: {\r\n  key: number,\r\n  name: string,\r\n  value: number\r\n}[] = [];\r\n\r\nlet _columns: IColumn[] = [\r\n  {\r\n    key: 'column1',\r\n    name: 'Name',\r\n    fieldName: 'name',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for name'\r\n  },\r\n  {\r\n    key: 'column2',\r\n    name: 'Value',\r\n    fieldName: 'value',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for value'\r\n  },\r\n];\r\n\r\nexport class ScrollablePaneDetailsListExample extends React.Component<any, any> {\r\n  private _selection: Selection;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    // Populate with items for demos.\r\n    if (_items.length === 0) {\r\n      for (let i = 0; i < 200; i++) {\r\n        _items.push({\r\n          key: i,\r\n          name: 'Item ' + i,\r\n          value: i\r\n        });\r\n      }\r\n    }\r\n\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => this.setState({ selectionDetails: this._getSelectionDetails() })\r\n    });\r\n\r\n    this.state = {\r\n      items: _items,\r\n      selectionDetails: this._getSelectionDetails()\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { items, selectionDetails } = this.state;\r\n\r\n    return (\r\n      <ScrollablePane>\r\n        <Sticky>{ selectionDetails }</Sticky>\r\n        <TextField\r\n          label='Filter by name:'\r\n          onChanged={ text => this.setState({ items: text ? _items.filter(i => i.name.toLowerCase().indexOf(text) > -1) : _items }) }\r\n        />\r\n        <Sticky>\r\n          <h1 style={ { margin: '0px' } }>Item List</h1>\r\n        </Sticky>\r\n        <MarqueeSelection selection={ this._selection }>\r\n          <DetailsList\r\n            items={ items }\r\n            columns={ _columns }\r\n            setKey='set'\r\n            layoutMode={ DetailsListLayoutMode.fixedColumns }\r\n            onRenderDetailsHeader={\r\n              (detailsHeaderProps: IDetailsHeaderProps, defaultRender: IRenderFunction<IDetailsHeaderProps>) => (\r\n                <Sticky>\r\n                  { defaultRender({\r\n                    ...detailsHeaderProps,\r\n                    onRenderColumnHeaderTooltip: (tooltipHostProps: ITooltipHostProps) => <TooltipHost { ...tooltipHostProps } />\r\n                  }) }\r\n                </Sticky>\r\n              ) }\r\n            selection={ this._selection }\r\n            selectionPreservedOnEmptyClick={ true }\r\n            ariaLabelForSelectionColumn='Toggle selection'\r\n            ariaLabelForSelectAllCheckbox='Toggle selection for all items'\r\n            onItemInvoked={ (item) => alert(`Item invoked: ${item.name}`) }\r\n          />\r\n        </MarqueeSelection>\r\n      </ScrollablePane>\r\n    );\r\n  }\r\n\r\n  private _getSelectionDetails(): string {\r\n    let selectionCount = this._selection.getSelectedCount();\r\n\r\n    switch (selectionCount) {\r\n      case 0:\r\n        return 'No items selected';\r\n      case 1:\r\n        return '1 item selected: ' + (this._selection.getSelection()[0] as any).name;\r\n      default:\r\n        return `${selectionCount} items selected`;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}
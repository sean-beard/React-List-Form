{"version":3,"sources":["components/Fabric/Fabric.styles.ts"],"names":[],"mappings":";;;IAUA,IAAM,WAAW,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC;IAMjC,QAAA,SAAS,GAAG,2BAAe,CAAC,UACvC,KAAa;QAEb,MAAM,CAAC;YACL,IAAI,EAAE,qBAAW,CAAC;gBAChB,KAAK,CAAC,KAAK,CAAC,MAAM;gBAClB;oBACE,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;oBACnC,UAAU,EAAE,WAAW;oBACvB,SAAS,EAAE,WAAW;oBACtB,YAAY,EAAE,WAAW;iBAC1B;aACF,CAAC;SACH,CAAC;IACJ,CAAC,CAAC,CAAC","file":"components/Fabric/Fabric.styles.js","sourcesContent":["\r\nimport {\r\n  memoizeFunction\r\n} from '../../Utilities';\r\nimport {\r\n  ITheme,\r\n  IStyle,\r\n  mergeStyles\r\n} from '../../Styling';\r\n\r\nconst inheritFont = { fontFamily: 'inherit' };\r\n\r\nexport interface IFabricStyles {\r\n  root: IStyle;\r\n}\r\n\r\nexport const getStyles = memoizeFunction((\r\n  theme: ITheme\r\n): IFabricStyles => {\r\n  return {\r\n    root: mergeStyles([\r\n      theme.fonts.medium,\r\n      {\r\n        color: theme.palette.neutralPrimary,\r\n        '& button': inheritFont,\r\n        '& input': inheritFont,\r\n        '& textarea': inheritFont\r\n      }\r\n    ])\r\n  };\r\n});\r\n"],"sourceRoot":"..\\..\\..\\src"}
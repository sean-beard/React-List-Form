{
  "_args": [
    [
      {
        "raw": "css-in-js-utils@^1.0.3",
        "scope": null,
        "escapedName": "css-in-js-utils",
        "name": "css-in-js-utils",
        "rawSpec": "^1.0.3",
        "spec": ">=1.0.3 <2.0.0",
        "type": "range"
      },
      "E:\\Development\\React-List-Form\\node_modules\\inline-style-prefixer"
    ]
  ],
  "_from": "css-in-js-utils@>=1.0.3 <2.0.0",
  "_id": "css-in-js-utils@1.0.3",
  "_inCache": true,
  "_location": "/css-in-js-utils",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/css-in-js-utils-1.0.3.tgz_1488827104975_0.9046360570937395"
  },
  "_npmUser": {
    "name": "rofrischmann",
    "email": "robin@rofrischmann.de"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "css-in-js-utils@^1.0.3",
    "scope": null,
    "escapedName": "css-in-js-utils",
    "name": "css-in-js-utils",
    "rawSpec": "^1.0.3",
    "spec": ">=1.0.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/inline-style-prefixer"
  ],
  "_resolved": "https://registry.npmjs.org/css-in-js-utils/-/css-in-js-utils-1.0.3.tgz",
  "_shasum": "9ac7e02f763cf85d94017666565ed68a5b5f3215",
  "_shrinkwrap": null,
  "_spec": "css-in-js-utils@^1.0.3",
  "_where": "E:\\Development\\React-List-Form\\node_modules\\inline-style-prefixer",
  "author": {
    "name": "Robin Frischmann",
    "email": "robin@rofrischmann.de"
  },
  "bugs": {
    "url": "https://github.com/rofrischmann/css-in-js-utils/issues"
  },
  "dependencies": {
    "hyphenate-style-name": "^1.0.2"
  },
  "description": "Useful utility functions for CSS in JS solutions",
  "devDependencies": {
    "babel-core": "^6.22.1",
    "babel-eslint": "^7.1.1",
    "babel-jest": "^18.0.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-preset-es2015": "^6.22.0",
    "babel-preset-react": "^6.22.0",
    "babel-preset-stage-0": "^6.22.0",
    "codeclimate-test-reporter": "^0.4.0",
    "eslint": "^3.14.1",
    "eslint-config-airbnb": "^14.0.0",
    "eslint-plugin-flowtype": "^2.30.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^3.0.2",
    "eslint-plugin-react": "^6.9.0",
    "flow-bin": "^0.38.0",
    "jest": "^18.1.0",
    "prettier-eslint-cli": "^1.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "9ac7e02f763cf85d94017666565ed68a5b5f3215",
    "tarball": "https://registry.npmjs.org/css-in-js-utils/-/css-in-js-utils-1.0.3.tgz"
  },
  "files": [
    "LICENSE",
    "README.md",
    "lib/"
  ],
  "gitHead": "de52666d324d7ec199120934f48511a40b24303e",
  "homepage": "https://github.com/rofrischmann/css-in-js-utils#readme",
  "jest": {
    "rootDir": "modules"
  },
  "keywords": [
    "css",
    "cssinjs",
    "utils"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "rofrischmann",
      "email": "robin@rofrischmann.de"
    }
  ],
  "name": "css-in-js-utils",
  "optionalDependencies": {},
  "readme": "# CSS-in-JS Utilities\nA library that provides useful utilities functions for CSS-in-JS solutions.<br>\nThey are intended to be used by CSS-in-JS library authors rather used directly.\n<br>\n\n<img alt=\"TravisCI\" src=\"https://travis-ci.org/rofrischmann/css-in-js-utils.svg?branch=master\">\n<a href=\"https://codeclimate.com/github/rofrischmann/css-in-js-utils/coverage\"><img alt=\"Test Coverage\" src=\"https://codeclimate.com/github/rofrischmann/css-in-js-utils/badges/coverage.svg\"></a>\n<img alt=\"npm downloads\" src=\"https://img.shields.io/npm/dm/css-in-js-utils.svg\">\n<img alt=\"npm version\" src=\"https://badge.fury.io/js/css-in-js-utils.svg\">\n\n## Installation\n```sh\nyarn add css-in-js-utils\n```\n\n## Why?\nBy now I have authored and collaborated on many different libraries and found I would rewrite the very same utility functions every time. That's why this repository is hosting small utilities especially built for CSS-in-JS solutions and tools. Even if there are tons of different libraries already, they all basically use the same mechanisms and utilities.\n\n## Utilities\n* [`camelCaseProperty(property)`](#camelcasepropertyproperty)\n* [`cssifyDeclaration(property, value)`](#cssifydeclarationproperty-value)\n* [`cssifyObject(object)`](#cssifyobjectobject)\n* [`hyphenateProperty(property)`](#hyphenatepropertyproperty)\n* [`isPrefixedProperty(property)`](#isprefixedpropertyproperty)\n* [`isPrefixedValue(value)`](#isprefixedvaluevalue)\n* [`isUnitlessProperty(property)`](#isunitlesspropertyproperty)\n* [`normalizeProperty(property)`](#normalizepropertyproperty)\n* [`resolveArrayValue(property, value)`](#resolvearrayvalueproperty-value)\n* [`unprefixProperty(property)`](#unprefixpropertyproperty)\n* [`unprefixValue(value)`](#unprefixvaluevalue)\n\n------\n\n### `camelCaseProperty(property)`\nConverts the `property` to camelCase.\n\n```javascript\nimport { camelCaseProperty } from 'css-in-js-utils'\n\ncamelCaseProperty('padding-top')\n// => 'paddingTop'\n\ncamelCaseProperty('-webkit-transition')\n// => 'WebkitTransition'\n```\n\n------\n\n### `cssifyDeclaration(property, value)`\nGenerates a CSS declaration (`property`:`value`) string.\n\n```javascript\nimport { cssifyDeclaration } from 'css-in-js-utils'\n\ncssifyDeclaration('paddingTop', '400px')\n// => 'padding-top:400px'\n\ncssifyDeclaration('WebkitFlex', 3)\n// => '-webkit-flex:3'\n```\n\n------\n\n### `cssifyObject(object)`\nGenerates a CSS string using all key-property pairs in `object`.\nIt automatically removes declarations with value types other than `number` and `string`.\n\n```javascript\nimport { cssifyObject } from 'css-in-js-utils'\n\ncssifyObject({\n  paddingTop: '400px',\n  paddingBottom: undefined,\n  WebkitFlex: 3,\n  _anyKey: [1, 2, 4]\n})\n// => 'padding-top:400px;-webkit-flex:3'\n```\n\n------\n\n### `hyphenateProperty(property)`\nConverts the `property` to hyphen-case.\n> Directly mirrors [hyphenate-style-name](https://github.com/rexxars/hyphenate-style-name).\n\n```javascript\nimport { hyphenateProperty } from 'css-in-js-utils'\n\nhyphenateProperty('paddingTop')\n// => 'padding-top'\n\nhyphenateProperty('WebkitTransition')\n// => '-webkit-transition'\n```\n\n------\n\n### `isPrefixedProperty(property)`\nChecks if a `property` includes a vendor prefix.\n\n```javascript\nimport { isPrefixedProperty } from 'css-in-js-utils'\n\nisPrefixedProperty('paddingTop')\n// => false\n\nisPrefixedProperty('WebkitTransition')\n// => true\n```\n\n------\n### `isPrefixedValue(value)`\nChecks if a `value` includes vendor prefixes.\n\n```javascript\nimport { isPrefixedValue } from 'css-in-js-utils'\n\nisPrefixedValue('200px')\nisPrefixedValue(200)\n// => false\n\nisPrefixedValue('-webkit-calc(100% - 50px)')\n// => true\n```\n\n------\n\n### `isUnitlessProperty(property)`\nChecks if a `property` accepts unitless values.\n\n```javascript\nimport { isUnitlessProperty } from 'css-in-js-utils'\n\nisUnitlessProperty('width')\n// => false\n\nisUnitlessProperty('flexGrow')\nisUnitlessProperty('lineHeight')\nisUnitlessProperty('line-height')\n// => true\n```\n\n------\n\n### `normalizeProperty(property)`\nNormalizes the `property` by unprefixing **and** camelCasing it.\n> Uses the [`camelCaseProperty`](#camelcasepropertyproperty) and [`unprefixProperty`](#unprefixpropertyproperty)-methods.\n\n```javascript\nimport { normalizeProperty } from 'css-in-js-utils'\n\nnormalizeProperty('-webkit-transition-delay')\n// => 'transitionDelay'\n```\n\n------\n\n### `resolveArrayValue(property, value)`\nConcatenates array values to single CSS value.\n> Uses the [`hyphenateProperty`](#hyphenatepropertyproperty)-method.\n\n\n```javascript\nimport { resolveArrayValue } from 'css-in-js-utils'\n\nresolveArrayValue('display', [ '-webkit-flex', 'flex' ])\n// => '-webkit-flex;display:flex'\n\nresolveArrayValue('paddingTop', [ 'calc(100% - 50px)', '100px' ])\n// => 'calc(100% - 50px);padding-top:100px'\n```\n\n------\n\n### `unprefixProperty(property)`\nRemoves the vendor prefix (if set) from the `property`.\n\n```javascript\nimport { unprefixProperty } from 'css-in-js-utils'\n\nunprefixProperty('WebkitTransition')\n// => 'transition'\n\nunprefixProperty('transitionDelay')\n// => 'transitionDelay'\n```\n\n------\n\n### `unprefixValue(value)`\nRemoves all vendor prefixes (if any) from the `value`.\n\n```javascript\nimport { unprefixValue } from 'css-in-js-utils'\n\nunprefixValue('-webkit-calc(-moz-calc(100% - 50px)/2)')\n// => 'calc(calc(100% - 50px)/2)'\n\nunprefixValue('100px')\n// => '100px'\n```\n\n## Direct Import\nEvery utility function may be imported directly to save bundle size.\n\n```javascript\nimport camelCaseProperty from 'css-in-js-utils/lib/camelCaseProperty'\n```\n\n## License\ncss-in-js-utils is licensed under the [MIT License](http://opensource.org/licenses/MIT).<br>\nDocumentation is licensed under [Creative Common License](http://creativecommons.org/licenses/by/4.0/).<br>\nCreated with â™¥ by [@rofrischmann](http://rofrischmann.de).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rofrischmann/css-in-js-utils.git"
  },
  "scripts": {
    "babel": "babel -d lib modules",
    "check": "npm run format && npm run lint && npm run test:coverage && npm run flow",
    "flow": "flow",
    "format": "prettier-eslint modules",
    "lint": "eslint modules",
    "release": "npm run check && npm run babel && npm publish",
    "test": "jest",
    "test:coverage": "jest --coverage"
  },
  "version": "1.0.3"
}

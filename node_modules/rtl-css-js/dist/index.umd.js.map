{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c736ca21e1cc083b415d","webpack:///./src/webpack-entry.js","webpack:///./src/index.js"],"names":["mainExport","require","module","exports","default","key","hasOwnProperty","propertiesToConvert","arrayToObject","valuesToConvert","propertyValueConverters","padding","value","isNumber","handleQuartetValues","textShadow","replace","match","negative","number","doubleNegative","borderColor","borderRadius","includes","split","radius1","radius2","convertedRadius1","trim","convertedRadius2","splitValues","getValuesAsList","length","reverse","join","topLeft","topRight","bottomRight","bottomLeft","background","backgroundPositionValue","backgroundPosition","backgroundImage","g1","group2","group","calculateNewBackgroundPosition","backgroundPositionX","margin","borderWidth","boxShadow","webkitBoxShadow","mozBoxShadow","borderStyle","convert","object","Object","keys","reduce","newObj","originalKey","originalValue","isString","convertProperty","isNoFlip","test","getPropertyDoppelganger","getValueDoppelganger","property","isObject","isNum","importantlessValue","isImportant","valueConverter","newValue","map","i","filter","Boolean","item","list","state","openParansCount","closedParansCount","parensDepth","push","top","right","bottom","left","idx","indexOf","parseFloat","len","toFixed","array","obj","prop1","prop2","val","inclusive","inclusee"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA,KAAMA,aAAa,mBAAAC,CAAQ,CAAR,CAAnB;;AAEAC,QAAOC,OAAP,GAAiBH,WAAWI,OAA5B;AACA,MAAK,IAAMC,GAAX,IAAkBL,UAAlB,EAA8B;AAC5B,OAAIA,WAAWM,cAAX,CAA0BD,GAA1B,CAAJ,EAAoC;AAClCH,YAAOC,OAAP,CAAeE,GAAf,IAAsBL,WAAWK,GAAX,CAAtB;AACD;AACF,E;;;;;;;;;;;;;;;;ACPD;AACA,KAAME,sBAAsBC,cAAc,CACxC,CAAC,aAAD,EAAgB,cAAhB,CADwC,EAExC,CAAC,YAAD,EAAe,aAAf,CAFwC,EAGxC,CAAC,MAAD,EAAS,OAAT,CAHwC,EAIxC,CAAC,YAAD,EAAe,aAAf,CAJwC,EAKxC,CAAC,iBAAD,EAAoB,kBAApB,CALwC,EAMxC,CAAC,iBAAD,EAAoB,kBAApB,CANwC,EAOxC,CAAC,qBAAD,EAAwB,sBAAxB,CAPwC,EAQxC,CAAC,wBAAD,EAA2B,yBAA3B,CARwC,CAAd,CAA5B;;AAWA;AACA,KAAMC,kBAAkBD,cAAc,CACpC,CAAC,KAAD,EAAQ,KAAR,CADoC,EAEpC,CAAC,MAAD,EAAS,OAAT,CAFoC,EAGpC,CAAC,UAAD,EAAa,UAAb,CAHoC,EAIpC,CAAC,WAAD,EAAc,WAAd,CAJoC,EAKpC,CAAC,WAAD,EAAc,WAAd,CALoC,CAAd,CAAxB;;AAQA;AACA,KAAME,0BAA0B;AAC9BC,UAD8B,mBACtBC,KADsB,EACf;AACb,SAAIC,SAASD,KAAT,CAAJ,EAAqB;AACnB,cAAOA,KAAP;AACD;AACD,YAAOE,oBAAoBF,KAApB,CAAP;AACD,IAN6B;AAO9BG,aAP8B,sBAOnBH,KAPmB,EAOZ;AAChB;AACA,YAAOA,MAAMI,OAAN,CAAc,eAAd,EAA+B,UAACC,KAAD,EAAQC,QAAR,EAAkBC,MAAlB,EAA6B;AACjE,WAAIA,WAAW,GAAf,EAAoB;AAClB,gBAAOF,KAAP;AACD;AACD,WAAMG,iBAAiBF,aAAa,EAAb,GAAkB,GAAlB,GAAwB,EAA/C;AACA,mBAAUE,cAAV,GAA2BD,MAA3B;AACD,MANM,CAAP;AAOD,IAhB6B;AAiB9BE,cAjB8B,uBAiBlBT,KAjBkB,EAiBX;AACjB,YAAOE,oBAAoBF,KAApB,CAAP;AACD,IAnB6B;AAoB9BU,eApB8B,wBAoBjBV,KApBiB,EAoBV;AAClB,SAAIC,SAASD,KAAT,CAAJ,EAAqB;AACnB,cAAOA,KAAP;AACD;AACD,SAAIW,SAASX,KAAT,EAAgB,GAAhB,CAAJ,EAA0B;AAAA,0BACGA,MAAMY,KAAN,CAAY,GAAZ,CADH;AAAA;AAAA,WACjBC,OADiB;AAAA,WACRC,OADQ;;AAExB,WAAMC,mBAAmBjB,wBAAwBY,YAAxB,CAAqCG,QAAQG,IAAR,EAArC,CAAzB;AACA,WAAMC,mBAAmBnB,wBAAwBY,YAAxB,CAAqCI,QAAQE,IAAR,EAArC,CAAzB;AACA,cAAUD,gBAAV,WAAgCE,gBAAhC;AACD;AACD,SAAMC,cAAcC,gBAAgBnB,KAAhB,CAApB;AACA,aAAQkB,YAAYE,MAApB;AACE,YAAK,CAAL;AAAQ;AACN,kBAAOF,YAAYG,OAAZ,GAAsBC,IAAtB,CAA2B,GAA3B,CAAP;AACD;AACD,YAAK,CAAL;AAAQ;AAAA,6CAC+CJ,WAD/C;AAAA,eACCK,OADD;AAAA,eACUC,QADV;AAAA,eACoBC,WADpB;AAAA,eACiCC,UADjC;;AAEN,kBAAO,CAACF,QAAD,EAAWD,OAAX,EAAoBG,UAApB,EAAgCD,WAAhC,EAA6CH,IAA7C,CAAkD,GAAlD,CAAP;AACD;AACD;AAAS;AACP,kBAAOtB,KAAP;AACD;AAVH;AAYD,IA3C6B;AA4C9B2B,aA5C8B,sBA4CnB3B,KA5CmB,EA4CZ;AAChB;AACA;AACA;AACA,SAAM4B,0BAA0B5B,MAC7BI,OAD6B,CACrB,6EADqB,EAC0D,EAD1D,EAC8DY,IAD9D,EAAhC;AAEA;AACAhB,aAAQA,MACLI,OADK,CACGwB,uBADH,EAC4B9B,wBAAwB+B,kBAAxB,CAA2CD,uBAA3C,CAD5B,CAAR;AAEA;AACA,YAAO9B,wBAAwBgC,eAAxB,CAAwC9B,KAAxC,CAAP;AACD,IAvD6B;AAwD9B8B,kBAxD8B,2BAwDd9B,KAxDc,EAwDP;AACrB,SAAI,CAACW,SAASX,KAAT,EAAgB,MAAhB,CAAL,EAA8B;AAC5B,cAAOA,KAAP;AACD;AACD;AACA;AACA;AACA;AACA,YAAOA,MAAMI,OAAN,CAAc,+CAAd,EAA+D,UAACC,KAAD,EAAQ0B,EAAR,EAAYC,MAAZ,EAAuB;AAC3F,cAAO3B,MAAMD,OAAN,CAAc4B,MAAd,EAAsBnC,gBAAgBmC,MAAhB,CAAtB,CAAP;AACD,MAFM,CAAP;AAGD,IAnE6B;AAoE9BH,qBApE8B,8BAoEX7B,KApEW,EAoEJ;AACxB,YAAOA;AACL;AADK,MAEJI,OAFI,CAEI,gBAFJ,EAEsB,UAACC,KAAD,EAAQ4B,KAAR;AAAA,cAAkBC,+BAA+BD,KAA/B,CAAlB;AAAA,MAFtB,EAGJ7B,OAHI,CAGI,gBAHJ,EAGsB;AAAA,cAASP,gBAAgBQ,KAAhB,CAAT;AAAA,MAHtB,CAAP;AAID,IAzE6B;AA0E9B8B,sBA1E8B,+BA0EVnC,KA1EU,EA0EH;AACzB,SAAIC,SAASD,KAAT,CAAJ,EAAqB;AACnB,cAAOA,KAAP;AACD;AACD,YAAOF,wBAAwB+B,kBAAxB,CAA2C7B,KAA3C,CAAP;AACD;AA/E6B,EAAhC;AAiFAF,yBAAwBsC,MAAxB,GAAiCtC,wBAAwBC,OAAzD;AACAD,yBAAwBuC,WAAxB,GAAsCvC,wBAAwBC,OAA9D;AACAD,yBAAwBwC,SAAxB,GAAoCxC,wBAAwBK,UAA5D;AACAL,yBAAwByC,eAAxB,GAA0CzC,wBAAwBK,UAAlE;AACAL,yBAAwB0C,YAAxB,GAAuC1C,wBAAwBK,UAA/D;AACAL,yBAAwB2C,WAAxB,GAAsC3C,wBAAwBW,WAA9D;;AAEA;mBACeiC,O;;AAEf;;;;;;AAKA,UAASA,OAAT,CAAiBC,MAAjB,EAAyB;AACvB,UAAOC,OAAOC,IAAP,CAAYF,MAAZ,EAAoBG,MAApB,CAA2B,UAACC,MAAD,EAASC,WAAT,EAAyB;AACzD,SAAIC,gBAAgBN,OAAOK,WAAP,CAApB;AACA,SAAIE,SAASD,aAAT,CAAJ,EAA6B;AAC3B;AACAA,uBAAgBA,cAAcjC,IAAd,EAAhB;AACD;;AALwD,4BAMpCmC,gBAAgBH,WAAhB,EAA6BC,aAA7B,CANoC;AAAA,SAMlDxD,GANkD,oBAMlDA,GANkD;AAAA,SAM7CO,KAN6C,oBAM7CA,KAN6C;;AAOzD+C,YAAOtD,GAAP,IAAcO,KAAd;AACA,YAAO+C,MAAP;AACD,IATM,EASJ,EATI,CAAP;AAUD;;AAED;;;;;;AAMA,UAASI,eAAT,CAAyBH,WAAzB,EAAsCC,aAAtC,EAAqD;AACnD,OAAMG,WAAW,wBAAwBC,IAAxB,CAA6BJ,aAA7B,CAAjB;AACA,OAAMxD,MAAM2D,WAAWJ,WAAX,GAAyBM,wBAAwBN,WAAxB,CAArC;AACA,OAAMhD,QAAQoD,WAAWH,aAAX,GAA2BM,qBAAqB9D,GAArB,EAA0BwD,aAA1B,CAAzC;AACA,UAAO,EAACxD,QAAD,EAAMO,YAAN,EAAP;AACD;;AAED;;;;;AAKA,UAASsD,uBAAT,CAAiCE,QAAjC,EAA2C;AACzC,UAAO7D,oBAAoB6D,QAApB,KAAiCA,QAAxC;AACD;;AAED;;;;;;AAMA,UAASD,oBAAT,CAA8B9D,GAA9B,EAAmCwD,aAAnC,EAAkD;AAChD,iCADgD,CACjB;AAC/B,OAAIA,kBAAkB,IAAlB,IAA0B,OAAOA,aAAP,KAAyB,WAAvD,EAAoE;AAClE,YAAOA,aAAP;AACD;;AAED,OAAIQ,SAASR,aAAT,CAAJ,EAA6B;AAC3B,YAAOP,QAAQO,aAAR,CAAP,CAD2B,CACG;AAC/B;AACD,OAAMS,QAAQzD,SAASgD,aAAT,CAAd;AACA,OAAMU,qBAAqBD,QAAQT,aAAR,GAAwBA,cAAc7C,OAAd,CAAsB,iBAAtB,EAAyC,EAAzC,CAAnD;AACA,OAAMwD,cAAc,CAACF,KAAD,IAAUC,mBAAmBvC,MAAnB,KAA8B6B,cAAc7B,MAA1E;AACA,OAAMyC,iBAAiB/D,wBAAwBL,GAAxB,CAAvB;AACA,OAAIqE,iBAAJ;AACA,OAAID,cAAJ,EAAoB;AAClBC,gBAAWD,eAAeF,kBAAf,CAAX;AACD,IAFD,MAEO;AACLG,gBAAWjE,gBAAgB8D,kBAAhB,KAAuCA,kBAAlD;AACD;AACD,OAAIC,WAAJ,EAAiB;AACf,YAAUE,QAAV;AACD;AACD,UAAOA,QAAP;AACD;;AAED;;;;;AAKA,UAAS3C,eAAT,CAAyBnB,KAAzB,EAAgC;AAC9B,UAAOA,MACJI,OADI,CACI,KADJ,EACW,GADX,EACgB;AADhB,IAEJQ,KAFI,CAEE,GAFF,EAGJmD,GAHI,CAGA;AAAA,YAAKC,EAAEhD,IAAF,EAAL;AAAA,IAHA,EAGe;AAHf,IAIJiD,MAJI,CAIGC,OAJH,EAIY;AAChB;AACA;AANI,IAOJpB,MAPI,CAOG,gBAAgBqB,IAAhB,EAAyB;AAAA,SAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,SAAjBC,KAAiB,QAAjBA,KAAiB;;AAC/B,SAAMC,kBAAkB,CAACH,KAAK9D,KAAL,CAAW,KAAX,KAAqB,EAAtB,EAA0Be,MAAlD;AACA,SAAMmD,oBAAoB,CAACJ,KAAK9D,KAAL,CAAW,KAAX,KAAqB,EAAtB,EAA0Be,MAApD;AACA,SAAIiD,MAAMG,WAAN,GAAoB,CAAxB,EAA2B;AACzBJ,YAAKA,KAAKhD,MAAL,GAAc,CAAnB,IAA2BgD,KAAKA,KAAKhD,MAAL,GAAc,CAAnB,CAA3B,SAAoD+C,IAApD;AACD,MAFD,MAEO;AACLC,YAAKK,IAAL,CAAUN,IAAV;AACD;AACDE,WAAMG,WAAN,IAAqBF,kBAAkBC,iBAAvC;AACA,YAAO,EAACH,UAAD,EAAOC,YAAP,EAAP;AACD,IAjBI,EAiBF,EAACD,MAAM,EAAP,EAAWC,OAAO,EAACG,aAAa,CAAd,EAAlB,EAjBE,EAiBmCJ,IAjB1C;AAkBD;;AAED;;;;;;AAMA,UAASlE,mBAAT,CAA6BF,KAA7B,EAAoC;AAClC,OAAMkB,cAAcC,gBAAgBnB,KAAhB,CAApB;AACA,OAAIkB,YAAYE,MAAZ,IAAsB,CAAtB,IAA2BF,YAAYE,MAAZ,GAAqB,CAApD,EAAuD;AACrD,YAAOpB,KAAP;AACD;;AAJiC,sCAKCkB,WALD;AAAA,OAK3BwD,GAL2B;AAAA,OAKtBC,KALsB;AAAA,OAKfC,MALe;AAAA,OAKPC,IALO;;AAMlC,UAAO,CAACH,GAAD,EAAMG,IAAN,EAAYD,MAAZ,EAAoBD,KAApB,EAA2BrD,IAA3B,CAAgC,GAAhC,CAAP;AACD;;AAED;;;;;;;AAOA,UAASY,8BAAT,CAAwClC,KAAxC,EAA+C;AAC7C,OAAM8E,MAAM9E,MAAM+E,OAAN,CAAc,GAAd,CAAZ;AACA,OAAID,QAAQ,CAAC,CAAb,EAAgB;AACd9E,aAAW,MAAMgF,WAAWhF,KAAX,CAAjB;AACD,IAFD,MAEO;AACL;AACA,SAAMiF,MAAMjF,MAAMoB,MAAN,GAAe0D,GAAf,GAAqB,CAAjC;AACA9E,aAAQ,MAAMgF,WAAWhF,KAAX,CAAd;AACAA,aAAWA,MAAMkF,OAAN,CAAcD,GAAd,CAAX;AACD;AACD,UAAOjF,KAAP;AACD;;AAED;;;;;AAKA,UAASJ,aAAT,CAAuBuF,KAAvB,EAA8B;AAC5B,UAAOA,MAAMrC,MAAN,CAAa,UAACsC,GAAD,SAAyB;AAAA;AAAA,SAAlBC,KAAkB;AAAA,SAAXC,KAAW;;AAC3CF,SAAIC,KAAJ,IAAaC,KAAb;AACAF,SAAIE,KAAJ,IAAaD,KAAb;AACA,YAAOD,GAAP;AACD,IAJM,EAIJ,EAJI,CAAP;AAKD;;AAED,UAASnF,QAAT,CAAkBsF,GAAlB,EAAuB;AACrB,UAAO,OAAOA,GAAP,KAAe,QAAtB;AACD;;AAED,UAAS9B,QAAT,CAAkB8B,GAAlB,EAAuB;AACrB,UAAOA,OAAO,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAA7B;AACD;;AAED,UAASrC,QAAT,CAAkBqC,GAAlB,EAAuB;AACrB,UAAO,OAAOA,GAAP,KAAe,QAAtB;AACD;;AAED,UAAS5E,QAAT,CAAkB6E,SAAlB,EAA6BC,QAA7B,EAAuC;AACrC,UAAOD,UAAUT,OAAV,CAAkBU,QAAlB,MAAgC,CAAC,CAAxC;AACD,E","file":"index.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rtlCSSJS\"] = factory();\n\telse\n\t\troot[\"rtlCSSJS\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c736ca21e1cc083b415d","const mainExport = require('./index')\n\nmodule.exports = mainExport.default\nfor (const key in mainExport) {\n  if (mainExport.hasOwnProperty(key)) {\n    module.exports[key] = mainExport[key]\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webpack-entry.js","// this will be an object of properties that map to their corresponding rtl property (their doppelganger)\nconst propertiesToConvert = arrayToObject([\n  ['paddingLeft', 'paddingRight'],\n  ['marginLeft', 'marginRight'],\n  ['left', 'right'],\n  ['borderLeft', 'borderRight'],\n  ['borderLeftColor', 'borderRightColor'],\n  ['borderLeftStyle', 'borderRightStyle'],\n  ['borderTopLeftRadius', 'borderTopRightRadius'],\n  ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n])\n\n// this is the same as the propertiesToConvert except for values\nconst valuesToConvert = arrayToObject([\n  ['ltr', 'rtl'],\n  ['left', 'right'],\n  ['w-resize', 'e-resize'],\n  ['sw-resize', 'se-resize'],\n  ['nw-resize', 'ne-resize'],\n])\n\n// some values require a little fudging, that fudging goes here.\nconst propertyValueConverters = {\n  padding(value) {\n    if (isNumber(value)) {\n      return value\n    }\n    return handleQuartetValues(value)\n  },\n  textShadow(value) {\n    // intentionally leaving off the `g` flag here because we only want to change the first number (which is the offset-x)\n    return value.replace(/(-*)([.|\\d]+)/, (match, negative, number) => {\n      if (number === '0') {\n        return match\n      }\n      const doubleNegative = negative === '' ? '-' : ''\n      return `${doubleNegative}${number}`\n    })\n  },\n  borderColor(value) {\n    return handleQuartetValues(value)\n  },\n  borderRadius(value) {\n    if (isNumber(value)) {\n      return value\n    }\n    if (includes(value, '/')) {\n      const [radius1, radius2] = value.split('/')\n      const convertedRadius1 = propertyValueConverters.borderRadius(radius1.trim())\n      const convertedRadius2 = propertyValueConverters.borderRadius(radius2.trim())\n      return `${convertedRadius1} / ${convertedRadius2}`\n    }\n    const splitValues = getValuesAsList(value)\n    switch (splitValues.length) {\n      case 2: {\n        return splitValues.reverse().join(' ')\n      }\n      case 4: {\n        const [topLeft, topRight, bottomRight, bottomLeft] = splitValues\n        return [topRight, topLeft, bottomLeft, bottomRight].join(' ')\n      }\n      default: {\n        return value\n      }\n    }\n  },\n  background(value) {\n    // Yeah, this is in need of a refactor 🙃...\n    // but this property is a tough cookie 🍪\n    // get the backgroundPosition out of the string by removing everything that couldn't be the backgroundPosition value\n    const backgroundPositionValue = value\n      .replace(/(url\\(.*?\\))|(rgba?\\(.*?\\))|(hsl\\(.*?\\))|(#[a-fA-F0-9]+)|((^| )(\\D)+( |$))/g, '').trim()\n    // replace that backgroundPosition value with the converted version\n    value = value\n      .replace(backgroundPositionValue, propertyValueConverters.backgroundPosition(backgroundPositionValue))\n    // do the backgroundImage value replacing on the whole value (because why not?)\n    return propertyValueConverters.backgroundImage(value)\n  },\n  backgroundImage(value) {\n    if (!includes(value, 'url(')) {\n      return value\n    }\n    // sorry for the regex 😞, but basically this replaces _every_ instance of `ltr`, `rtl`, `right`, and `left` with\n    // the corresponding opposite. A situation we're accepting here:\n    // url('/left/right/rtl/ltr.png') will be changed to url('/right/left/ltr/rtl.png')\n    // Definite trade-offs here, but I think it's a good call.\n    return value.replace(/(^|\\W|_)((ltr)|(rtl)|(left)|(right))(\\W|_|$)/g, (match, g1, group2) => {\n      return match.replace(group2, valuesToConvert[group2])\n    })\n  },\n  backgroundPosition(value) {\n    return value\n      // intentionally only grabbing the first instance of this because that represents `left`\n      .replace(/^((-|\\d|\\.)+%)/, (match, group) => calculateNewBackgroundPosition(group))\n      .replace(/(left)|(right)/, match => valuesToConvert[match])\n  },\n  backgroundPositionX(value) {\n    if (isNumber(value)) {\n      return value\n    }\n    return propertyValueConverters.backgroundPosition(value)\n  },\n}\npropertyValueConverters.margin = propertyValueConverters.padding\npropertyValueConverters.borderWidth = propertyValueConverters.padding\npropertyValueConverters.boxShadow = propertyValueConverters.textShadow\npropertyValueConverters.webkitBoxShadow = propertyValueConverters.textShadow\npropertyValueConverters.mozBoxShadow = propertyValueConverters.textShadow\npropertyValueConverters.borderStyle = propertyValueConverters.borderColor\n\n// here's our main export! 👋\nexport default convert\n\n/**\n * converts properties and values in the CSS in JS object to their corresponding RTL values\n * @param {Object} object the CSS in JS object\n * @return {Object} the RTL converted object\n */\nfunction convert(object) {\n  return Object.keys(object).reduce((newObj, originalKey) => {\n    let originalValue = object[originalKey]\n    if (isString(originalValue)) {\n      // you're welcome to later code 😺\n      originalValue = originalValue.trim()\n    }\n    const {key, value} = convertProperty(originalKey, originalValue)\n    newObj[key] = value\n    return newObj\n  }, {})\n}\n\n/**\n * Converts a property and its value to the corresponding RTL key and value\n * @param {String} originalKey the original property key\n * @param {Number|String|Object} originalValue the original css property value\n * @return {Object} the new {key, value} pair\n */\nfunction convertProperty(originalKey, originalValue) {\n  const isNoFlip = /\\/\\*\\s?@noflip\\s?\\*\\//.test(originalValue)\n  const key = isNoFlip ? originalKey : getPropertyDoppelganger(originalKey)\n  const value = isNoFlip ? originalValue : getValueDoppelganger(key, originalValue)\n  return {key, value}\n}\n\n/**\n * This gets the RTL version of the given property if it has a corresponding RTL property\n * @param {String} property the name of the property\n * @return {String} the name of the RTL property\n */\nfunction getPropertyDoppelganger(property) {\n  return propertiesToConvert[property] || property\n}\n\n/**\n * This converts the given value to the RTL version of that value based on the key\n * @param {String} key this is the key (note: this should be the RTL version of the originalKey)\n * @param {String|Number|Object} originalValue the original css property value. If it's an object, then we'll convert that as well\n * @return {String|Number|Object} the converted value\n */\nfunction getValueDoppelganger(key, originalValue) {\n  /* eslint complexity:[2, 8] */ // let's try to keep the complexity down... If we have to do this much more, let's break this up\n  if (originalValue === null || typeof originalValue === 'undefined') {\n    return originalValue\n  }\n\n  if (isObject(originalValue)) {\n    return convert(originalValue) // recurssion 🌀\n  }\n  const isNum = isNumber(originalValue)\n  const importantlessValue = isNum ? originalValue : originalValue.replace(/ !important.*?$/, '')\n  const isImportant = !isNum && importantlessValue.length !== originalValue.length\n  const valueConverter = propertyValueConverters[key]\n  let newValue\n  if (valueConverter) {\n    newValue = valueConverter(importantlessValue)\n  } else {\n    newValue = valuesToConvert[importantlessValue] || importantlessValue\n  }\n  if (isImportant) {\n    return `${newValue} !important`\n  }\n  return newValue\n}\n\n/**\n * This takes a list of CSS values and converts it to an array\n * @param {String} value - something like `1px`, `1px 2em`, or `3pt rgb(150, 230, 550) 40px calc(100% - 5px)`\n * @return {Array} the split values (for example: `['3pt', 'rgb(150, 230, 550)', '40px', 'calc(100% - 5px)']`)\n */\nfunction getValuesAsList(value) {\n  return value\n    .replace(/ +/g, ' ') // remove all extraneous spaces\n    .split(' ')\n    .map(i => i.trim()) // get rid of extra space before/after each item\n    .filter(Boolean) // get rid of empty strings\n     // join items which are within parenthese\n     // luckily `calc (100% - 5px)` is invalid syntax and it must be `calc(100% - 5px)`, otherwise this would be even more complex\n    .reduce(({list, state}, item) => {\n      const openParansCount = (item.match(/\\(/g) || []).length\n      const closedParansCount = (item.match(/\\)/g) || []).length\n      if (state.parensDepth > 0) {\n        list[list.length - 1] = `${list[list.length - 1]} ${item}`\n      } else {\n        list.push(item)\n      }\n      state.parensDepth += openParansCount - closedParansCount\n      return {list, state}\n    }, {list: [], state: {parensDepth: 0}}).list\n}\n\n/**\n * This is intended for properties that are `top right bottom left` and will switch them to `top left bottom right`\n * @param {String} value - `1px 2px 3px 4px` for example, but also handles cases where there are too few/too many and\n * simply returns the value in those cases (which is the correct behavior)\n * @return {String} the result - `1px 4px 3px 2px` for example.\n */\nfunction handleQuartetValues(value) {\n  const splitValues = getValuesAsList(value)\n  if (splitValues.length <= 3 || splitValues.length > 4) {\n    return value\n  }\n  const [top, right, bottom, left] = splitValues\n  return [top, left, bottom, right].join(' ')\n}\n\n/**\n * Takes a percentage for background position and inverts it.\n * This was copied and modified from CSSJanus:\n * https://github.com/cssjanus/cssjanus/blob/4245f834365f6cfb0239191a151432fb85abab23/src/cssjanus.js#L152-L175\n * @param {String} value - the original value (for example 77%)\n * @return {String} the result (for example 23%)\n */\nfunction calculateNewBackgroundPosition(value) {\n  const idx = value.indexOf('.')\n  if (idx === -1) {\n    value = `${100 - parseFloat(value)}%`\n  } else {\n    // Two off, one for the \"%\" at the end, one for the dot itself\n    const len = value.length - idx - 2\n    value = 100 - parseFloat(value)\n    value = `${value.toFixed(len)}%`\n  }\n  return value\n}\n\n/**\n * Takes an array of [keyValue1, keyValue2] pairs and creates an object of {keyValue1: keyValue2, keyValue2: keyValue1}\n * @param {Array} array the array of pairs\n * @return {Object} the {key, value} pair object\n */\nfunction arrayToObject(array) {\n  return array.reduce((obj, [prop1, prop2]) => {\n    obj[prop1] = prop2\n    obj[prop2] = prop1\n    return obj\n  }, {})\n}\n\nfunction isNumber(val) {\n  return typeof val === 'number'\n}\n\nfunction isObject(val) {\n  return val && typeof val === 'object'\n}\n\nfunction isString(val) {\n  return typeof val === 'string'\n}\n\nfunction includes(inclusive, inclusee) {\n  return inclusive.indexOf(inclusee) !== -1\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}
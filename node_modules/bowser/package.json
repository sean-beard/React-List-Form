{
  "_args": [
    [
      {
        "raw": "bowser@^1.6.0",
        "scope": null,
        "escapedName": "bowser",
        "name": "bowser",
        "rawSpec": "^1.6.0",
        "spec": ">=1.6.0 <2.0.0",
        "type": "range"
      },
      "E:\\Development\\React-List-Form\\node_modules\\inline-style-prefixer"
    ]
  ],
  "_from": "bowser@>=1.6.0 <2.0.0",
  "_id": "bowser@1.7.3",
  "_inCache": true,
  "_location": "/bowser",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/bowser-1.7.3.tgz_1504072540138_0.7909299097955227"
  },
  "_npmUser": {
    "name": "lancedikson",
    "email": "lancedikson@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "bowser@^1.6.0",
    "scope": null,
    "escapedName": "bowser",
    "name": "bowser",
    "rawSpec": "^1.6.0",
    "spec": ">=1.6.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/inline-style-prefixer"
  ],
  "_resolved": "https://registry.npmjs.org/bowser/-/bowser-1.7.3.tgz",
  "_shasum": "504bdb43118ca8db9cbbadf28fd60f265af96e4f",
  "_shrinkwrap": null,
  "_spec": "bowser@^1.6.0",
  "_where": "E:\\Development\\React-List-Form\\node_modules\\inline-style-prefixer",
  "author": {
    "name": "Dustin Diaz",
    "email": "dustin@dustindiaz.com",
    "url": "http://dustindiaz.com"
  },
  "bugs": {
    "url": "https://github.com/ded/bowser/issues"
  },
  "dependencies": {},
  "description": "Lightweight browser detector",
  "devDependencies": {
    "mocha": "*",
    "smoosh": "*"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "504bdb43118ca8db9cbbadf28fd60f265af96e4f",
    "tarball": "https://registry.npmjs.org/bowser/-/bowser-1.7.3.tgz"
  },
  "gitHead": "64f1ac148f6d652f7ce993646387cfe096756351",
  "homepage": "https://github.com/lancedikson/bowser",
  "keywords": [
    "browser",
    "useragent",
    "user-agent",
    "parser",
    "ua",
    "detection",
    "ender",
    "sniff"
  ],
  "license": "MIT",
  "main": "./src/bowser.js",
  "maintainers": [
    {
      "name": "ded",
      "email": "polvero@gmail.com"
    },
    {
      "name": "lancedikson",
      "email": "lancedikson@gmail.com"
    }
  ],
  "name": "bowser",
  "optionalDependencies": {},
  "readme": "## Bowser\nA Browser detector. Because sometimes, there is no other way, and not even good modern browsers always provide good feature detection mechanisms.\n\n[![bowser ci](https://secure.travis-ci.org/ded/bowser.png)](https://travis-ci.org/ded/bowser/)\n\nSo... it works like this:\n\n``` js\nif (bowser.msie && bowser.version <= 6) {\n  alert('Hello China');\n}\n```\n\n## 1.1.0 breaking changes\nWe don't save built script in the repo anymore. The main file (`src/bowser.js`) is available through NPM or Bower.\nAlso you can download minified file from [the release page](https://github.com/ded/bowser/releases).\n\n## 1.0.0 breaking changes\n`browser = require('bowser').browser;` becomes `bowser = require('bowser');`\n\n---\n\n## API\n\n### bowser`:Object`\nUse it to get object with detected flags of your current browser.\n\n### bowser._detect(ua `:String`)`:Object`\nUse it to get object with detected flags from User Agent string.\n\n### bowser.check(minVersions`:Object`, strictMode`:Boolean`, [ua]`:String`)`:Boolean`\nUse it to check if browser is supported. In default non-strict mode any browser family not present in `minVersions` will pass the check (like Chrome in the third call in the sample bellow). When strict mode is enabled then any not specified browser family in `minVersions` will cause `check` to return `false` (in the sample it is the fourth call, the last one).\n\n``` js\n/**\n * in case of using IE10\n */\nbowser.check({msie: \"11\"});  // true\nbowser.check({msie: \"9.0\"}); // false\n\n/**\n * specific user agent\n */ \nbowser.check({chrome: \"45\"}, window.navigator.userAgent); // true\n\n/**\n * but false in strict mode\n */\nbowser.check({chrome: \"45\"}, true, window.navigator.userAgent); // false\n```\n\n### bowser.compareVersions(versions`:Array<String>`)`:Number`\nUse it to compare two versions.\n\n``` js\nbowser.compareVersions(['9.0', '10']);\n// -1\n```\n\n### bowser.isUnsupportedBrowser(minVersions`:Object`, [strictMode]`:Boolean`, [ua]`:string`)`:Boolean`\nUse it to check if browser is unsupported.\n\n``` js\nbowser.isUnsupportedBrowser({msie: \"10\"}, window.navigator.userAgent);\n// true / false\n```\n\nSee more examples in [tests](test/test.js).\n\n---\n\n## Bowser Flags\nYour mileage may vary, but these flags should be set.  See Contributing below.\n\n``` js\nalert('Hello ' + bowser.name + ' ' + bowser.version);\n```\n\n### All detected browsers\nThese flags are set for all detected browsers:\n\n* `name` - A human readable name for this browser.  E.g. 'Chrome', ''\n* `version` - Version number for the browser.  E.g. '32.0'\n\nFor unknown browsers, Bowser makes a best guess from the UA string.  So, these may not be set.\n\n### Rendering engine flags\nIf detected, one of these flags may be set to true:\n\n  * `webkit` - Chrome 0-27, Android <4.4, iOs, BB, etc.\n  * `blink` - Chrome >=28, Android >=4.4, Opera, etc.\n  * `gecko` - Firefox, etc.\n  * `msie`  - IE <= 11\n  * `msedge` - IE > 11\n\nSafari, Chrome and some other minor browsers will report that they have `webkit` engines.\nFirefox and Seamonkey will report that they have `gecko` engines.\n\n``` js\nif (bowser.webkit) {\n  // do stuff with safari & chrome & opera & android & blackberry & webos & silk\n}\n```\n\n### Device flags\nIf detected, one of these flags may be set to true:\n\n  * `mobile` - All detected mobile OSes are additionally flagged `mobile`, **unless it's a tablet**\n  * `tablet` - If a tablet device is detected, the flag `tablet` is **set instead of `mobile`**.\n\n### Browser flags\nIf detected, one of these flags may be set to true.  The rendering engine flag is shown in []'s:\n\n  * `chrome` - [`webkit`|`blink`]\n  * `firefox` - [`gecko`]\n  * `msie`\n  * `msedge`\n  * `safari` - [`webkit`]\n  * `android` - native browser - [`webkit`|`blink`]\n  * `ios` - native browser - [`webkit`]\n  * `opera` - [`blink` if >=15]\n  * `samsungBrowser` - [`blink`]\n  * `phantom` - [`webkit`]\n  * `blackberry` - native browser - [`webkit`]\n  * `webos` - native browser - [`webkit`]\n  * `silk` - Amazon Kindle browser  - [`webkit`]\n  * `bada` - [`webkit`]\n  * `tizen` - [`webkit`]\n  * `seamonkey` - [`gecko`]\n  * `sailfish` - [`gecko`]\n  * `ucbrowser` — [`webkit`]\n  * `qupzilla` — [`webkit`]\n  * `vivaldi` — [`blink`]\n  * `sleipnir` — [`blink`]\n  * `kMeleon` — [`gecko`]\n\nFor all detected browsers the browser version is set in the `version` field.\n\n### OS Flags\nIf detected, one of these flags may be set to true:\n\n  * `mac`\n  * `windows` - other than Windows Phone\n  * `windowsphone`\n  * `linux` - other than `android`, `chromeos`, `webos`, `tizen`, and `sailfish`\n  * `chromeos`\n  * `android`\n  * `ios` - also sets one of `iphone`/`ipad`/`ipod`\n  * `blackberry`\n  * `firefoxos`\n  * `webos` - may also set `touchpad`\n  * `bada`\n  * `tizen`\n  * `sailfish`\n\n`osversion` may also be set:\n\n  * `osversion` - for Android, iOS, MacOS, Windows, Windows Phone, WebOS, Bada, and Tizen.  If included in UA string.\n\niOS is always reported as `ios` and additionally as `iphone`/`ipad`/`ipod`, whichever one matches best.\nIf WebOS device is an HP TouchPad the flag `touchpad` is additionally set.\n\n### Browser capability grading\nOne of these flags may be set:\n\n  * `a` - This browser has full capabilities\n  * `c` - This browser has degraded capabilities.  Serve simpler version\n  * `x` - This browser has minimal capabilities and is probably not well detected.\n\nThere is no `b`.  For unknown browsers, none of these flags may be set.\n\n### Ender Support\n\n`package.json`\n\n``` json\n\"dependencies\": {\n  \"bowser\": \"x.x.x\"\n}\n```\n\n``` js\nif (require('bowser').chrome) {\n  alert('Hello Silicon Valley')\n}\n```\n\n### Contributing\nIf you'd like to contribute a change to bowser, modify the files in `src/`, then run the following (you'll need node + npm installed):\n\n``` sh\n$ npm install\n$ make test\n```\n\nPlease do not check-in the built files `bowser.js` and `bowser.min.js` in pull requests.\n\n### Adding tests\nSee the list in `src/useragents.js` with example user agents and their expected bowser object.\n\nWhenever you add support for new browsers or notice a bug / mismatch, please update the list and\ncheck if all tests are still passing.\n\n### Similar Projects\n* [Kong](https://github.com/BigBadBleuCheese/Kong) - A C# port of Bowser.\n\n### License\nLicensed as MIT. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ded/bowser.git"
  },
  "scripts": {
    "prepublish": "make boosh",
    "test": "make test"
  },
  "typings": "./typings.d.ts",
  "version": "1.7.3"
}

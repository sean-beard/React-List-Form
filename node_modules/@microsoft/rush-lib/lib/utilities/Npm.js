// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilities_1 = require("./Utilities");
var semver = require("semver");
/**
 * @public
 */
var Npm = (function () {
    function Npm() {
    }
    Npm.publishedVersions = function (packageName, cwd, env) {
        var versions = [];
        try {
            var packageTime = Utilities_1.default.executeCommandAndCaptureOutput('npm', ("view " + packageName + " time --json").split(' '), cwd, env);
            if (packageTime && packageTime !== '') {
                Object.keys(JSON.parse(packageTime)).forEach(function (v) {
                    if (semver.valid(v)) {
                        versions.push(v);
                    }
                });
            }
            else {
                console.log("Package " + packageName + " time value does not exist. Fall back to versions.");
                // time property does not exist. It happens sometimes. Fall back to versions.
                var packageVersions = Utilities_1.default.executeCommandAndCaptureOutput('npm', ("view " + packageName + " versions --json").split(' '), cwd, env);
                (JSON.parse(packageVersions)).forEach(function (v) {
                    versions.push(v);
                });
            }
        }
        catch (error) {
            if (error.message.indexOf('npm ERR! 404') >= 0) {
                console.log("Package " + packageName + " does not exist in the registry.");
            }
            else {
                console.log("Failed to get npm information about " + packageName + ".");
                throw error;
            }
        }
        return versions;
    };
    return Npm;
}());
exports.default = Npm;

//# sourceMappingURL=Npm.js.map

{"version":3,"sources":["data/EventHooks.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;;;AAI3D;;;GAGG;AACH,IAAY,KAiBX;AAjBD,WAAY,KAAK;IACf;;OAEG;IACH,qDAAkB,CAAA;IAClB;;OAEG;IACH,uDAAmB,CAAA;IACnB;;OAEG;IACH,iDAAgB,CAAA;IAChB;;OAEG;IACH,mDAAiB,CAAA;AACnB,CAAC,EAjBW,KAAK,GAAL,aAAK,KAAL,aAAK,QAiBhB;AAED;;;;;GAKG;AACH;IAGE,oBAAmB,cAA+B;QAAlD,iBAcC;QAbC,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAmB,CAAC;QACzC,MAAM,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;YACtD,IAAM,SAAS,GAAU,KAAK,CAAC,IAAI,CAAC,CAAC;YACrC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACd,IAAM,YAAU,GAAa,EAAE,CAAC;gBAChC,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzB,cAAc,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;wBAChC,YAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACxB,CAAC,CAAC,CAAC;gBACL,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,YAAU,CAAC,CAAC;YACzC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACI,wBAAG,GAAV,UAAW,KAAY;QACrB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtC,CAAC;IACH,iBAAC;AAAD,CA1BA,AA0BC,IAAA","file":"data/EventHooks.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { IEventHooksJson } from './RushConfiguration';\r\n\r\n/**\r\n * Events happen during Rush runs.\r\n * @alpha\r\n */\r\nexport enum Event {\r\n  /**\r\n   * Pre Rush install event\r\n   */\r\n  preRushInstall = 1,\r\n  /**\r\n   * Post Rush install event\r\n   */\r\n  postRushInstall = 2,\r\n  /**\r\n   * Pre Rush build event\r\n   */\r\n  preRushBuild = 3,\r\n  /**\r\n   * Post Rush build event\r\n   */\r\n  postRushBuild = 4\r\n}\r\n\r\n/**\r\n * This class represents Rush event hooks configured for this repo.\r\n * Hooks are customized script actions that Rush executes when specific events occur.\r\n * The actions are expressed as a command-line that is executed using the operating system shell.\r\n * @alpha\r\n */\r\nexport default class EventHooks {\r\n  private _hooks: Map<Event, string[]>;\r\n\r\n  public constructor(eventHooksJson: IEventHooksJson) {\r\n    this._hooks = new Map<Event, string[]>();\r\n    Object.getOwnPropertyNames(eventHooksJson).forEach((name) => {\r\n      const eventName: Event = Event[name];\r\n      if (eventName) {\r\n        const foundHooks: string[] = [];\r\n        if (eventHooksJson[name]) {\r\n          eventHooksJson[name].forEach((hook) => {\r\n            foundHooks.push(hook);\r\n          });\r\n        }\r\n        this._hooks.set(eventName, foundHooks);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Return all the scripts associated with the specified event.\r\n   * @param event - Rush event\r\n   */\r\n  public get(event: Event): string[] {\r\n    return this._hooks.get(event) || [];\r\n  }\r\n}"],"sourceRoot":"..\\..\\src"}
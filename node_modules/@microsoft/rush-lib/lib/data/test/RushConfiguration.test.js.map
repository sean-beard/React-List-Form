{"version":3,"sources":["data/test/RushConfiguration.test.ts"],"names":[],"mappings":"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","file":"data/test/RushConfiguration.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/// <reference types='mocha' />\r\n\r\nimport { assert } from 'chai';\r\nimport RushConfiguration from '../RushConfiguration';\r\nimport { ApprovedPackagesPolicy } from '../ApprovedPackagesPolicy';\r\nimport RushConfigurationProject from '../RushConfigurationProject';\r\nimport * as path from 'path';\r\nimport Utilities from '../../utilities/Utilities';\r\n\r\nfunction normalizePathForComparison(path: string): string {\r\n  return Utilities.getAllReplaced(path, '\\\\', '/').toUpperCase();\r\n}\r\n\r\nfunction assertPathProperty(validatedPropertyName: string, absolutePath: string, relativePath: string): void {\r\n  const resolvedRelativePath: string = path.resolve(__dirname, relativePath);\r\n  assert.equal(normalizePathForComparison(absolutePath), normalizePathForComparison(resolvedRelativePath),\r\n    `Failed to validate ${validatedPropertyName}`);\r\n}\r\n\r\ndescribe('RushConfiguration', () => {\r\n\r\n  it('can load repo/rush.json', (done: MochaDone) => {\r\n    const rushFilename: string = path.resolve(__dirname, 'repo', 'rush.json');\r\n    const rushConfiguration: RushConfiguration = RushConfiguration.loadFromConfigurationFile(rushFilename);\r\n\r\n    assertPathProperty('committedShrinkwrapFilename',\r\n      rushConfiguration.committedShrinkwrapFilename, './repo/common/config/rush/npm-shrinkwrap.json');\r\n    assertPathProperty('commonFolder',\r\n      rushConfiguration.commonFolder, './repo/common');\r\n    assertPathProperty('commonRushConfigFolder',\r\n      rushConfiguration.commonRushConfigFolder, './repo/common/config/rush');\r\n    assertPathProperty('commonTempFolder',\r\n      rushConfiguration.commonTempFolder, './repo/common/temp');\r\n    assertPathProperty('npmCacheFolder',\r\n      rushConfiguration.npmCacheFolder, './repo/common/temp/npm-cache');\r\n    assertPathProperty('npmTmpFolder',\r\n      rushConfiguration.npmTmpFolder, './repo/common/temp/npm-tmp');\r\n    assertPathProperty('npmToolFilename',\r\n      rushConfiguration.npmToolFilename, './repo/common/temp/npm-local/node_modules/.bin/npm');\r\n    assertPathProperty('rushJsonFolder',\r\n      rushConfiguration.rushJsonFolder, './repo');\r\n    assertPathProperty('rushLinkJsonFilename',\r\n      rushConfiguration.rushLinkJsonFilename, './repo/common/temp/rush-link.json');\r\n\r\n    assert.equal(rushConfiguration.npmToolVersion, '4.5.0', 'Failed to validate npmToolVersion');\r\n\r\n    assert.equal(rushConfiguration.projectFolderMaxDepth, 99, 'Failed to validate projectFolderMaxDepth');\r\n    assert.equal(rushConfiguration.projectFolderMinDepth, 1, 'Failed to validate projectFolderMinDepth');\r\n\r\n    assert.equal(rushConfiguration.projects.length, 3);\r\n\r\n    // \"approvedPackagesPolicy\" feature\r\n    const approvedPackagesPolicy: ApprovedPackagesPolicy = rushConfiguration.approvedPackagesPolicy;\r\n    assert.isTrue(approvedPackagesPolicy.enabled, 'Failed to validate approvedPackagesPolicy.enabled');\r\n    assert.deepEqual(Utilities.getSetAsArray(approvedPackagesPolicy.reviewCategories),\r\n      [ 'first-party', 'third-party', 'prototype' ],\r\n      'Failed to validate approvedPackagesPolicy.reviewCategories');\r\n    assert.deepEqual(Utilities.getSetAsArray(approvedPackagesPolicy.ignoredNpmScopes),\r\n      [ '@types', '@internal' ],\r\n      'Failed to validate approvedPackagesPolicy.ignoredNpmScopes');\r\n\r\n    assert.equal(approvedPackagesPolicy.browserApprovedPackages.items[0].packageName, 'example',\r\n       'Failed to validate browserApprovedPackages.items[0]');\r\n    assert.equal(approvedPackagesPolicy.browserApprovedPackages.items[0].allowedCategories.size, 3,\r\n       'Failed to validate browserApprovedPackages.items[0]');\r\n\r\n    assert.isNotTrue(rushConfiguration.telemetryEnabled);\r\n\r\n    // Validate project1 settings\r\n    const project1: RushConfigurationProject = rushConfiguration.getProjectByName('project1');\r\n    assert.ok(project1, 'Failed to find project1');\r\n\r\n    assert.equal(project1.packageName, 'project1', 'Failed to validate project1.packageName');\r\n    assertPathProperty('project1.projectFolder', project1.projectFolder, './repo/project1');\r\n    assert.equal(project1.tempProjectName, '@rush-temp/project1', 'Failed to validate project1.tempProjectName');\r\n    assertPathProperty('project1.tempPackageJsonFilename', project1.tempPackageJsonFilename,\r\n      './repo/common/temp/projects/project1/package.json');\r\n\r\n    done();\r\n  });\r\n});\r\n"],"sourceRoot":"..\\..\\..\\src"}
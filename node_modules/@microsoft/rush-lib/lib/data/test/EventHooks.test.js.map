{"version":3,"sources":["data/test/EventHooks.test.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,8BAA8B;AAE9B,6BAA8B;AAC9B,2BAA6B;AAC7B,0DAAqD;AACrD,4CAA6D;AAE7D,QAAQ,CAAC,YAAY,EAAE;IACrB,EAAE,CAAC,wCAAwC,EAAE;QAC3C,IAAM,YAAY,GAAW,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;QAC1E,IAAM,iBAAiB,GAAsB,2BAAiB,CAAC,yBAAyB,CAAC,YAAY,CAAC,CAAC;QACvG,aAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAK,CAAC,aAAa,CAAC,EAAE,CAAC,cAAc,CAAC,EACtF,gDAAgD,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE;QAC3B,IAAM,UAAU,GAAe,IAAI,oBAAU,CAAC,EAAE,CAAC,CAAC;QAClD,aAAM,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAK,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE;QACzB,IAAM,aAAa,GAAa;YAC5B,QAAQ;YACR,QAAQ;SACT,CAAC;QACJ,IAAM,UAAU,GAAe,IAAI,oBAAU,CAAC;YAC5C,aAAa,EAAE,aAAa;SAC7B,CAAC,CAAC;QACH,IAAM,WAAW,GAAa,UAAU,CAAC,GAAG,CAAC,kBAAK,CAAC,aAAa,CAAC,CAAC;QAClE,aAAM,CAAC,SAAS,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"data/test/EventHooks.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n// <reference types='mocha' />\r\n\r\nimport { assert } from 'chai';\r\nimport * as path from 'path';\r\nimport RushConfiguration from '../RushConfiguration';\r\nimport { Event, default as EventHooks } from '../EventHooks';\r\n\r\ndescribe('EventHooks', () => {\r\n  it('loads a post build hook from rush.json', () => {\r\n    const rushFilename: string = path.resolve(__dirname, 'repo', 'rush.json');\r\n    const rushConfiguration: RushConfiguration = RushConfiguration.loadFromConfigurationFile(rushFilename);\r\n    assert.deepEqual(rushConfiguration.eventHooks.get(Event.postRushBuild), ['do something'],\r\n      'Failed to get the correct post rush build hook');\r\n  });\r\n\r\n  it('loads empty rush hooks', () => {\r\n    const eventHooks: EventHooks = new EventHooks({});\r\n    assert.equal(eventHooks.get(Event.postRushBuild).length, 0);\r\n  });\r\n\r\n  it('loads two rush hooks', () => {\r\n    const expectedHooks: string[] = [\r\n        'do one',\r\n        'do two'\r\n      ];\r\n    const eventHooks: EventHooks = new EventHooks({\r\n      postRushBuild: expectedHooks\r\n    });\r\n    const resultHooks: string[] = eventHooks.get(Event.postRushBuild);\r\n    assert.deepEqual(resultHooks, expectedHooks);\r\n  });\r\n\r\n});"],"sourceRoot":"..\\..\\..\\src"}
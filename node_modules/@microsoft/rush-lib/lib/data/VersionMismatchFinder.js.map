{"version":3,"sources":["data/VersionMismatchFinder.ts"],"names":[],"mappings":"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","file":"data/VersionMismatchFinder.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport RushConfigurationProject from './RushConfigurationProject';\r\n\r\n/**\r\n * @public\r\n */\r\nexport class VersionMismatchFinder {\r\n /* store it like this:\r\n  * {\r\n  *   \"@types/node\": {\r\n  *     \"1.0.0\": [ '@ms/rush' ]\r\n  *   }\r\n  * }\r\n  */\r\n  private _mismatches: Map<string, Map<string, string[]>>;\r\n\r\n  constructor(private _projects: RushConfigurationProject[]) {\r\n    this._mismatches = new Map<string, Map<string, string[]>>();\r\n    this._analyze();\r\n  }\r\n\r\n  public get numberOfMismatches(): number {\r\n    return this._mismatches.size;\r\n  }\r\n\r\n  public getMismatches(): Array<string> {\r\n    return this._iterableToArray<string>(this._mismatches.keys());\r\n  }\r\n\r\n  public getVersionsOfMismatch(mismatch: string): Array<string> {\r\n    return this._mismatches.has(mismatch)\r\n      ? this._iterableToArray<string>(this._mismatches.get(mismatch).keys())\r\n      : undefined;\r\n  }\r\n\r\n  public getConsumersOfMismatch(mismatch: string, version: string): Array<string> {\r\n    const mismatchedPackage: Map<string, string[]> = this._mismatches.get(mismatch);\r\n    if (!mismatchedPackage) {\r\n      return undefined;\r\n    }\r\n\r\n    const mismatchedVersion: string[] = mismatchedPackage.get(version);\r\n    return mismatchedVersion;\r\n  }\r\n\r\n  private _analyze(): void {\r\n    this._projects.forEach((project: RushConfigurationProject) => {\r\n      this._addDependenciesToList(project.packageName,\r\n        project.packageJson.dependencies, project.cyclicDependencyProjects);\r\n      this._addDependenciesToList(project.packageName,\r\n        project.packageJson.devDependencies, project.cyclicDependencyProjects);\r\n      this._addDependenciesToList(project.packageName,\r\n        project.packageJson.peerDependencies, project.cyclicDependencyProjects);\r\n      this._addDependenciesToList(project.packageName,\r\n        project.packageJson.optionalDependencies, project.cyclicDependencyProjects);\r\n    });\r\n\r\n    this._mismatches.forEach((mismatches: Map<string, string[]>, project: string) => {\r\n      if (mismatches.size <= 1) {\r\n        this._mismatches.delete(project);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _addDependenciesToList(\r\n    project: string,\r\n    dependencyMap: { [dependency: string]: string },\r\n    exclude: Set<string>): void {\r\n    Object.keys(dependencyMap || {}).forEach((dependency: string) => {\r\n      if (!exclude || !exclude.has(dependency)) {\r\n        const version: string = dependencyMap[dependency];\r\n        if (!this._mismatches.has(dependency)) {\r\n          this._mismatches.set(dependency, new Map<string, string[]>());\r\n        }\r\n        if (!this._mismatches.get(dependency).has(version)) {\r\n          this._mismatches.get(dependency).set(version, []);\r\n        }\r\n        this._mismatches.get(dependency).get(version).push(project);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _iterableToArray<T>(iterable: Iterator<T>): T[] {\r\n    const b: T[] = [];\r\n    let a: IteratorResult<T>;\r\n    while ((a = iterable.next()) && !a.done) {\r\n      b.push(a.value);\r\n    }\r\n    return b;\r\n  }\r\n}"],"sourceRoot":"..\\..\\src"}
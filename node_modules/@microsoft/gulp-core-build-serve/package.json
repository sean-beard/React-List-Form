{
  "_args": [
    [
      {
        "raw": "@microsoft/gulp-core-build-serve@2.1.8",
        "scope": "@microsoft",
        "escapedName": "@microsoft%2fgulp-core-build-serve",
        "name": "@microsoft/gulp-core-build-serve",
        "rawSpec": "2.1.8",
        "spec": "2.1.8",
        "type": "version"
      },
      "E:\\Development\\React-List-Form\\node_modules\\@microsoft\\sp-build-web"
    ]
  ],
  "_from": "@microsoft/gulp-core-build-serve@2.1.8",
  "_id": "@microsoft/gulp-core-build-serve@2.1.8",
  "_inCache": true,
  "_location": "/@microsoft/gulp-core-build-serve",
  "_nodeVersion": "6.9.5",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/gulp-core-build-serve-2.1.8.tgz_1502925436911_0.08823184226639569"
  },
  "_npmUser": {
    "name": "odspnpm",
    "email": "odspnpm@microsoft.com"
  },
  "_npmVersion": "4.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@microsoft/gulp-core-build-serve@2.1.8",
    "scope": "@microsoft",
    "escapedName": "@microsoft%2fgulp-core-build-serve",
    "name": "@microsoft/gulp-core-build-serve",
    "rawSpec": "2.1.8",
    "spec": "2.1.8",
    "type": "version"
  },
  "_requiredBy": [
    "/@microsoft/sp-build-core-tasks",
    "/@microsoft/sp-build-web",
    "/@microsoft/sp-webpart-workbench"
  ],
  "_resolved": "https://registry.npmjs.org/@microsoft/gulp-core-build-serve/-/gulp-core-build-serve-2.1.8.tgz",
  "_shasum": "cf4fe266e4e861b2715e851447167e0c7e737553",
  "_shrinkwrap": null,
  "_spec": "@microsoft/gulp-core-build-serve@2.1.8",
  "_where": "E:\\Development\\React-List-Form\\node_modules\\@microsoft\\sp-build-web",
  "bugs": {
    "url": "https://github.com/microsoft/web-build-tools/issues"
  },
  "dependencies": {
    "@microsoft/gulp-core-build": "2.9.3",
    "@types/node": "6.0.62",
    "deasync": "~0.1.7",
    "express": "~4.14.0",
    "gulp": "~3.9.1",
    "gulp-connect": "~5.0.0",
    "gulp-open": "~2.0.0",
    "gulp-util": "~3.0.7",
    "node-forge": "~0.7.1",
    "sudo": "~1.0.3"
  },
  "description": "`gulp-core-build-serve` is a `gulp-core-build` subtask for testing/serving web content on the localhost, and live reloading it when things change.",
  "devDependencies": {
    "@microsoft/node-library-build": "~3.2.0",
    "@types/express": "4.0.35",
    "@types/express-serve-static-core": "4.0.41",
    "@types/gulp": "3.8.32",
    "@types/gulp-util": "3.0.30",
    "@types/mime": "0.0.29",
    "@types/node-forge": "0.6.8",
    "@types/orchestrator": "0.0.30",
    "@types/q": "0.0.32",
    "@types/serve-static": "1.7.31",
    "@types/through2": "2.0.32",
    "@types/vinyl": "1.2.30"
  },
  "directories": {},
  "dist": {
    "shasum": "cf4fe266e4e861b2715e851447167e0c7e737553",
    "tarball": "https://registry.npmjs.org/@microsoft/gulp-core-build-serve/-/gulp-core-build-serve-2.1.8.tgz"
  },
  "homepage": "https://github.com/microsoft/web-build-tools#readme",
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "odspnpm",
      "email": "odspnpm@microsoft.com"
    },
    {
      "name": "microsoft",
      "email": "npmjs@microsoft.com"
    }
  ],
  "name": "@microsoft/gulp-core-build-serve",
  "optionalDependencies": {},
  "readme": "# @microsoft/gulp-core-build-serve\r\n\r\n\r\n`gulp-core-build-serve` is a `gulp-core-build` subtask for testing/serving web content on the localhost, and live reloading it when things change.\r\n\r\n[![npm version](https://badge.fury.io/js/%40microsoft%2Fgulp-core-build-serve.svg)](https://badge.fury.io/js/%40microsoft%2Fgulp-core-build-serve)\r\n[![Build Status](https://travis-ci.org/Microsoft/gulp-core-build-serve.svg?branch=master)](https://travis-ci.org/Microsoft/gulp-core-build-serve) [![Dependencies](https://david-dm.org/Microsoft/gulp-core-build-serve.svg)](https://david-dm.org/Microsoft/gulp-core-build-serve)\r\n\r\n# ServeTask\r\nA task which spins up two servers, one for serving files in the project, and another for\r\nmocking out an API server to run on a different port.\r\n\r\n## Usage\r\n`--nobrowser` will stop the browser from automatically launching.\r\n\r\n`--port X` will use X as the currently active port.\r\n\r\n## Config\r\n### api\r\nThis configuration has two options. If it is undefined, no API endpoint is created.\r\n\r\nDefault: `undefined`\r\n\r\n### port\r\nThe port to run the API server on.\r\n\r\n### entryPath\r\nThe path to the API file. This file should export an object of the following interface:\r\n\r\n```typescript\r\ninterface IApiMap {\r\n  [ route: string ]: Function;\r\n}\r\n```\r\n\r\n### initialPage\r\nThe initial URL to load. This is ignored if the `--nobrowser` option is specified.\r\n\r\nDefault: `'/index.html'`\r\n\r\n### port\r\nThe port to serve on.\r\n\r\nDefault: `4321`\r\n\r\n### https\r\nA boolean determining whether HTTPS mode should be turned on.\r\n\r\nDefault: `false`\r\n\r\n### keyPath\r\nWhen the `https` option is `true`, this is the path to the HTTPS key\r\n\r\nDefault: `undefined`\r\n\r\n### certPath\r\nPath to the HTTPS cert\r\n\r\nDefault: `undefined`\r\n\r\n### pfxPath\r\nPath to the HTTPS PFX cert\r\n\r\nDefault: `undefined`\r\n\r\n### tryCreateDevCertificate\r\nIf true, when gulp-core-build-serve is initialized and a dev certificate doesn't already exist and hasn't been\r\nspecified, attempt to generate one and trust it automatically.\r\n\r\nDefault: `false`\r\n\r\n# ReloadTask\r\n## Usage\r\nIf this task is configured, whenever it is triggered it will tell `gulp-connect` to reload the page.\r\n\r\n## Config\r\n*This task doesn't have any configuration options.*\r\n\r\n# TrustCertTask\r\n## Usage\r\nThis task generates and trusts a development certificate. The certificate is self-signed\r\nand stored, along with its private key, in the user's home directory. On Windows, it's\r\ntrusted as a root certification authority in the user certificate store. On macOS, it's\r\ntrusted as a root cert in the keychain. On other platforms, the certificate is generated\r\nand signed, but the user must trust it manually. See ***Development Certificate*** below for\r\nmore information.\r\n\r\n## Config\r\n*This task doesn't have any configuration options.*\r\n\r\n# UntrustCertTask\r\n## Usage\r\nOn Windows, this task removes the certificate with the expected serial number from the user's\r\nroot certification authorities list. On macOS, it finds the SHA signature of the certificate\r\nwith the expected serial number and then removes that certificate from the keychain. On\r\nother platforms, the user must untrust the certificate manually. On all platforms,\r\nthe certificate and private key are deleted from the user's home directory. See\r\n***Development Certificate*** below for more information.\r\n\r\n## Config\r\n*This task doesn't have any configuration options.*\r\n\r\n# Development Certificate\r\n\r\n`gulp-core-build-serve` provides functionality to run a development server in HTTPS. Because\r\nHTTPS-hosted server responses are signed, hosting a server using HTTPS requires a trusted certificate\r\nsigned by a root certification authority or modern browsers will show security warnings and block\r\nunsigned responses unless they are explicitly excepted.\r\n\r\nBecause of this issue `gulp-core-build-serve` also provides functionality to generate and trust\r\n(and un-trust) a development certificate. There are two ways to generate the development certificate:\r\n\r\n1. By setting the `ServeTask`'s `tryCreateDevCertificate` configuration option to `true`. This option\r\nwill make the serve task attempt to generate and trust a development certificate before starting the\r\nserver if a certificate wasn't specified using the `keyPath` and `certPath` paramters or the `pfxPath`\r\nparameter.\r\n\r\n2. By invoking the `TrustCertTask` build task.\r\n\r\nThe certificate is generated and self-signed with a unique private key and an attempt is made to trust\r\nit (Windows and macOS only). If the user does not agree to trust the certificate, provides invalid root\r\ncredentials, or something else goes wrong, the `TrustCertTask` will fail and the `ServeTask` will serve\r\nwith the default, non-trusted certificate. If trust succeeds, the certificate and the private key are\r\ndropped in the `.gcb-serve-data` directory in the user's home folder in `PEM` format. On platforms\r\nother than Windows and macOS, the certificate and key are always dropped in that directory, and the user\r\nmust trust the certificate manually.\r\n\r\nAfter the certificate has been generated, trusted, and dropped in the home folder, any instance of\r\n`gulp-core-build-serve` running in any project will use it when running in HTTPS mode.\r\n\r\nTo untrust the certificate, invoke the `UntrustCertTask`. On Windows, this task deletes the certificate\r\nby its serial number from the user root certification authorities store, and on macOS the certificate's\r\nsignature is found by its serial number and then the certificate is deleted from the keychain by its\r\nsignature. Regardless of whether the untrust succeeds or not, the certificate and key are deleted\r\nfrom the user's home directory.\r\n\r\nTo manually untrust the certificate, delete the files in the `.gcb-serve-data` directory under your\r\nhome directory and untrust the certificate with the\r\n`73 1c 32 17 44 e3 46 50 a2 02 e3 ef 91 c3 c1 b9` serial number.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/microsoft/web-build-tools.git"
  },
  "scripts": {
    "build": "gulp",
    "clean": "gulp clean",
    "test": "gulp"
  },
  "typings": "lib/index.d.ts",
  "version": "2.1.8"
}

"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var gulp_core_build_1 = require("@microsoft/gulp-core-build");
/**
 * This task generates and trusts a development certificate. The certificate is self-signed
 *  and stored, along with its private key, in the user's home directory. On Windows, it's
 *  trusted as a root certification authority in the user certificate store. On macOS, it's
 *  trusted as a root cert in the keychain. On other platforms, the certificate is generated
 *  and signed, but the user must trust it manually.
 */
var TrustCertTask = (function (_super) {
    __extends(TrustCertTask, _super);
    function TrustCertTask() {
        return _super.call(this, 'trust-cert') || this;
    }
    TrustCertTask.prototype.executeTask = function (gulp, completeCallback) {
        var ensureCertificate = require('./certificates').ensureCertificate; // tslint:disable-line
        var certificate = ensureCertificate(true, this);
        if (certificate.pemCertificate && certificate.pemKey) {
            completeCallback();
        }
        else {
            completeCallback('Error trusting development certificate.');
        }
    };
    return TrustCertTask;
}(gulp_core_build_1.GulpTask));
exports.default = TrustCertTask;

//# sourceMappingURL=TrustCertTask.js.map

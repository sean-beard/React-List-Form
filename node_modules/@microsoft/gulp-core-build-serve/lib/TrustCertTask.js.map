{"version":3,"sources":["TrustCertTask.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;AAE3D,8DAAsD;AAItD;;;;;;GAMG;AACH;IAA2C,iCAAc;IACvD;eACE,kBAAM,YAAY,CAAC;IACrB,CAAC;IAEM,mCAAW,GAAlB,UAAmB,IAAiB,EAAE,gBAA0C;QACtE,IAAA,+DAAiB,CAA+B,CAAC,sBAAsB;QAC/E,IAAM,WAAW,GAAiB,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAEhE,EAAE,CAAC,CAAC,WAAW,CAAC,cAAc,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YACrD,gBAAgB,EAAE,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,gBAAgB,CAAC,yCAAyC,CAAC,CAAC;QAC9D,CAAC;IACH,CAAC;IACH,oBAAC;AAAD,CAfA,AAeC,CAf0C,0BAAQ,GAelD","file":"TrustCertTask.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { GulpTask } from '@microsoft/gulp-core-build';\r\nimport * as Gulp from 'gulp';\r\nimport { ICertificate } from './certificates';\r\n\r\n/**\r\n * This task generates and trusts a development certificate. The certificate is self-signed\r\n *  and stored, along with its private key, in the user's home directory. On Windows, it's\r\n *  trusted as a root certification authority in the user certificate store. On macOS, it's\r\n *  trusted as a root cert in the keychain. On other platforms, the certificate is generated\r\n *  and signed, but the user must trust it manually.\r\n */\r\nexport default class TrustCertTask extends GulpTask<void> {\r\n  constructor() {\r\n    super('trust-cert');\r\n  }\r\n\r\n  public executeTask(gulp: typeof Gulp, completeCallback: (error?: string) => void): void {\r\n    const { ensureCertificate } = require('./certificates'); // tslint:disable-line\r\n    const certificate: ICertificate = ensureCertificate(true, this);\r\n\r\n    if (certificate.pemCertificate && certificate.pemKey) {\r\n      completeCallback();\r\n    } else {\r\n      completeCallback('Error trusting development certificate.');\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\src"}
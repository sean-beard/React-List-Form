"use strict"

const path = require('path');
const fs = require('fs');

function resolve(packageName) {
  return path.dirname(require.resolve(packageName));
}

// Figure out where React is
let reactPath = resolve('react');
const reactPackage = require(path.join(reactPath, 'package.json'));
reactPath = path.join(reactPath, 'dist', 'react.js');

let reactDomPath = resolve('react-dom');
const reactDomPackage = require(path.join(reactDomPath, 'package.json'));
reactDomPath = path.join(reactDomPath, 'dist', 'react-dom.js');

const distPath = path.join(__dirname, 'dist');

const reactRelativePath = path.relative(distPath, reactPath);
const reactRelativeUrl = reactRelativePath.replace(/\\/g, '/');

const reactDomRelativePath = path.relative(distPath, reactDomPath);
const reactDomRelativeUrl = reactDomRelativePath.replace(/\\/g, '/');

exports.replaceFileTokens = function (distFilename, tuples) {
  const filePath = path.join(distPath, distFilename);
  let fileContents = fs.readFileSync(filePath, { encoding: 'utf-8' });

  for (const tuple of tuples) {
    fileContents = fileContents.replace(tuple.regex, tuple.replaceWith);
  }

  fs.writeFileSync(filePath, fileContents);
};

exports.fixNpmBundle = function (distFilename) {
  exports.replaceFileTokens(
    distFilename,
    [
      {
        regex: /__RELATIVE_REACT_PATH__/g,
        replaceWith: reactRelativeUrl
      },
      {
        regex: /__RELATIVE_REACT_DOM_PATH__/g,
        replaceWith: reactDomRelativeUrl
      },
      {
        regex: /__REACT_VERSION__/g,
        replaceWith: reactPackage.version
      },
      {
        regex: /__REACT_DOM_VERSION__/g,
        replaceWith: reactDomPackage.version
      }
    ]
  )
};

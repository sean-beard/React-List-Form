"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ReactDom = require("react-dom");
var DebugPrompt_1 = require("./debugPrompt/DebugPrompt");
var DebugError_1 = require("./debugError/DebugError");
var DebugPrompt_resx_1 = require("./debugPrompt/DebugPrompt.resx");
var _promptIsShown = false;
var _errorIsShown = false;
var _containerElement;
function showDebugPrompt(responseCallback) {
    if (!_promptIsShown) {
        _promptIsShown = true;
        ReactDom.render(React.createElement(DebugPrompt_1.default, { title: DebugPrompt_resx_1.default.debugManifestLoadingTitle, callback: responseCallback }), _ensureEmptyContainerElement());
    }
}
exports.showDebugPrompt = showDebugPrompt;
function showDebugLoaderPrompt() {
    return new Promise(function (resolve) {
        ReactDom.render(React.createElement(DebugPrompt_1.default, { title: DebugPrompt_resx_1.default.debugLoaderLoadingTitle, callback: resolve }), _ensureEmptyContainerElement());
    });
}
exports.showDebugLoaderPrompt = showDebugLoaderPrompt;
function showError(innerError, errorText) {
    if (!_errorIsShown) {
        _errorIsShown = true;
        ReactDom.render(React.createElement(DebugError_1.default, { innerError: innerError, errorText: errorText }), _ensureEmptyContainerElement());
    }
}
exports.showError = showError;
function _ensureEmptyContainerElement() {
    if (!_containerElement) {
        _containerElement = document.createElement('div');
        document.body.appendChild(_containerElement);
    }
    return _containerElement;
}

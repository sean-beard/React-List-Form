"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Dialog_1 = require("office-ui-fabric-react/lib/Dialog");
var Button_1 = require("office-ui-fabric-react/lib/Button");
var DebugError_module_scss_1 = require("./DebugError.module.scss");
var debugComponents_module_scss_1 = require("././../debugComponents.module.scss");
var DebugError_resx_1 = require("./DebugError.resx");
var DebugError = (function (_super) {
    __extends(DebugError, _super);
    function DebugError(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isShown: true
        };
        return _this;
    }
    DebugError.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { "data-automation-id": 'debugManifestErrorDialog', role: 'dialog' },
            React.createElement(Dialog_1.Dialog, { isOpen: this.state.isShown, isBlocking: true, type: Dialog_1.DialogType.largeHeader, title: DebugError_resx_1.default.debugManifestErrorTitle, containerClassName: debugComponents_module_scss_1.default.dialogContainer },
                React.createElement("p", { className: DebugError_module_scss_1.default.detailText }, this.props.errorText || DebugError_resx_1.default.debugManifestErrorDetail),
                React.createElement("p", { className: DebugError_module_scss_1.default.code }, this.props.innerError.toString()),
                React.createElement(Dialog_1.DialogFooter, null,
                    React.createElement(Button_1.PrimaryButton, { "data-automation-id": 'debugManifestErrorDismissButton', onClick: function () { return _this.setState({ isShown: false }); } }, DebugError_resx_1.default.debugManifestErrorDismissButtonText)))));
    };
    return DebugError;
}(React.Component));
exports.default = DebugError;

{"version":3,"sources":["url/UrlFillHelper.ts"],"names":[],"mappings":";;AAEA;IACE,EAAE,CAAC,CAAC,OAAO,MAAM,CAAC,GAAG,KAAK,WAAW,CAAC,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,IAAI,CAAC;QACH,IAAM,GAAG,GAAY,IAAI,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAY,CAAC;QACzE,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC;IAC3C,CAAC;IAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;AACH,CAAC;AAED;IACE,EAAE,CAAC,CAAC,OAAO,MAAM,CAAC,iBAAiB,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;QACrD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,IAAI,CAAC;QACH,IAAI,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,2CAA2C;QAC5E,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;AACH,CAAC;AAED;;GAEG;AACH,4BAAmC,GAAc;IAC/C,uCAAuC;IACvC,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC,CAAC;QACtF,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;IACrB,CAAC;AACH,CAAC;AALD,gDAKC;AAED;;GAEG;AACH,gDAAgD;AAChD,wCAA+C,eAA0B;IACvE,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC,CAAC;QACtF,MAAM,CAAC,iBAAiB,CAAC,GAAG,eAAe,EAAE,CAAC,CAAC,wCAAwC;IACzF,CAAC;AACH,CAAC;AAJD,wEAIC","file":"url/UrlFillHelper.js","sourcesContent":["import UrlType from './BaseURL';\r\n\r\nfunction urlIsPresent(): boolean {\r\n  if (typeof window.URL === 'undefined') {\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    const url: UrlType = new window.URL('http://contoso.com?a=b') as UrlType;\r\n    return url.searchParams.get('a') === 'b';\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction urlSearchParamsIsPresent(): boolean {\r\n  if (typeof window['URLSearchParams'] === 'undefined') { // tslint:disable-line:no-string-literal\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    new URLSearchParams('?a=b&c=d'); // tslint:disable-line:no-unused-expression\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Fills the window.URL class if it doesn't already exist or if its implementation is incorrect\r\n */\r\nexport function fillUrlIfNecessary(URL: () => any): void { // tslint:disable-line:no-any\r\n  // 'window' isn't defined in mocha test\r\n  if (typeof window !== 'undefined' && (!urlIsPresent() || !urlSearchParamsIsPresent())) {\r\n    window.URL = URL();\r\n  }\r\n}\r\n\r\n/**\r\n * Fills the window.URLSearchParams class if it doesn't already exist or if its implementation is incorrect\r\n */\r\n// tslint:disable-next-line:no-any variable-name\r\nexport function fillUrlSearchParamsIfNecessary(URLSearchParams: () => any): void {\r\n  if (typeof window !== 'undefined' && (!urlIsPresent() || !urlSearchParamsIsPresent())) {\r\n    window['URLSearchParams'] = URLSearchParams(); // tslint:disable-line:no-string-literal\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}
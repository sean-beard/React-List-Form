{
  "kind": "package",
  "summary": [
    {
      "kind": "textDocElement",
      "value": "This simple plugin sets the `__webpack_public_path__` variable to a value specified in the arguments, optionally appended to the SystemJs baseURL property."
    }
  ],
  "remarks": [],
  "exports": {
    "getGlobalRegisterCode": {
      "kind": "function",
      "returnValue": {
        "type": "string",
        "description": []
      },
      "parameters": {
        "debug": {
          "name": "debug",
          "description": [
            {
              "kind": "textDocElement",
              "value": "If true, the code returned code is not minified. Defaults to false."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "boolean"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "/** This function returns a block of JavaScript that maintains a global register of script tags."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "ISetWebpackPublicPathOptions": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "The base options for setting the webpack public path at runtime."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "members": {
        "getPostProcessScript": {
          "kind": "property",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "(varName: string) => string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "A function that returns a snippet of code that manipulates the variable with the name that's specified in the parameter. If this parameter isn't provided, no post-processing code is included. The variable must be modified in-place - the processed value should not be returned. See the README for more information."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "publicPath": {
          "kind": "property",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Use the specified path as the base public path."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "regexVariable": {
          "kind": "property",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Check for a variable with this name on the page and use its value as a regular expression against script paths to the bundle's script. If a value foo is passed into regexVariable, the produced bundle will look for a variable called foo during initialization, and if a foo variable is found, use its value as a regular expression to detect the bundle's script. See the README for more information."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "systemJs": {
          "kind": "property",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Use the System.baseURL property if it is defined."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "urlPrefix": {
          "kind": "property",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Use the specified string as a URL prefix after the SystemJS path or the publicPath option. If neither systemJs nor publicPath is defined, this option will not apply and an exception will be thrown."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "ISetWebpackPublicPathPluginOptions": {
      "kind": "interface",
      "extends": "ISetWebpackPublicPathOptions",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Options for the set-webpack-public-path plugin."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "members": {
        "scriptName": {
          "kind": "property",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "{\r\n    /**\r\n     * A regular expression expressed as a string to be applied to all script paths on the page.\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * If true, the name property is tokenized.\r\n     *\r\n     * See the README for more information.\r\n     */\r\n    isTokenized: boolean;\r\n  }",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "An object that describes how the public path should be discovered."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "SetPublicPathPlugin": {
      "kind": "class",
      "extends": "",
      "implements": "Plugin",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "This simple plugin sets the __webpack_public_path__ variable to a value specified in the arguments, optionally appended to the SystemJs baseURL property."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(options: ISetWebpackPublicPathPluginOptions);",
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Constructs a new instance of the "
            },
            {
              "kind": "linkDocElement",
              "referenceType": "code",
              "scopeName": "@microsoft",
              "packageName": "set-webpack-public-path-plugin",
              "exportName": "SetPublicPathPlugin",
              "value": "SetPublicPathPlugin"
            },
            {
              "kind": "textDocElement",
              "value": " class"
            }
          ],
          "remarks": []
        },
        "apply": {
          "kind": "method",
          "signature": "public apply(compiler: Webpack & ITapable): void;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "options": {
          "kind": "property",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ISetWebpackPublicPathPluginOptions",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        }
      }
    }
  }
}

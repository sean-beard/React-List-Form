define("974a7777-0990-4136-8fa6-95d80114c2e0_1.2.0", ["@microsoft/decorators","@microsoft/sp-component-base","@microsoft/sp-core-library","@microsoft/sp-http","@microsoft/sp-loader","@microsoft/sp-lodash-subset","@microsoft/sp-page-context","@ms/sp-telemetry","office-ui-fabric-react","react","react-dom"], function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 12);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
  var strings = {
    "_cUY5i3OR5M46pep9mRCR0g": {
      "ManifestNullError": "Manifest for the web part {0} is null.",
      "ManifestInvalidError": "Manifest for the web part {0} is invalid.",
      "ReadOnlyPropertyError": "This is a read-only property.",
      "BaseConstructError": "BaseClientSideWebPart is an abstract class and must be extended before use.",
      "ConstructLog": "Constructed web part: {0}.",
      "DisposeLog": "Disposed web part: {0}.",
      "MustOverrideRenderError": "Render method needs to be overriden in the derived class of web part {0}.",
      "NonBaseWebPartError": "Web part {0} must inherit from the BaseClientSideWebPart class.",
      "NotIntializedError": "Web part {0} was not initialized properly. Web parts must be instantiated using the ClientSideWebPartManager. Many web part features cannot be used till the initialization is complete.",
      "PropertyBagNullError": "Null property bag is not allowed for web part {0}. Empty property bag is supported.",
      "UndefinedModuleError": "Module is not loaded or not defined in the manifest for web part {0}.",
      "ModuleNotLoadedError": "Bootstrap module for web part {0} is not loaded. Module names exported by the bundle are '{1}'.",
      "IncorrectBoostrapModuleError": "Bootstrap module for web part {0} not of the correct type. Make sure to export your web part as 'export default WebPartName'.",
      "MissingExpectedWebPartMemberError": "The class for web part {0} is missing an expected member '{1}'.",
      "ScriptLoadErrorTemplate": "Unable to load web part {0} script resources due to: {1}.",
      "LoaderNotFoundError": "No loader could be found, unable to load web part {0}. Please contact Microsoft developer support to resolve this.",
      "SerializationFailedError": "Serialization failed for web part {0}.",
      "RenderCompletedCallNotCalledError": "renderCompleted is not called for an asynchronously rendered web part {0}.",
      "FirstTimeRenderCalledMoreThanOnceError": "Attempted to call first time render more than once for the web part {0}. Please contact Microsoft developer support to resolve this.",
      "InvalidSPLinkAttributeFormatError": "Invalid SPLINK attribute value {0}",
      "InvalidSPLinkIndexError": "Invalid SPLINK index value {0}",
      "LoadingStatus": "Loading {0}...",
      "DisplayLoadingIndicator": "Displaying loading indicator",
      "ClearLoadingIndicator": "Clear loading indicator",
      "OnAfterDeserializeReturnedNull": "onAfterDeserialize for web part {0} returned null or undefined.",
      "OnInitReturnedNullPromise": "onInit method for web part {0} returned null or undefined Promise.",
      "OnDisplayModeChangedInvalidInvocation": "onDisplayModeChanged method should only be called if there is a change in the display mode.",
      "GenericAccessibleLabelTemplate": "{0} web part",
      "StartedLoadingWebPart": "Started loading web part {0}.",
      "ModulesLoadingFailedForWebPart": "Failed loading web part {0} due to incorrect bootstrap module. The actual manifest type is {1}.",
      "ModulesLoadedForWebPart": "Successfully loaded modules for web part {0}.",
      "CompletedLoadingWebPart": "Successfully loaded web part {0}.",
      "CompletedLoadingWebPartManifests": "Successfully loaded webpart manifests.",
      "OnInitCompleted": "onInit method completed for web part {0}.",
      "StartedFirstTimeRender": "Started first time render for web part {0}.",
      "CompletedAsyncRender": "Completed async render for web part {0}.",
      "CompletedSyncRender": "Completed sync render for web part {0}.",
      "LazyEventOnNoLazyWebpart": "ViewportLoader._lazyHandler is invoked when there are no more web parts to load",
      "WebpartErrorSomethingWentWrong": "Something went wrong",
      "WebpartErrorSiteAdminAdvice": "If the problem persists, contact the site administrator and give them the information in Technical Details.",
      "WebpartErrorTechnicalDetails": "Technical Details",
      "WebpartErrorCallStackText": "***CALLSTACK:",
      "WebpartErrorErrorText": "***ERROR MESSAGE:",
      "LoadWebpartCalled": "Request {0} of {1} received to load web part {2}.",
      "WebpartDeleteRequested": "Webpart {0} is requested to delete.",
      "UnexpectedLoadRequestNegativeCount": "Unexpected negative value of _loadWebPartRequests."
    },
    "_zoj2xNtYPrp/8X0YtlTbbQ": {
      "CopyToClipboard": "Copy data",
      "General": "Summary",
      "Alias": "Alias",
      "Id": "Id",
      "InstanceId": "InstanceId",
      "IsInternal": "IsInternal",
      "Version": "Version",
      "Environment": "Environment",
      "UserAgent": "UserAgent",
      "Manifest": "Manifest",
      "Data": "Data",
      "Test": "Test",
      "LocalWorkbench": "Local Workbench",
      "SharePoint": "SharePoint",
      "ClassicSharePoint": "Classic SharePoint",
      "MadeByMicrosoft": "made by Microsoft",
      "NotMadeByMicrosoft": "not made by Microsoft"
    },
    "_ZRJdhh/Ht8a/UwYAwPqP9Q": {
      "Save": "Apply",
      "Close": "Close",
      "SaveConfirmation": "We saved your changes in the property pane.",
      "PropertyPaneBackPage": "Back",
      "PropertyPaneNextPage": "Next",
      "PropertyPanePageOfPages": "{0} of {1}",
      "PropertyPaneTitle": "{0} settings",
      "PropertyPaneEmptyStateDescription": "No settings to change for this web part.",
      "PropertyPaneFetchingSettingsDataLabel": "Loading data...",
      "NoOpOnRefreshPropertyPaneText": "refreshPropertyPane is a No Op, because the property pane is currently not attached to the web part {0}.",
      "ApplyButtonAriaDescription": "***Changes made on the property pane will be applied to the web part.",
      "ToggleOnText": "On",
      "ToggleOffText": "Off"
    }
  };

  strings.default = strings;
  return strings;
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_5__;

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_6__;

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_7__;

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_8__;

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_9__;

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_10__;

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_11__;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3),__webpack_require__(1),__webpack_require__(10),__webpack_require__(8),__webpack_require__(6),__webpack_require__(9),__webpack_require__(11),__webpack_require__(0),__webpack_require__(2),__webpack_require__(4),__webpack_require__(5),__webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_23__, __WEBPACK_EXTERNAL_MODULE_27__, __WEBPACK_EXTERNAL_MODULE_28__, __WEBPACK_EXTERNAL_MODULE_67__, __WEBPACK_EXTERNAL_MODULE_68__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp974a7777_0990_4136_8fa6_95d80114c2e0_1_2_0"];
/******/ 	window["webpackJsonp974a7777_0990_4136_8fa6_95d80114c2e0_1_2_0"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [], result;
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);
/******/ 		while(resolves.length)
/******/ 			resolves.shift()();
/******/
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// objects to store loaded and loading chunks
/******/ 	var installedChunks = {
/******/ 		3: 0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return Promise.resolve();
/******/
/******/ 		// an Promise means "currently loading".
/******/ 		if(installedChunks[chunkId]) {
/******/ 			return installedChunks[chunkId][2];
/******/ 		}
/******/ 		// start chunk loading
/******/ 		var head = document.getElementsByTagName('head')[0];
/******/ 		var script = document.createElement('script');
/******/ 		script.type = 'text/javascript';
/******/ 		script.charset = 'utf-8';
/******/ 		script.async = true;
/******/ 		script.timeout = 120000;
/******/
/******/ 		if (__webpack_require__.nc) {
/******/ 			script.setAttribute("nonce", __webpack_require__.nc);
/******/ 		}
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + ({"0":"sp-webpart-base-propertypane","1":"sp-webpart-base-maintenancemode"}[chunkId]||chunkId) + "_" + {"0":"c7a5be57786c1a900cc8","1":"8ec6ab372169554e9621","2":"604b1d575418531eac4e"}[chunkId] + ".js";
/******/ 		var timeout = setTimeout(onScriptComplete, 120000);
/******/ 		script.onerror = script.onload = onScriptComplete;
/******/ 		function onScriptComplete() {
/******/ 			// avoid mem leaks in IE.
/******/ 			script.onerror = script.onload = null;
/******/ 			clearTimeout(timeout);
/******/ 			var chunk = installedChunks[chunkId];
/******/ 			if(chunk !== 0) {
/******/ 				if(chunk) chunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));
/******/ 				installedChunks[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/
/******/ 		var promise = new Promise(function(resolve, reject) {
/******/ 			installedChunks[chunkId] = [resolve, reject];
/******/ 		});
/******/ 		installedChunks[chunkId][2] = promise;
/******/
/******/ 		head.appendChild(script);
/******/ 		return promise;
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	// Set the webpack public path
/******/ 	(function () {
/******/ 	  var scripts = document.getElementsByTagName('script');
/******/ 	  var regex = (typeof spScriptNamePattern !== 'undefined') ? spScriptNamePattern : new RegExp('sp-webpart-base_?[a-zA-Z0-9-_]*.js', 'i');
/******/ 	  var publicPath;
/******/ 	
/******/ 	  if (scripts && scripts.length) {
/******/ 	    for (var i = 0; i < scripts.length; i++) {
/******/ 	      if (!scripts[i]) continue;
/******/ 	      var path = scripts[i].getAttribute('src');
/******/ 	      if (path && path.match(regex)) {
/******/ 	        publicPath = path.substring(0, path.lastIndexOf('/') + 1);
/******/ 	        break;
/******/ 	      }
/******/ 	    }
/******/ 	  }
/******/ 	
/******/ 	  if (!publicPath) {
/******/ 	    for (var global in window.__setWebpackPublicPathLoaderSrcRegistry__) {
/******/ 	      if (global && global.match(regex)) {
/******/ 	        publicPath = global.substring(0, global.lastIndexOf('/') + 1);
/******/ 	        break;
/******/ 	      }
/******/ 	    }
/******/ 	  }
/******/ 	  __webpack_require__.p = publicPath;
/******/ 	})();
/******/ 	
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 69);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PropertyPaneFieldType;
(function (PropertyPaneFieldType) {
    PropertyPaneFieldType[PropertyPaneFieldType["Custom"] = 1] = "Custom";
    PropertyPaneFieldType[PropertyPaneFieldType["CheckBox"] = 2] = "CheckBox";
    PropertyPaneFieldType[PropertyPaneFieldType["TextField"] = 3] = "TextField";
    PropertyPaneFieldType[PropertyPaneFieldType["Toggle"] = 5] = "Toggle";
    PropertyPaneFieldType[PropertyPaneFieldType["Dropdown"] = 6] = "Dropdown";
    PropertyPaneFieldType[PropertyPaneFieldType["Label"] = 7] = "Label";
    PropertyPaneFieldType[PropertyPaneFieldType["Slider"] = 8] = "Slider";
    PropertyPaneFieldType[PropertyPaneFieldType["Heading"] = 9] = "Heading";
    PropertyPaneFieldType[PropertyPaneFieldType["ChoiceGroup"] = 10] = "ChoiceGroup";
    PropertyPaneFieldType[PropertyPaneFieldType["Button"] = 11] = "Button";
    PropertyPaneFieldType[PropertyPaneFieldType["HorizontalRule"] = 12] = "HorizontalRule";
    PropertyPaneFieldType[PropertyPaneFieldType["Link"] = 13] = "Link";
})(PropertyPaneFieldType = exports.PropertyPaneFieldType || (exports.PropertyPaneFieldType = {}));


/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var WebPartConfigurationEvent;
(function (WebPartConfigurationEvent) {
    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneConfigurationStart"] = 1] = "PropertyPaneConfigurationStart";
    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneConfigurationComplete"] = 2] = "PropertyPaneConfigurationComplete";
    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneOpened"] = 3] = "PropertyPaneOpened";
    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneClosed"] = 4] = "PropertyPaneClosed";
    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneApplyClicked"] = 5] = "PropertyPaneApplyClicked";
    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneLostFocus"] = 6] = "PropertyPaneLostFocus";
    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneWebPartsSwitched"] = 7] = "PropertyPaneWebPartsSwitched";
})(WebPartConfigurationEvent = exports.WebPartConfigurationEvent || (exports.WebPartConfigurationEvent = {}));
var PropertyPaneState;
(function (PropertyPaneState) {
    PropertyPaneState[PropertyPaneState["Open"] = 1] = "Open";
    PropertyPaneState[PropertyPaneState["Close"] = 2] = "Close";
    PropertyPaneState[PropertyPaneState["Toggle"] = 3] = "Toggle";
    PropertyPaneState[PropertyPaneState["Default"] = 4] = "Default";
    PropertyPaneState[PropertyPaneState["Refresh"] = 5] = "Refresh";
})(PropertyPaneState = exports.PropertyPaneState || (exports.PropertyPaneState = {}));


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(23);
exports.default = strings['_cUY5i3OR5M46pep9mRCR0g'];


/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_7__;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {
/**
 * An IThemingInstruction can specify a rawString to be preserved or a theme slot and a default value
 * to use if that slot is not specified by the theme.
 */
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
// IE needs to inject styles using cssText. However, we need to evaluate this lazily, so this
// value will initialize as undefined, and later will be set once on first loadStyles injection.
var _injectStylesWithCssText;
// Store the theming state in __themeState__ global scope for reuse in the case of duplicate
// load-themed-styles hosted on the page.
var _root = (typeof window === 'undefined') ? global : window; // tslint:disable-line:no-any
var _themeState = initializeThemeState();
/**
 * Matches theming tokens. For example, "[theme: themeSlotName, default: #FFF]" (including the quotes).
 */
// tslint:disable-next-line:max-line-length
var _themeTokenRegex = /[\'\"]\[theme:\s*(\w+)\s*(?:\,\s*default:\s*([\\"\']?[\.\,\(\)\#\-\s\w]*[\.\,\(\)\#\-\w][\"\']?))?\s*\][\'\"]/g;
/** Maximum style text length, for supporting IE style restrictions. */
var MAX_STYLE_CONTENT_SIZE = 10000;
var now = function () { return (typeof performance !== 'undefined' && !!performance.now) ? performance.now() : Date.now(); };
function measure(func) {
    var start = now();
    func();
    var end = now();
    _themeState.perf.duration += end - start;
}
/**
 * initialize global state object
 */
function initializeThemeState() {
    var state = _root.__themeState__ || {
        theme: undefined,
        lastStyleElement: undefined,
        registeredStyles: []
    };
    if (!state.runState) {
        state = __assign({}, (state), { perf: {
                count: 0,
                duration: 0
            }, runState: {
                flushTimer: 0,
                mode: 0 /* sync */,
                buffer: []
            } });
    }
    if (!state.registeredThemableStyles) {
        state = __assign({}, (state), { registeredThemableStyles: [] });
    }
    _root.__themeState__ = state;
    return state;
}
/**
 * Loads a set of style text. If it is registered too early, we will register it when the window.load
 * event is fired.
 * @param {string | ThemableArray} styles Themable style text to register.
 * @param {boolean} loadAsync When true, always load styles in async mode, irrespective of current sync mode.
 */
function loadStyles(styles, loadAsync) {
    if (loadAsync === void 0) { loadAsync = false; }
    measure(function () {
        var styleParts = Array.isArray(styles) ? styles : splitStyles(styles);
        if (_injectStylesWithCssText === undefined) {
            _injectStylesWithCssText = shouldUseCssText();
        }
        var _a = _themeState.runState, mode = _a.mode, buffer = _a.buffer, flushTimer = _a.flushTimer;
        if (loadAsync || mode === 1 /* async */) {
            buffer.push(styleParts);
            if (!flushTimer) {
                _themeState.runState.flushTimer = asyncLoadStyles();
            }
        }
        else {
            applyThemableStyles(styleParts);
        }
    });
}
exports.loadStyles = loadStyles;
/**
 * Allows for customizable loadStyles logic. e.g. for server side rendering application
 * @param {(processedStyles: string, rawStyles?: string | ThemableArray) => void}
 * a loadStyles callback that gets called when styles are loaded or reloaded
 */
function configureLoadStyles(loadStylesFn) {
    _themeState.loadStyles = loadStylesFn;
}
exports.configureLoadStyles = configureLoadStyles;
/**
 * Configure run mode of load-themable-styles
 * @param mode load-themable-styles run mode, async or sync
 */
function configureRunMode(mode) {
    _themeState.runState.mode = mode;
}
exports.configureRunMode = configureRunMode;
/**
 * external code can call flush to synchronously force processing of currently buffered styles
 */
function flush() {
    measure(function () {
        var styleArrays = _themeState.runState.buffer.slice();
        _themeState.runState.buffer = [];
        var mergedStyleArray = [].concat.apply([], styleArrays);
        if (mergedStyleArray.length > 0) {
            applyThemableStyles(mergedStyleArray);
        }
    });
}
exports.flush = flush;
/**
 * register async loadStyles
 */
function asyncLoadStyles() {
    return setTimeout(function () {
        _themeState.runState.flushTimer = 0;
        flush();
    }, 0);
}
/**
 * Loads a set of style text. If it is registered too early, we will register it when the window.load event
 * is fired.
 * @param {string} styleText Style to register.
 * @param {IStyleRecord} styleRecord Existing style record to re-apply.
 */
function applyThemableStyles(stylesArray, styleRecord) {
    if (_themeState.loadStyles) {
        _themeState.loadStyles(resolveThemableArray(stylesArray).styleString, stylesArray);
    }
    else {
        _injectStylesWithCssText ?
            registerStylesIE(stylesArray, styleRecord) :
            registerStyles(stylesArray);
    }
}
/**
 * Registers a set theme tokens to find and replace. If styles were already registered, they will be
 * replaced.
 * @param {theme} theme JSON object of theme tokens to values.
 */
function loadTheme(theme) {
    _themeState.theme = theme;
    // reload styles.
    reloadStyles();
}
exports.loadTheme = loadTheme;
/**
 * Clear already registered style elements and style records in theme_State object
 * @option: specify which group of registered styles should be cleared.
 * Default to be both themable and non-themable styles will be cleared
 */
function clearStyles(option) {
    if (option === void 0) { option = 3 /* all */; }
    if (option === 3 /* all */ || option === 2 /* onlyNonThemable */) {
        clearStylesInternal(_themeState.registeredStyles);
        _themeState.registeredStyles = [];
    }
    if (option === 3 /* all */ || option === 1 /* onlyThemable */) {
        clearStylesInternal(_themeState.registeredThemableStyles);
        _themeState.registeredThemableStyles = [];
    }
}
exports.clearStyles = clearStyles;
function clearStylesInternal(records) {
    records.forEach(function (styleRecord) {
        var styleElement = styleRecord && styleRecord.styleElement;
        if (styleElement && styleElement.parentElement) {
            styleElement.parentElement.removeChild(styleElement);
        }
    });
}
/**
 * Reloads styles.
 */
function reloadStyles() {
    if (_themeState.theme) {
        var themableStyles = [];
        for (var _i = 0, _a = _themeState.registeredThemableStyles; _i < _a.length; _i++) {
            var styleRecord = _a[_i];
            themableStyles.push(styleRecord.themableStyle);
        }
        if (themableStyles.length > 0) {
            clearStyles(1 /* onlyThemable */);
            applyThemableStyles([].concat.apply([], themableStyles));
        }
    }
}
/**
 * Find theme tokens and replaces them with provided theme values.
 * @param {string} styles Tokenized styles to fix.
 */
function detokenize(styles) {
    if (styles) {
        styles = resolveThemableArray(splitStyles(styles)).styleString;
    }
    return styles;
}
exports.detokenize = detokenize;
/**
 * Resolves ThemingInstruction objects in an array and joins the result into a string.
 * @param {ThemableArray} splitStyleArray ThemableArray to resolve and join.
 */
function resolveThemableArray(splitStyleArray) {
    var theme = _themeState.theme;
    var themable = false;
    // Resolve the array of theming instructions to an array of strings.
    // Then join the array to produce the final CSS string.
    var resolvedArray = (splitStyleArray || []).map(function (currentValue) {
        var themeSlot = currentValue.theme;
        if (themeSlot) {
            themable = true;
            // A theming annotation. Resolve it.
            var themedValue = theme ? theme[themeSlot] : undefined;
            var defaultValue = currentValue.defaultValue || 'inherit';
            // Warn to console if we hit an unthemed value even when themes are provided, but only if "DEBUG" is true.
            // Allow the themedValue to be undefined to explicitly request the default value.
            if (theme && !themedValue && console && !(themeSlot in theme) && "boolean" !== 'undefined' && true) {
                console.warn("Theming value not provided for \"" + themeSlot + "\". Falling back to \"" + defaultValue + "\".");
            }
            return themedValue || defaultValue;
        }
        else {
            // A non-themable string. Preserve it.
            return currentValue.rawString;
        }
    });
    return {
        styleString: resolvedArray.join(''),
        themable: themable
    };
}
/**
 * Split tokenized CSS into an array of strings and theme specification objects
 * @param {string} styles Tokenized styles to split.
 */
function splitStyles(styles) {
    var result = [];
    if (styles) {
        var pos = 0; // Current position in styles.
        var tokenMatch = void 0; // tslint:disable-line:no-null-keyword
        while (tokenMatch = _themeTokenRegex.exec(styles)) {
            var matchIndex = tokenMatch.index;
            if (matchIndex > pos) {
                result.push({
                    rawString: styles.substring(pos, matchIndex)
                });
            }
            result.push({
                theme: tokenMatch[1],
                defaultValue: tokenMatch[2] // May be undefined
            });
            // index of the first character after the current match
            pos = _themeTokenRegex.lastIndex;
        }
        // Push the rest of the string after the last match.
        result.push({
            rawString: styles.substring(pos)
        });
    }
    return result;
}
exports.splitStyles = splitStyles;
/**
 * Registers a set of style text. If it is registered too early, we will register it when the
 * window.load event is fired.
 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
 * @param {IStyleRecord} styleRecord May specify a style Element to update.
 */
function registerStyles(styleArray) {
    var head = document.getElementsByTagName('head')[0];
    var styleElement = document.createElement('style');
    var _a = resolveThemableArray(styleArray), styleString = _a.styleString, themable = _a.themable;
    styleElement.type = 'text/css';
    styleElement.appendChild(document.createTextNode(styleString));
    _themeState.perf.count++;
    head.appendChild(styleElement);
    var record = {
        styleElement: styleElement,
        themableStyle: styleArray
    };
    if (themable) {
        _themeState.registeredThemableStyles.push(record);
    }
    else {
        _themeState.registeredStyles.push(record);
    }
}
/**
 * Registers a set of style text, for IE 9 and below, which has a ~30 style element limit so we need
 * to register slightly differently.
 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
 * @param {IStyleRecord} styleRecord May specify a style Element to update.
 */
function registerStylesIE(styleArray, styleRecord) {
    var head = document.getElementsByTagName('head')[0];
    var registeredStyles = _themeState.registeredStyles;
    var lastStyleElement = _themeState.lastStyleElement;
    var stylesheet = lastStyleElement ? lastStyleElement.styleSheet : undefined;
    var lastStyleContent = stylesheet ? stylesheet.cssText : '';
    var lastRegisteredStyle = registeredStyles[registeredStyles.length - 1];
    var resolvedStyleText = resolveThemableArray(styleArray).styleString;
    if (!lastStyleElement || (lastStyleContent.length + resolvedStyleText.length) > MAX_STYLE_CONTENT_SIZE) {
        lastStyleElement = document.createElement('style');
        lastStyleElement.type = 'text/css';
        if (styleRecord) {
            head.replaceChild(lastStyleElement, styleRecord.styleElement);
            styleRecord.styleElement = lastStyleElement;
        }
        else {
            head.appendChild(lastStyleElement);
        }
        if (!styleRecord) {
            lastRegisteredStyle = {
                styleElement: lastStyleElement,
                themableStyle: styleArray
            };
            registeredStyles.push(lastRegisteredStyle);
        }
    }
    lastStyleElement.styleSheet.cssText += detokenize(resolvedStyleText);
    Array.prototype.push.apply(lastRegisteredStyle.themableStyle, styleArray); // concat in-place
    // Preserve the theme state.
    _themeState.lastStyleElement = lastStyleElement;
}
/**
 * Checks to see if styleSheet exists as a property off of a style element.
 * This will determine if style registration should be done via cssText (<= IE9) or not
 */
function shouldUseCssText() {
    var useCSSText = false;
    if (typeof document !== 'undefined') {
        var emptyStyle = document.createElement('style');
        emptyStyle.type = 'text/css';
        useCSSText = !!emptyStyle.styleSheet;
    }
    return useCSSText;
}


/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(54)))

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_9__;

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_10__;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(0);
var ClassicPageUtils = (function () {
    function ClassicPageUtils() {
    }
    ClassicPageUtils.disableAutomaticPostbacks = function (domElement, env) {
        sp_core_library_1.Validate.isNotNullOrUndefined(domElement, 'domElement');
        if (env === sp_core_library_1.EnvironmentType.ClassicSharePoint) {
            domElement.addEventListener('click', function (event) {
                event.preventDefault ? event.preventDefault() : (event.returnValue = false);
            }, true );
            domElement.addEventListener('keydown', function (event) {
                if (event.keyCode === 13) {
                    event.preventDefault ? event.preventDefault() : (event.returnValue = false);
                }
            }, true );
        }
    };
    ClassicPageUtils.removeFabricLinks = function () {
        var links = document.getElementsByTagName('link');
        if (links && links.length) {
            for (var i = 0; i < links.length; i++) {
                if (links[i] && links[i].href.indexOf('fabric.min.css') !== -1) {
                    var parentNode = links[i].parentNode;
                    if (parentNode) {
                        parentNode.removeChild(links[i]);
                    }
                }
            }
        }
    };
    return ClassicPageUtils;
}());
exports.default = ClassicPageUtils;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(2);
var lodash = __webpack_require__(7);
var sp_telemetry_1 = __webpack_require__(4);
var sp_core_library_1 = __webpack_require__(0);
var sp_component_base_1 = __webpack_require__(27);
var PropertyPaneDefinitions_1 = __webpack_require__(5);
var SPWebPartError_1 = __webpack_require__(15);
var Object_1 = __webpack_require__(66);
var ExecuteAndReThrow_1 = __webpack_require__(64);
var ClassicPageUtils_1 = __webpack_require__(11);
var ViewportLoader_1 = __webpack_require__(25);
var Strings_resx_1 = __webpack_require__(6);
var cswp_base_module_scss_1 = __webpack_require__(16);
var WEBPARTLOADINVIEWPORTFLIGHT = 33;
var BaseClientSideWebPart = (function (_super) {
    __extends(BaseClientSideWebPart, _super);
    function BaseClientSideWebPart() {
        var _this = _super.call(this) || this;
        _this._initialized = false;
        _this._logSource = sp_telemetry_1._LogSource.create('BaseClientSideWebPart');
        _this._internalIsInViewport = false;
        if (_this.constructor['name'] === 'BaseClientSideWebPart') {
            throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.BaseConstructError);
        }
        return _this;
    }
    Object.defineProperty(BaseClientSideWebPart.prototype, "domElement", {
        get: function () { return this.context.domElement; },
        set: function (o) { this._throwReadOnlyError(); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "width", {
        get: function () {
            if (this._width === undefined) {
                var width = window.getComputedStyle(this.domElement).width;
                this._width = width ? parseFloat(width) : 0;
            }
            return this._width;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "dataVersion", {
        get: function () {
            return sp_core_library_1.Version.parse('1.0');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "displayMode", {
        get: function () { return this._displayMode; },
        set: function (o) { this._throwReadOnlyError(); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "properties", {
        get: function () {
            if (this._initialized) {
                return this._properties;
            }
            else {
                throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.NotInitializedError);
            }
        },
        set: function (o) { this._throwReadOnlyError(); },
        enumerable: true,
        configurable: true
    });
    BaseClientSideWebPart.prototype._calculateMinimumHeight = function () {
        if (this.context && this.context.manifest && this.context.manifest.isInternal) {
            sp_telemetry_1._TraceLogger.logVerbose(this._logSource, "Web part " + this.context.webPartTag + " should override _calculateMinimumHeight()");
        }
        return undefined;
    };
    Object.defineProperty(BaseClientSideWebPart.prototype, "propertiesMetadata", {
        get: function () { return undefined; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "renderedOnce", {
        get: function () { return this._renderedOnce; },
        set: function (o) { this._throwReadOnlyError(); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "renderedFromPersistedData", {
        get: function () { return this._renderedFromPersistedData; },
        set: function (o) { this._throwReadOnlyError(); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "canOpenPopupOnRender", {
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "disableReactivePropertyChanges", {
        get: function () { return false; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "previewImageUrl", {
        get: function () { return undefined; },
        set: function (o) { this._throwReadOnlyError(); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "accessibleTitle", {
        get: function () { return this._getDefaultAccessibleTitle(); },
        set: function (o) { this._throwReadOnlyError(); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "title", {
        get: function () { return this._title; },
        set: function (o) { this._throwReadOnlyError(); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "description", {
        get: function () { return this._description; },
        set: function (o) { this._throwReadOnlyError(); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "isRenderAsync", {
        get: function () { return false; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "propertyPaneRenderedByWebPart", {
        set: function (o) { this._throwReadOnlyError(); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseClientSideWebPart.prototype, "persistedProperties", {
        get: function () {
            return this._backupProperties ? this._backupProperties : this.properties;
        },
        set: function (o) { this._throwReadOnlyError(); },
        enumerable: true,
        configurable: true
    });
    BaseClientSideWebPart.prototype.onInit = function () {
        return Promise.resolve(undefined);
    };
    BaseClientSideWebPart.prototype.renderCompleted = function () {
        this._renderCompleted();
    };
    BaseClientSideWebPart.prototype.onDisplayModeChanged = function (oldDisplayMode) {
        sp_core_library_1.Validate.isTrue(oldDisplayMode !== this.displayMode, Strings_resx_1.default.OnDisplayModeChangedInvalidInvocation);
        this._renderWithAccessibleTitle();
    };
    BaseClientSideWebPart.prototype.onBeforeSerialize = function () {
        return undefined;
    };
    BaseClientSideWebPart.prototype.onAfterDeserialize = function (deserializedObject, dataVersion) {
        return deserializedObject;
    };
    BaseClientSideWebPart.prototype.onEvent = function (eventName, eventObject) {
    };
    BaseClientSideWebPart.prototype.getPropertyPaneConfiguration = function () {
        return undefined; 
    };
    BaseClientSideWebPart.prototype.onDispose = function () {
        if (sp_core_library_1._SPFlight.isEnabled(WEBPARTLOADINVIEWPORTFLIGHT) && !this.context.host.isViewportLoadingDisabled
            && !this._internalIsInViewport) {
            ViewportLoader_1.default.instance.unregister(this);
        }
    };
    BaseClientSideWebPart.prototype.onPropertyPaneFieldChanged = function (propertyPath, oldValue, newValue) {
    };
    BaseClientSideWebPart.prototype.onPropertyPaneConfigurationStart = function () {
    };
    BaseClientSideWebPart.prototype.onPropertyPaneConfigurationComplete = function () {
    };
    BaseClientSideWebPart.prototype.onAfterPropertyPaneChangesApplied = function () {
    };
    BaseClientSideWebPart.prototype.onPropertyPaneRendered = function () {
    };
    BaseClientSideWebPart.prototype.onAfterResize = function (newWidth) {
    };
    BaseClientSideWebPart.prototype.renderError = function (error) {
        this.context.statusRenderer.clearLoadingIndicator(this.domElement);
        this.context.statusRenderer.renderError(this.domElement, error);
        sp_telemetry_1._TraceLogger.logError(this._logSource, error);
    };
    BaseClientSideWebPart.prototype.clearError = function () {
        this.context.statusRenderer.clearError(this.domElement);
    };
    BaseClientSideWebPart.prototype._reInstateServerProcessedData = function (deserializedProperties, serverProcessedContent) {
        var _this = this;
        if (!deserializedProperties) {
            return {};
        }
        var fixedProperties = deserializedProperties;
        if (!this.renderedFromPersistedData) {
            return fixedProperties;
        }
        this._forEachPropertyWithMetaData(function (propPath, metadata) {
            if (_this.context.manifest.id !== 'b7dd04e1-19ce-4b24-9132-b60a1c2b910d'
                && metadata.isHtmlString) {
                lodash.set(fixedProperties, propPath, undefined);
            }
        }, fixedProperties);
        if (serverProcessedContent) {
            var htmlMaps = [
                serverProcessedContent.htmlStrings,
                serverProcessedContent.searchablePlainTexts,
                serverProcessedContent.imageSources,
                serverProcessedContent.links
            ];
            for (var _i = 0, htmlMaps_1 = htmlMaps; _i < htmlMaps_1.length; _i++) {
                var htmlMap = htmlMaps_1[_i];
                if (htmlMap) {
                    for (var propPath in htmlMap) {
                        var value = htmlMap[propPath];
                        if (typeof value === 'string') {
                            lodash.set(fixedProperties, propPath, value);
                        }
                    }
                }
            }
        }
        return fixedProperties;
    };
    BaseClientSideWebPart.prototype._forEachPropertyWithMetaData = function (callback, properties ) {
        if (this.propertiesMetadata) {
            for (var propPath in this.propertiesMetadata) {
                var metadata = this.propertiesMetadata[propPath];
                var wildcardCount = (propPath.match(/\*/g) || []).length;
                if (wildcardCount > 1) {
                    console.warn("Invalid property path: Multiple wildcards are not supported in property paths.\n Entry with path '" + propPath + "' got ignored in the properties metadata.");
                    continue;
                }
                else if (wildcardCount === 1) {
                    var index = propPath.indexOf('[*]');
                    if (index < -1) {
                        console.warn("Invalid property path: Wildcards are only supported inside brackets to select array\n indices as in 'foo[*].bar'. Entry with path '" + propPath + "' got ignored in the properties metadata.");
                        continue;
                    }
                    else {
                        var arrayPath = propPath.substr(0, index);
                        var arrayInstance = lodash.get(properties || this.properties, arrayPath);
                        if (!arrayInstance) {
                            console.warn("Invalid property path: Could not find an array named '" + arrayPath + "' in the properties.\n Entry with path '" + propPath + "' got ignored in the properties metadata.");
                            continue;
                        }
                        else {
                            for (var i = 0; i < arrayInstance.length; i++) {
                                var fixedPropPath = propPath.replace('*', "" + i);
                                callback(fixedPropPath, metadata);
                            }
                        }
                    }
                }
                else {
                    callback(propPath, metadata);
                }
            }
        }
    };
    BaseClientSideWebPart.prototype._deserialize = function (data) {
        return this._reInstateServerProcessedData(data.properties, data.serverProcessedContent);
    };
    BaseClientSideWebPart.prototype._internalInitialize = function (webPartContext) {
        sp_core_library_1.Validate.isNotNullOrUndefined(webPartContext, 'webPartContext');
        Object_1.deepFreeze(webPartContext.manifest);
        _super.prototype._initializeContext.call(this, webPartContext);
        this._logEntry = 'BaseClientSideWebPart';
        sp_telemetry_1._TraceLogger.logVerbose(this._logSource, sp_core_library_1.Text.format(Strings_resx_1.default.ConstructLog, webPartContext.webPartTag));
        this._renderedOnce = false;
        this['__type'] = 'BaseClientSideWebPart';
        this.render = this.render.bind(this);
        this.onDispose = this.onDispose.bind(this);
        this.renderError = this.renderError.bind(this);
        this.clearError = this.clearError.bind(this);
        this.renderCompleted = this.renderCompleted.bind(this);
        this.onPropertyPaneRendered = this.onPropertyPaneRendered.bind(this);
        this._initialized = true;
    };
    BaseClientSideWebPart.prototype._internalDeserialize = function (data) {
        if (data) {
            if (data.title) {
                this._title = data.title;
            }
            if (data.description) {
                this._description = data.description;
            }
            if (typeof data.dataVersion !== 'string') {
                data.dataVersion = '1.0';
            }
            var deserializedData = {
                properties: data.properties,
                serverProcessedContent: data.serverProcessedContent,
                dataVersion: sp_core_library_1.Version.tryParse(data.dataVersion)
            };
            var deserializedPropsObject = this._deserialize(deserializedData);
            var fixedProps = this.onAfterDeserialize(deserializedPropsObject, deserializedData.dataVersion);
            if (!fixedProps) {
                throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.OnAfterDeserializeReturnedNull, this.context.webPartTag);
            }
            this._properties = fixedProps;
        }
    };
    BaseClientSideWebPart.prototype._internalFirstTimeRender = function (addedFromPersistedData, mode, qosMonitor, data) {
        var _this = this;
        if (mode === void 0) { mode = sp_core_library_1.DisplayMode.Read; }
        if (this._renderPromiseResolver) {
            throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.FirstTimeRenderCalledMoreThanOnce, this.context.webPartTag);
        }
        sp_telemetry_1._TraceLogger.logVerboseData({
            source: this._logSource,
            message: sp_core_library_1.Text.format(Strings_resx_1.default.StartedFirstTimeRender, this.context.webPartTag),
            serviceScope: this.context.serviceScope
        });
        return new Promise(function (resolve) {
            if (!_this._initialized && qosMonitor) {
                qosMonitor.writeUnexpectedFailure('BaseConstructorNotCalled');
                throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.NotInitializedError, _this.context.webPartTag);
            }
            _this._displayMode = mode;
            _this._renderedFromPersistedData = addedFromPersistedData;
            if (!_this._renderedFromPersistedData) {
                var isInternal = _this.context.manifest.isInternal || false;
                var logEntry = new sp_telemetry_1._LogEntry(_this._logSource.id, 'WebPartAdded', sp_telemetry_1._LogType.Event, {
                    'alias': _this.context.manifest.alias,
                    'isInternal': isInternal.toString()
                });
                sp_telemetry_1._EngagementLogger.logEventWithLogEntry(logEntry);
            }
            if (data) {
                _this._internalDeserialize(data);
            }
            if (!_this._properties && qosMonitor) {
                qosMonitor.writeUnexpectedFailure('PropertyBagNull');
                throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.PropertyBagNull, _this.context.webPartTag);
            }
            if (!sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('5b100873-5aad-487b-aa43-7f4cdda576f4'), '08/15/2017', 'Do not set min height')) {
                var minHeight = _this._calculateMinimumHeight();
                if (minHeight) {
                    _this.domElement.style.minHeight = minHeight + "px";
                }
            }
            _this._renderPromiseResolver = resolve;
            if (sp_core_library_1._SPFlight.isEnabled(WEBPARTLOADINVIEWPORTFLIGHT) && !_this.context.host.isViewportLoadingDisabled) {
                sp_telemetry_1._PerformanceLogger.markComponent(_this.context.webPartTag, 'loadingDelayed');
                ViewportLoader_1.default.instance.register(_this);
                if (!_this._internalIsInViewport) {
                    sp_telemetry_1._TraceLogger.logVerboseData({
                        source: _this._logSource,
                        message: "Web part " + _this.context.webPartTag + " is not in initial viewport, rendering delayed.",
                        serviceScope: _this.context.serviceScope
                    });
                }
            }
            else {
                _this._internalRenderInViewPort();
            }
        });
    };
    BaseClientSideWebPart.prototype._internalGetData = function () {
        return Promise.resolve();
    };
    BaseClientSideWebPart.prototype._internalRenderInViewPort = function () {
        var _this = this;
        if (sp_core_library_1._SPFlight.isEnabled(WEBPARTLOADINVIEWPORTFLIGHT) && !this.context.host.isViewportLoadingDisabled) {
            sp_telemetry_1._PerformanceLogger.markComponent(this.context.webPartTag, 'inViewportLoading');
            sp_telemetry_1._TraceLogger.logVerboseData({
                source: this._logSource,
                message: "Actually started first time render for web part " + this.context.webPartTag + ".",
                serviceScope: this.context.serviceScope
            });
        }
        var promise = this.onInit();
        if (!promise) {
            throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.OnInitReturnedNullPromise, this.context.webPartTag);
        }
        promise.then(function () {
            sp_telemetry_1._TraceLogger.logVerboseData({
                source: _this._logSource,
                message: sp_core_library_1.Text.format(Strings_resx_1.default.OnInitCompleted, _this.context.webPartTag),
                serviceScope: _this.context.serviceScope
            });
            sp_telemetry_1._PerformanceLogger.markComponent(_this.context.webPartTag, 'init');
            var getDataPromise = Promise.resolve();
            if (!sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('5e5b6b82-fd3b-441b-b892-8693932bf9d2'), '07/31/2017', 'Mysite cache kill switch.')) {
                getDataPromise = _this._internalGetData();
                if (!getDataPromise) {
                    throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.GetDataReturnedNullPromise, _this.context.webPartTag);
                }
            }
            getDataPromise.then(function () {
                sp_telemetry_1._PerformanceLogger.markComponent(_this.context.webPartTag, 'getDataComplete');
                _this.context.statusRenderer.clearLoadingIndicator(_this.domElement);
                _this._renderWithAccessibleTitle();
                if (!_this.isRenderAsync) {
                    _this._resolveOnRenderPromise();
                }
                else {
                    sp_telemetry_1._PerformanceLogger.markComponent(_this.context.webPartTag, 'asyncRenderStart');
                    _this._startAsyncRenderGuardTimer();
                }
            });
        });
    };
    BaseClientSideWebPart.prototype._internalSetDisplayMode = function (newDisplayMode) {
        if (this._displayMode !== newDisplayMode) {
            var oldDisplayMode = this._displayMode;
            this._displayMode = newDisplayMode;
            this.onDisplayModeChanged(oldDisplayMode);
        }
    };
    BaseClientSideWebPart.prototype._internalSetWebPartData = function (webPartData) {
        this._internalDeserialize(webPartData);
        this._renderWithAccessibleTitle();
    };
    BaseClientSideWebPart.prototype._internalGetPropertyPaneData = function () {
        return {
            webPartId: this.context.instanceId,
            title: this.title,
            isReactive: !this.disableReactivePropertyChanges,
            configuration: this.getPropertyPaneConfiguration(),
            properties: lodash.cloneDeep(this.properties),
            onPropertyPaneFieldChanged: undefined,
            onConfigurationEvent: undefined,
            onRendered: this.onPropertyPaneRendered
        };
    };
    BaseClientSideWebPart.prototype._internalOnPropertyPaneFieldChanged = function (propertyPath, newValue) {
        if (this.disableReactivePropertyChanges && !this._backupProperties) {
            this._backupProperties = lodash.cloneDeep(this.properties);
        }
        var oldValue = lodash.get(this._properties, propertyPath); 
        this._updateProperty(propertyPath, newValue);
        this.onPropertyPaneFieldChanged(propertyPath, oldValue, newValue);
        this._afterPropertyUpdated(!this.disableReactivePropertyChanges);
    };
    BaseClientSideWebPart.prototype._afterPropertyUpdated = function (shouldRerender) {
        if (this.context.host.setDirty) {
            this.context.host.setDirty(this.context.instanceId);
        }
        if (shouldRerender) {
            this._renderWithAccessibleTitle();
        }
    };
    BaseClientSideWebPart.prototype._internalOnConfigurationEvent = function (configurationEvent) {
        switch (configurationEvent) {
            case PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationStart:
                this.onPropertyPaneConfigurationStart();
                break;
            case PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationComplete:
                if (this.disableReactivePropertyChanges && this._backupProperties) {
                    this._properties = this._backupProperties;
                    this._backupProperties = undefined;
                }
                this.onPropertyPaneConfigurationComplete();
                break;
            case PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneApplyClicked:
                this._backupProperties = this.properties;
                this.onAfterPropertyPaneChangesApplied();
                this._afterPropertyUpdated(true);
                break;
        }
    };
    BaseClientSideWebPart.prototype._internalSetDirtyBit = function () {
        if (this.displayMode === sp_core_library_1.DisplayMode.Read) {
            return;
        }
        var serializedState = this._internalSerialize();
        var newState = JSON.stringify(serializedState);
        if (!this._previousState) {
            this._previousState = newState;
        }
        else if (this._previousState !== newState && this.context.host.setDirty) {
            this.context.host.setDirty(this.context.instanceId, serializedState);
            this._previousState = newState;
        }
    };
    BaseClientSideWebPart.prototype._serialize = function () {
        var serverProcessedContent = {
            htmlStrings: {},
            searchablePlainTexts: {},
            imageSources: {},
            links: {}
        };
        var properties = lodash.cloneDeep(this.persistedProperties);
        this._forEachPropertyWithMetaData(function (propPath, metadata) {
            var key = propPath;
            var value = lodash.get(properties, propPath);
            if (serverProcessedContent && typeof value === 'string' && value !== undefined) {
                if (serverProcessedContent.htmlStrings && metadata.isHtmlString) {
                    serverProcessedContent.htmlStrings[key] = value;
                }
                else if (serverProcessedContent.searchablePlainTexts && metadata.isSearchablePlainText) {
                    serverProcessedContent.searchablePlainTexts[key] = value;
                }
                else if (serverProcessedContent.links && metadata.isLink) {
                    serverProcessedContent.links[key] = value;
                }
                else if (serverProcessedContent.imageSources && metadata.isImageSource) {
                    serverProcessedContent.imageSources[key] = value;
                }
                lodash.set(properties, propPath, undefined);
            }
        });
        return {
            dataVersion: this.dataVersion,
            properties: properties,
            serverProcessedContent: serverProcessedContent
        };
    };
    BaseClientSideWebPart.prototype._internalSerialize = function () {
        var _this = this;
        var data; 
        ExecuteAndReThrow_1.executeAndReThrow(function () {
            _this.onBeforeSerialize();
            var serializedData = _this._serialize();
            sp_core_library_1.Validate.isNotNullOrUndefined(serializedData.dataVersion, 'serialized data version');
            data = {
                id: _this.context.manifest.id,
                instanceId: _this.context.instanceId,
                title: _this.title,
                description: _this.description,
                serverProcessedContent: serializedData.serverProcessedContent,
                dataVersion: serializedData.dataVersion.toString(),
                properties: serializedData.properties
            };
        }, SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.SerializationFailed, this.context.webPartTag), this._logSource);
        return data;
    };
    BaseClientSideWebPart.prototype._internalDispose = function () {
        _super.prototype.dispose.call(this);
        sp_telemetry_1._TraceLogger.logVerbose(this._logSource, sp_core_library_1.Text.format(Strings_resx_1.default.DisposeLog, this.context.webPartTag));
    };
    BaseClientSideWebPart.prototype._internalOnAfterResize = function () {
        this._width = undefined;
        this.onAfterResize(this.width);
    };
    BaseClientSideWebPart.prototype._updateProperty = function (propertyPath, newValue) {
        lodash.update(this.properties, propertyPath, function () { return newValue; });
    };
    BaseClientSideWebPart.prototype._throwReadOnlyError = function () {
        throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.ReadOnlyProperty);
    };
    BaseClientSideWebPart.prototype._renderWithAccessibleTitle = function () {
        this.render();
        if (this._displayMode === sp_core_library_1.DisplayMode.Edit) {
            var accessibleContext = this.accessibleTitle || this._getDefaultAccessibleTitle();
            if (accessibleContext) {
                var contextualLabelId = "cswpAccessibleLabelContextual_" + this.context.instanceId;
                var accessibleDiv = this.domElement.querySelector("#" + contextualLabelId);
                var isNewLabelElement = !accessibleDiv;
                if (isNewLabelElement) {
                    accessibleDiv = document.createElement('div');
                    accessibleDiv.id = contextualLabelId;
                    accessibleDiv.className = cswp_base_module_scss_1.default.screenReaderOnly;
                }
                accessibleDiv.textContent = accessibleContext;
                if (isNewLabelElement) {
                    this.domElement.appendChild(accessibleDiv);
                }
            }
            ClassicPageUtils_1.default.disableAutomaticPostbacks(this.domElement, sp_core_library_1.Environment.type);
        }
        if (!sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('5b100873-5aad-487b-aa43-7f4cdda576f4'), '08/15/2017', 'Do not set min height')) {
            this.domElement.style.minHeight = null; 
        }
    };
    BaseClientSideWebPart.prototype._getDefaultAccessibleTitle = function () {
        return sp_core_library_1.Text.format(Strings_resx_1.default.GenericAccessibleLabelTemplate, this.title);
    };
    BaseClientSideWebPart.prototype._startAsyncRenderGuardTimer = function () {
        var _this = this;
        this._clearAsyncRenderGuardTimer();
        this._asyncRenderQosMonitor = new sp_telemetry_1._QosMonitor("WebPartAsyncRender");
        this._asyncRenderGuardTimer = window.setTimeout(function () {
            _this._asyncRenderTimeout();
        }, 25000);
    };
    BaseClientSideWebPart.prototype._renderCompleted = function () {
        if (this._asyncRenderGuardTimer) {
            this._clearAsyncRenderGuardTimer();
            this._asyncRenderQosMonitor.writeSuccess({
                'alias': this.context.manifest.alias,
                'webPartId': this.context.manifest.id
            });
            this._resolveOnRenderPromise();
        }
    };
    BaseClientSideWebPart.prototype._asyncRenderTimeout = function () {
        if (this._asyncRenderGuardTimer) {
            this._clearAsyncRenderGuardTimer();
            var error = SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.RenderCompletedCallNotCalled, this.context.webPartTag);
            sp_telemetry_1._TraceLogger.logErrorData({
                source: this._logSource,
                error: error,
                serviceScope: this.context.serviceScope
            });
            this._asyncRenderQosMonitor.writeUnexpectedFailure('Timeout', error, {
                'alias': this.context.manifest.alias,
                'webPartId': this.context.manifest.id,
                'instanceId': this.instanceId
            });
            this._resolveOnRenderPromise();
        }
    };
    BaseClientSideWebPart.prototype._clearAsyncRenderGuardTimer = function () {
        if (this._asyncRenderGuardTimer) {
            window.clearTimeout(this._asyncRenderGuardTimer);
            this._asyncRenderGuardTimer = undefined;
        }
    };
    BaseClientSideWebPart.prototype._resolveOnRenderPromise = function () {
        this._renderedOnce = true;
        var message = sp_core_library_1.Text.format(this.isRenderAsync ? Strings_resx_1.default.CompletedAsyncRender : Strings_resx_1.default.CompletedSyncRender, this.context.webPartTag);
        sp_telemetry_1._TraceLogger.logVerboseData({
            source: this._logSource,
            message: message,
            serviceScope: this.context.serviceScope
        });
        sp_telemetry_1._PerformanceLogger.endMarkForComponent(this.context.webPartTag);
        if (this._renderPromiseResolver) {
            this._renderPromiseResolver();
        }
        this._renderPromiseResolver = undefined;
    };
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "_calculateMinimumHeight", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "propertiesMetadata", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "disableReactivePropertyChanges", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "previewImageUrl", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "accessibleTitle", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "isRenderAsync", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "onInit", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "onDisplayModeChanged", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "onBeforeSerialize", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "onAfterDeserialize", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "getPropertyPaneConfiguration", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "onDispose", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "onPropertyPaneFieldChanged", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "onPropertyPaneConfigurationStart", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "onPropertyPaneConfigurationComplete", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "onAfterPropertyPaneChangesApplied", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "onPropertyPaneRendered", null);
    __decorate([
        decorators_1.virtual
    ], BaseClientSideWebPart.prototype, "onAfterResize", null);
    return BaseClientSideWebPart;
}(sp_component_base_1.BaseComponent));
exports.default = BaseClientSideWebPart;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var loadThemedStyles = __webpack_require__(8);
var lodash = __webpack_require__(7);
var sp_loader_1 = __webpack_require__(67);
var sp_http_1 = __webpack_require__(28);
var sp_telemetry_1 = __webpack_require__(4);
var sp_core_library_1 = __webpack_require__(0);
var sp_page_context_1 = __webpack_require__(68);
var BaseClientSideWebPart_1 = __webpack_require__(12);
var ClientSideWebPartStatusRenderer_1 = __webpack_require__(57);
var EventAggregator_1 = __webpack_require__(20);
var ExecuteWithoutFailing_1 = __webpack_require__(65);
var SPWebPartError_1 = __webpack_require__(15);
var PropertyPaneDefinitions_1 = __webpack_require__(5);
var PropertyPaneController_1 = __webpack_require__(62);
var WebPartContext_1 = __webpack_require__(19);
var ClassicPageUtils_1 = __webpack_require__(11);
var ViewportLoader_1 = __webpack_require__(25);
var WebPartMetrics_1 = __webpack_require__(26);
var Strings_resx_1 = __webpack_require__(6);
var _Animations_1 = __webpack_require__(17);
var WEBPARTSCROLLANIMATIONS_FLIGHT = 966; 
var THUMBNAIL_MAX_URL_LENGTH = 255; 
var ClientSideWebPartManager = (function () {
    function ClientSideWebPartManager(host) {
        this._webparts = new Map();
        this._logSource = sp_telemetry_1._LogSource.create('ClientSideWebPartManager');
        this._eventAggregator = new EventAggregator_1.default();
        this._loadWebPartRequests = 0;
        this._statusRenderer = new ClientSideWebPartStatusRenderer_1.default();
        sp_core_library_1.Validate.isNotNullOrUndefined(host, 'host');
        this._host = host;
        this._pageContext = host.serviceScope.consume(sp_page_context_1.PageContext.serviceKey);
        this._onContainerResize = this._onContainerResize.bind(this);
        this._onPropertyPaneToggled = this._onPropertyPaneToggled.bind(this);
        this.setPropertyPaneState = this.setPropertyPaneState.bind(this);
        this.isPropertyPaneRenderedByWebPart = this.isPropertyPaneRenderedByWebPart.bind(this);
        this.isPropertyPaneOpen = this.isPropertyPaneOpen.bind(this);
        this._instantiateWebPart = this._instantiateWebPart.bind(this);
        this._handleErrorLoadingWebpart = this._handleErrorLoadingWebpart.bind(this);
        this._handleModulePromiseRejection = this._handleModulePromiseRejection.bind(this);
        this._onFirstTimeWebpartRender = this._onFirstTimeWebpartRender.bind(this);
        this._getViewportRenderedEndTime = this._getViewportRenderedEndTime.bind(this);
        this._onAllWebpartsAdded = this._onAllWebpartsAdded.bind(this);
        if (ClientSideWebPartManager._webPartManagerList.length === 0) {
            this._initialzeOnResizeEventHandler();
        }
        ClientSideWebPartManager._webPartManagerList.push(this);
    }
    ClientSideWebPartManager.prototype.loadWebPart = function (context) {
        var _this = this;
        this._loadWebPartRequests++;
        var instanceRequestCount = this._loadWebPartRequests;
        return new Promise(function (resolve, reject) {
            _this._validateInput(context);
            sp_telemetry_1._TraceLogger.logVerboseData({
                source: _this._logSource,
                message: sp_core_library_1.Text.format(Strings_resx_1.default.LoadWebpartCalled, _this._loadWebPartRequests, context.totalWebparts, context.manifest.alias + "." + context.instanceId),
                serviceScope: _this._host.serviceScope
            });
            var webPartTag = _this._createWebPartTag(context.manifest, context.instanceId);
            if (context.displayMode === undefined) {
                context.displayMode = sp_core_library_1.DisplayMode.Read;
            }
            sp_telemetry_1._PageMetricsLogger.recordMetric(WebPartMetrics_1.default.webParts);
            if (!_this._validateManifest(context.manifest, context.displayMode, webPartTag)) {
                _this.renderError(context.domElement, SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.ManifestInvalid, webPartTag));
                return;
            }
            var manifest = context.manifest; 
            var instanceId = context.instanceId;
            var domElement = context.domElement;
            var qosMonitor = _this._createLoadQosMonitor(manifest);
            sp_telemetry_1._PerformanceLogger.startMarkForComponent(webPartTag);
            sp_telemetry_1._TraceLogger.logVerboseData({
                source: _this._logSource,
                message: sp_core_library_1.Text.format(Strings_resx_1.default.StartedLoadingWebPart, webPartTag),
                serviceScope: _this._host.serviceScope
            });
            var title = context.webPartData && context.webPartData.title
                ? context.webPartData.title
                : (manifest.title && manifest.title.default 
                    ? manifest.title.default 
                    : manifest.preconfiguredEntries[0].title.default);
            _this._statusRenderer.displayLoadingIndicator(domElement, title);
            var modulePromise = sp_loader_1.SPComponentLoader.loadComponent(manifest);
            if (!modulePromise) {
                var error = SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.LoaderNotFound, webPartTag);
                _this.renderError(domElement, error);
                reject();
                return;
            }
            modulePromise.then(function (moduleLibrary) {
                sp_telemetry_1._PerformanceLogger.markComponentModuleLoaded(webPartTag);
                sp_telemetry_1._TraceLogger.logVerboseData({
                    source: _this._logSource,
                    message: sp_core_library_1.Text.format(Strings_resx_1.default.ModulesLoadedForWebPart, webPartTag),
                    serviceScope: _this._host.serviceScope
                });
                if (!moduleLibrary) {
                    throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.ModuleUndefined, webPartTag);
                }
                try {
                    var wpi = _this._instantiateWebPart(moduleLibrary, webPartTag);
                    wpi._internalInitialize(_this._getWebPartContext(context));
                    if (!_this._instanceOfBase(wpi)) {
                        throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.NonBaseWebPart, webPartTag);
                    }
                    _this._webparts.set(instanceId, wpi);
                    _this._startDirtyBitTimer(context.displayMode);
                    var webPartData = lodash.cloneDeep(context.webPartData);
                    loadThemedStyles.flush();
                    var webpartFirstRenderPromise = wpi._internalFirstTimeRender(context.addedFromPersistedData, context.displayMode, qosMonitor, webPartData).then(function () {
                        _this._onFirstTimeWebpartRender(manifest, webPartTag, qosMonitor);
                        resolve();
                    });
                    if ((_this.isCountInViewportAtStartKillSwitchOn || sp_core_library_1.Environment.type === sp_core_library_1.EnvironmentType.ClassicSharePoint)
                        && ViewportLoader_1.default.isInIntialViewport(wpi)) {
                        sp_telemetry_1._PerformanceLogger.addComponent(webPartTag);
                        sp_telemetry_1._TraceLogger.logVerboseData({
                            source: _this._logSource,
                            message: "Web part " + webPartTag + " is added into EUPL calculation.",
                            serviceScope: _this._host.serviceScope
                        });
                    }
                    if (sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.ClassicSharePoint &&
                        context.totalWebparts && context.totalWebparts === instanceRequestCount) {
                        sp_telemetry_1._TraceLogger.logVerboseData({
                            source: _this._logSource,
                            message: "All " + context.totalWebparts + " web parts requested to load, has been processed",
                            serviceScope: _this._host.serviceScope
                        });
                        _this._onAllWebpartsAdded(context);
                    }
                    else if (instanceRequestCount === 1 &&
                        sp_core_library_1.Environment.type === sp_core_library_1.EnvironmentType.ClassicSharePoint &&
                        !_this._host.isViewportLoadingDisabled) {
                        _this._onAllWebpartsAdded(context);
                    }
                    return webpartFirstRenderPromise;
                }
                catch (ex) {
                    _this._handleErrorLoadingWebpart(manifest, instanceId, domElement, ex, qosMonitor);
                    reject();
                } 
            }).catch(
            function (err) {
                _this._handleModulePromiseRejection(manifest, instanceId, domElement, webPartTag, err, qosMonitor);
                reject();
            });
        });
    };
    ClientSideWebPartManager.prototype.setPropertyPaneControl = function (id, control) {
        sp_core_library_1.Validate.isNonemptyString(id, 'id');
        sp_core_library_1.Validate.isNotNullOrUndefined(control, 'control');
        this._webparts.set(id, control);
    };
    ClientSideWebPartManager.prototype.fetchWebPartManifests = function () {
        var _this = this;
        if (!this._toolboxManifestsPromise) {
            var qosMonitor_1 = new sp_telemetry_1._QosMonitor('ClientSideWebPartManager.FetchWebParts');
            this._toolboxManifestsPromise = new Promise(function (resolve, reject) {
                if (_this._pageContext.web &&
                    _this._pageContext.web.serverRelativeUrl &&
                    sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.Local &&
                    sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.Test) {
                    var requestUrl_1 = sp_core_library_1.UrlUtilities.removeEndSlash(_this._pageContext.web.serverRelativeUrl) + "/_api/web/GetClientSideWebParts";
                    _this._host.serviceScope.whenFinished(function () {
                        var httpClient = _this._host.serviceScope.consume(sp_http_1.SPHttpClient.serviceKey);
                        httpClient.get(requestUrl_1, sp_http_1.SPHttpClient.configurations.v1)
                            .then(function (response) {
                            return response.json();
                        })
                            .then(function (value) {
                            var manifests = value.value.map(function (manifestObject) { return JSON.parse(manifestObject.Manifest); });
                            _this._disambiguateWebPartManifestLocales(manifests);
                            sp_loader_1.SPComponentLoader.registerManifests(manifests);
                            sp_telemetry_1._TraceLogger.logVerboseData({
                                source: _this._logSource,
                                message: Strings_resx_1.default.CompletedLoadingWebPartManifests,
                                serviceScope: _this._host.serviceScope
                            });
                            qosMonitor_1.writeSuccess();
                            resolve();
                        })
                            .catch(function (error) {
                            _this._toolboxManifestsPromise = undefined;
                            sp_telemetry_1._TraceLogger.logErrorData({
                                source: _this._logSource,
                                error: error,
                                serviceScope: _this._host.serviceScope
                            });
                            qosMonitor_1.writeUnexpectedFailure('Rejected', error);
                            reject(error);
                        });
                    });
                }
                else {
                    resolve();
                }
            });
        }
        return this._toolboxManifestsPromise;
    };
    ClientSideWebPartManager.prototype.getWebPartManifests = function () {
        var manifests = sp_loader_1.SPComponentLoader.getManifests();
        var result = []; 
        if (manifests) {
            for (var _i = 0, manifests_1 = manifests; _i < manifests_1.length; _i++) {
                var manifest = manifests_1[_i];
                if (manifest && manifest.componentType === 'WebPart') {
                    result.push(manifest); 
                }
            }
        }
        return result;
    };
    ClientSideWebPartManager.prototype.setDisplayMode = function (displayMode, instanceId) {
        this._executeForIdsOrAll(this._getArrayOrUndefined(instanceId), function (wp) {
            wp._internalSetDisplayMode(displayMode);
        });
        this._startDirtyBitTimer(displayMode);
    };
    ClientSideWebPartManager.prototype.serialize = function (instanceId) {
        var sd = new Map();
        this._executeForIdsOrAll(this._getArrayOrUndefined(instanceId), function (wp, _instanceId) {
            sd.set(_instanceId, wp._internalSerialize());
        });
        return sd;
    };
    ClientSideWebPartManager.prototype.setWebPartData = function (webPartData, instanceId) {
        sp_core_library_1.Validate.isNotNullOrUndefined(webPartData, 'web part data');
        sp_core_library_1.Validate.isNonemptyString(instanceId, 'web part instance id');
        var wp = this._webparts.get(instanceId);
        if (wp) {
            wp._internalSetWebPartData(webPartData);
        }
    };
    ClientSideWebPartManager.prototype.dispose = function () {
        this.disposeWebparts();
        var currentIdx = ClientSideWebPartManager._webPartManagerList.indexOf(this);
        if (currentIdx >= 0) {
            ClientSideWebPartManager._webPartManagerList.splice(currentIdx, 1);
        }
    };
    ClientSideWebPartManager.prototype.disposeWebparts = function (instanceId) {
        var _this = this;
        this._executeForIdsOrAll(this._getArrayOrUndefined(instanceId), function (wp, _instanceId) {
            ExecuteWithoutFailing_1.executeWithoutFailing(function () { wp._internalDispose(); }, _this._logSource);
            _this._deleteWebPart(_instanceId);
        });
    };
    ClientSideWebPartManager.prototype.tryGeneratePreviewImageUrl = function (instanceIds) {
        var _this = this;
        var previewImageUrl = undefined;
        var previewFromAlias = undefined;
        this._executeForIdsOrAll(instanceIds, function (wp, id) {
            if (!previewImageUrl) {
                var webParthThumbnail = wp.previewImageUrl;
                if (webParthThumbnail) {
                    previewFromAlias = wp.context.manifest.alias;
                    if (webParthThumbnail.length < THUMBNAIL_MAX_URL_LENGTH) {
                        previewImageUrl = wp.previewImageUrl;
                    }
                    else {
                        sp_telemetry_1._TraceLogger.logVerboseData({
                            source: _this._logSource,
                            eventName: 'tryGeneratePreviewImageUrl',
                            message: previewFromAlias + " attempted preview URL of " + wp.previewImageUrl.length + " chars."
                        });
                    }
                }
            }
        });
        if (!previewImageUrl && previewFromAlias) {
            var pathLengthError = new Error('tryGeneratePreviewImageUrl PathLengthError.');
            sp_telemetry_1._TraceLogger.logError(this._logSource, pathLengthError);
            throw pathLengthError;
        }
        return previewImageUrl;
    };
    ClientSideWebPartManager.prototype.setPropertyPaneState = function (instanceId, propertyPaneState, renderedByWebPart) {
        if (propertyPaneState === void 0) { propertyPaneState = PropertyPaneDefinitions_1.PropertyPaneState.Default; }
        if (!ClientSideWebPartManager._propertyPaneController) {
            ClientSideWebPartManager._propertyPaneController =
                new PropertyPaneController_1.default(function (wpId) {
                    var wp = undefined;
                    for (var i = 0; i < ClientSideWebPartManager._webPartManagerList.length; i++) {
                        wp = ClientSideWebPartManager._webPartManagerList[i]._webparts.get(wpId);
                        if (wp) {
                            break;
                        }
                    }
                    return wp;
                }, this._onWebPartConfigurationChange);
        }
        ClientSideWebPartManager._propertyPaneController.setPropertyPaneState(instanceId, propertyPaneState, renderedByWebPart);
    };
    ClientSideWebPartManager.prototype.isPropertyPaneRenderedByWebPart = function () {
        return ClientSideWebPartManager._propertyPaneController.isRenderedByWebPart();
    };
    ClientSideWebPartManager.prototype.isPropertyPaneOpen = function () {
        if (ClientSideWebPartManager._propertyPaneController) {
            return ClientSideWebPartManager._propertyPaneController.isPropertyPaneOpen();
        }
        return false;
    };
    ClientSideWebPartManager.prototype.onWebPartDelete = function (instanceId) {
        this.disposeWebparts(instanceId);
    };
    ClientSideWebPartManager.prototype.renderError = function (domElement, error) {
        var _this = this;
        ExecuteWithoutFailing_1.executeWithoutFailing(function () {
            _this._statusRenderer.renderError(domElement, error);
            sp_telemetry_1._TraceLogger.logErrorData({
                source: _this._logSource,
                error: error,
                serviceScope: _this._host.serviceScope
            });
        }, this._logSource);
    };
    ClientSideWebPartManager.prototype.notifyWebPartContainerResize = function (instanceId) {
        this._executeForIdsOrAll(this._getArrayOrUndefined(instanceId), function (wp, _instanceId) {
            wp._internalOnAfterResize();
        });
    };
    ClientSideWebPartManager.prototype._getWebPartContext = function (context) {
        var webPartTag = this._createWebPartTag(context.manifest, context.instanceId);
        var parameters = {
            parentServiceScope: this._host.serviceScope,
            manifest: this._getManifestInstance(context),
            instanceId: context.instanceId,
            webPartTag: webPartTag,
            domElement: context.domElement,
            statusRenderer: this._statusRenderer,
            eventAggregator: this._eventAggregator,
            isPropertyPaneRenderedByWebPart: this.isPropertyPaneRenderedByWebPart,
            isPropertyPaneOpen: this.isPropertyPaneOpen,
            host: this._host,
            setPropertyPaneState: this.setPropertyPaneState,
            loggingTag: webPartTag
        };
        var webPartContext = new WebPartContext_1.default(parameters);
        return webPartContext;
    };
    ClientSideWebPartManager.prototype._disambiguateWebPartManifestLocales = function (manifests) {
        var currentLocale = this._pageContext.cultureInfo.currentUICultureName
            ? this._pageContext.cultureInfo.currentUICultureName.toLowerCase()
            : undefined;
        if (currentLocale) {
            var disambiguateLocale_1 = function (values) {
                var foundMatch = undefined;
                for (var locale in values) {
                    if (locale && locale.toLowerCase() === currentLocale && values[locale]) {
                        foundMatch = values[locale];
                        break;
                    }
                }
                return {
                    default: foundMatch || values.default
                };
            };
            manifests.forEach(function (manifest) {
                if (manifest.componentType === 'WebPart') {
                    var wpManifest = manifest;
                    wpManifest.preconfiguredEntries.forEach(function (entry) {
                        entry.title = disambiguateLocale_1(entry.title);
                        entry.description = disambiguateLocale_1(entry.description);
                        if (entry.group) {
                            entry.group = disambiguateLocale_1(entry.group);
                        }
                    });
                }
            });
        }
    };
    ClientSideWebPartManager.prototype._validateInput = function (context) {
        sp_core_library_1.Validate.isNotNullOrUndefined(context, 'web part manager context');
        sp_core_library_1.Validate.isNotNullOrUndefined(context.domElement, 'web part element');
        sp_core_library_1.Validate.isNotNullOrUndefined(context.instanceId, 'web part instanceId');
        sp_core_library_1.Validate.isNotNullOrUndefined(context.manifest, 'web part manifest');
        sp_core_library_1.Validate.isTrue(!this._webparts.get(context.instanceId), 'Duplicate web part id not allowed');
    };
    ClientSideWebPartManager.prototype._validateManifest = function (manifest,  mode, webPartTag) {
        if (!manifest) {
            if (mode === sp_core_library_1.DisplayMode.Read) {
                throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.ManifestNull, webPartTag);
            }
            else {
                return false;
            }
        }
        var cm = lodash.cloneDeep(manifest);
        sp_core_library_1.Validate.isTrue(cm.manifestVersion == 2, 'Only version 2 manifests are currently supported');
        sp_core_library_1.Validate.isTrue(!!cm.id, 'web part id cannot be null or undefined');
        sp_core_library_1.Validate.isNotNullOrUndefined(sp_core_library_1.Guid.tryParse(cm.id), 'web part id has to be a GUID');
        sp_core_library_1.Validate.isTrue(!!cm.version, 'webp art version cannot be null or undefined');
        return true;
    };
    ClientSideWebPartManager.prototype._executeForIdsOrAll = function (instanceIds, cb) {
        var _this = this;
        if (instanceIds) {
            instanceIds.forEach(function (id) {
                var wp = _this._webparts.get(id);
                if (wp) {
                    cb(wp, id);
                }
            });
        }
        else {
            this._webparts.forEach(function (wp, id) {
                if (_this._instanceOfBase(wp)) {
                    cb(wp, id);
                }
            });
        }
    };
    ClientSideWebPartManager.prototype._instanceOfBase = function (wpi) {
        return wpi && (wpi instanceof BaseClientSideWebPart_1.default || wpi['__type'] === 'BaseClientSideWebPart');
    };
    ClientSideWebPartManager.prototype._getLoadedModuleList = function (moduleLibrary) {
        var loadedModulesString = '';
        for (var m in moduleLibrary) {
            if (moduleLibrary.hasOwnProperty(m)) {
                if (loadedModulesString) {
                    loadedModulesString += ',';
                }
                loadedModulesString += "" + m;
            }
        }
        return loadedModulesString;
    };
    ClientSideWebPartManager.prototype._startDirtyBitTimer = function (mode) {
        var _this = this;
        if (mode === sp_core_library_1.DisplayMode.Read) {
            if (this._dirtyBitTimer && sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.ClassicSharePoint) {
                window.clearInterval(this._dirtyBitTimer);
                this._dirtyBitTimer = undefined;
            }
        }
        else if (!this._dirtyBitTimer) {
            this._dirtyBitTimer = window.setInterval(function () {
                _this._executeForIdsOrAll(undefined, function (wp) {
                    wp._internalSetDirtyBit();
                });
            }, 1000);
        }
    };
    ClientSideWebPartManager.prototype._createSuccessExtraData = function (alias, isInternal, manifestId) {
        var successExtraData = {
            alias: alias,
            isInternal: isInternal,
            manifestId: manifestId
        };
        return successExtraData;
    };
    ClientSideWebPartManager.prototype._createUnexpectedFailureExtraData = function (alias, instanceId, isInternal, manifestId) {
        var unexpectedFailureExtraData = {
            alias: alias,
            instanceId: instanceId,
            isInternal: isInternal,
            manifestId: manifestId
        };
        return unexpectedFailureExtraData;
    };
    ClientSideWebPartManager.prototype._createLoadQosMonitor = function (manifest) {
        return new sp_telemetry_1._QosMonitor("WebPart.Load");
    };
    ClientSideWebPartManager.prototype._createWebPartTag = function (manifest, instanceId) {
        return "WebPart." + manifest.alias + "." + instanceId;
    };
    ClientSideWebPartManager.prototype._deleteWebPart = function (id) {
        sp_core_library_1.Validate.isNotNullOrUndefined(id, 'id');
        if (ClientSideWebPartManager._propertyPaneController) {
            ClientSideWebPartManager._propertyPaneController.onWebPartDelete(id);
        }
        var wpi = this._webparts.get(id);
        if (this._instanceOfBase(wpi)) {
            sp_telemetry_1._TraceLogger.logVerboseData({
                source: this._logSource,
                message: sp_core_library_1.Text.format(Strings_resx_1.default.WebpartDeleteRequested, wpi.context.webPartTag),
                serviceScope: this._host.serviceScope
            });
            this._loadWebPartRequests--;
            if (this._loadWebPartRequests < 0) {
                sp_telemetry_1._TraceLogger.logErrorData({
                    source: this._logSource,
                    error: new Error(Strings_resx_1.default.UnexpectedLoadRequestNegativeCount),
                    serviceScope: this._host.serviceScope
                });
            }
        }
        this._webparts.delete(id);
    };
    ClientSideWebPartManager.prototype._getManifestInstance = function (context) {
        var manifest = context.manifest;
        var manifestClone = lodash.cloneDeep(manifest);
        delete manifestClone.preconfiguredEntries;
        return manifestClone;
    };
    ClientSideWebPartManager.prototype._getArrayOrUndefined = function (instanceId) {
        return instanceId ? [instanceId] : undefined;
    };
    ClientSideWebPartManager.prototype._initialzeOnResizeEventHandler = function () {
        window.addEventListener('resize', lodash.debounce(this._onContainerResize, 1000));
        window.addEventListener('message', this._onPropertyPaneToggled);
    };
    ClientSideWebPartManager.prototype._onContainerResize = function () {
        ClientSideWebPartManager._webPartManagerList.forEach(function (wpm) {
            wpm._webparts.forEach(function (wp) { wp._internalOnAfterResize(); });
        });
    };
    ClientSideWebPartManager.prototype._onPropertyPaneToggled = function (event) {
        if (event && event.origin === window.location.origin && event.data === 'Property pane toggled') {
            this._onContainerResize();
        }
    };
    ClientSideWebPartManager.prototype._onWebPartConfigurationChange = function (event, data) {
        ClientSideWebPartManager._webPartManagerList.forEach(function (wpm) {
            if (wpm._host.webPartConfigurationEventCallback &&
                (ClientSideWebPartManager._propertyPaneController.currentlyConfiguredWebPartId &&
                    wpm._webparts.get(ClientSideWebPartManager._propertyPaneController.currentlyConfiguredWebPartId) ||
                    event === PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneWebPartsSwitched)) {
                wpm._host.webPartConfigurationEventCallback(event, data);
            }
        });
    };
    ClientSideWebPartManager.prototype._onAllWebpartsAdded = function (context) {
        var _this = this;
        var endTime = this._getViewportRenderedEndTime();
        if (endTime) {
            if (!this.isCountInViewportAtStartKillSwitchOn && sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.ClassicSharePoint) {
                this._registerWebpartsInViewport();
                sp_telemetry_1._TraceLogger.logVerboseData({
                    source: this._logSource,
                    message: 'All Web parts in the viewports are rendered at ' + endTime,
                    serviceScope: this._host.serviceScope
                });
            }
            if (context.onViewportWebPartsRendered) {
                context.onViewportWebPartsRendered(endTime);
            }
            if (context.totalWebparts || sp_core_library_1.Environment.type === sp_core_library_1.EnvironmentType.ClassicSharePoint) {
                ViewportLoader_1.default.instance.loadOutsideViewPort();
                if (sp_core_library_1._SPFlight.isEnabled(WEBPARTSCROLLANIMATIONS_FLIGHT)) {
                    _Animations_1.default.instance.init();
                }
            }
        }
        else {
            window.setTimeout(function () { _this._onAllWebpartsAdded(context); }, 100);
        }
    };
    ClientSideWebPartManager.prototype._getViewportRenderedEndTime = function () {
        var _this = this;
        var isAllInViewportRendered = true;
        var endTime = undefined;
        var noWebPartInInitialViewport = true;
        this._webparts.forEach(function (wpi) {
            if (_this._instanceOfBase(wpi) && ViewportLoader_1.default.isInIntialViewport(wpi)) {
                noWebPartInInitialViewport = false;
                isAllInViewportRendered = isAllInViewportRendered ? wpi._renderedOnce : isAllInViewportRendered;
                if (isAllInViewportRendered) {
                    var curEndTime = sp_telemetry_1._PerformanceLogger.getComponentEndTime(wpi.context.webPartTag);
                    if (curEndTime && (!endTime || curEndTime > endTime)) {
                        endTime = curEndTime;
                    }
                }
            }
        });
        if (noWebPartInInitialViewport) {
            return sp_telemetry_1._PerformanceLogger.now();
        }
        else {
            return isAllInViewportRendered ? endTime : undefined;
        }
    };
    ClientSideWebPartManager.prototype._registerWebpartsInViewport = function () {
        var _this = this;
        this._webparts.forEach(function (wpi) {
            if (_this._instanceOfBase(wpi)) {
                if (ViewportLoader_1.default.isInIntialViewport(wpi)) {
                    sp_telemetry_1._PageMetricsLogger.recordMetric(WebPartMetrics_1.default.webPartsCountedInViewport);
                    sp_telemetry_1._PerformanceLogger.addComponent(wpi.context.webPartTag);
                    sp_telemetry_1._TraceLogger.logVerboseData({
                        source: _this._logSource,
                        message: "Web part " + wpi.context.webPartTag + " is added into EUPL calculation.",
                        serviceScope: _this._host.serviceScope
                    });
                }
                else if (wpi._internalIsInViewport) {
                    sp_telemetry_1._PageMetricsLogger.recordMetric(WebPartMetrics_1.default.webPartsLoadedNotInViewport);
                }
            }
        });
    };
    ClientSideWebPartManager.prototype._instantiateWebPart = function (moduleLibrary, webPartTag) {
        var wp = moduleLibrary; 
        if (wp && wp.default) {
            wp = wp.default;
        }
        if (!wp) {
            throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.ModuleNotLoaded, webPartTag, this._getLoadedModuleList(moduleLibrary));
        }
        if (typeof (wp) !== 'function' && wp.default) {
            wp = wp.default;
        }
        if (typeof (wp) !== 'function') {
            throw SPWebPartError_1.SPWebPartError.createWithLogProperties(SPWebPartError_1.SPWebPartErrorCode.IncorrectBoostrapModule, { actualType: typeof (wp), wp: wp }, webPartTag);
        }
        var typedWebPartClass = wp;
        var wpi = new typedWebPartClass();
        if (!wpi._internalInitialize) {
            throw SPWebPartError_1.SPWebPartError.createWithLogProperties(SPWebPartError_1.SPWebPartErrorCode.MissingExpectedWebPartMemberError, { actualType: typeof (wp), wp: wp }, webPartTag, '_internalInitialize');
        }
        return wpi;
    };
    ClientSideWebPartManager.prototype._handleErrorLoadingWebpart = function (manifest,  instanceId, domElement, ex, qosMonitor) {
        var _this = this;
        var wpi = this._webparts.get(instanceId);
        if (wpi) {
            ExecuteWithoutFailing_1.executeWithoutFailing(function () { _this._statusRenderer.clearLoadingIndicator(domElement); }, this._logSource);
            ExecuteWithoutFailing_1.executeWithoutFailing(function () { wpi._internalDispose(); }, this._logSource);
            ExecuteWithoutFailing_1.executeWithoutFailing(function () { _this._webparts.delete(instanceId); }, this._logSource);
        }
        ExecuteWithoutFailing_1.executeWithoutFailing(function () {
            var extraData = _this._createUnexpectedFailureExtraData(manifest.alias, instanceId, manifest.isInternal, manifest.id);
            qosMonitor.writeUnexpectedFailure('UnhandledLoadError', ex, extraData);
        }, this._logSource);
        this.renderError(domElement, ex);
    };
    ClientSideWebPartManager.prototype._handleModulePromiseRejection = function (manifest,  instanceId, domElement, webPartTag, error, qosMonitor) {
        var _this = this;
        ExecuteWithoutFailing_1.executeWithoutFailing(function () {
            var extraData = _this._createUnexpectedFailureExtraData(manifest.alias, instanceId, manifest.isInternal, manifest.id);
            qosMonitor.writeUnexpectedFailure('ScriptLoad', error, extraData);
        }, this._logSource);
        this.renderError(domElement, error);
    };
    ClientSideWebPartManager.prototype._onFirstTimeWebpartRender = function (manifest,  webPartTag, qosMonitor) {
        var extraData = this._createSuccessExtraData(manifest.alias, manifest.isInternal, manifest.id);
        qosMonitor.writeSuccess(extraData);
        ClassicPageUtils_1.default.removeFabricLinks();
        sp_telemetry_1._TraceLogger.logVerboseData({
            source: this._logSource,
            message: sp_core_library_1.Text.format(Strings_resx_1.default.ModulesLoadedForWebPart, webPartTag),
            serviceScope: this._host.serviceScope
        });
    };
    Object.defineProperty(ClientSideWebPartManager.prototype, "isCountInViewportAtStartKillSwitchOn", {
        get: function () {
            if (this._killSwitchCountInViewportAtStart === undefined) {
                this._killSwitchCountInViewportAtStart =
                    sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.tryParse('5b7e10fc-9e1f-46ae-b9f7-a4925c48b72a'), '6/20/2017', 'Add Web part in EUPL calculation at start');
            }
            return this._killSwitchCountInViewportAtStart;
        },
        enumerable: true,
        configurable: true
    });
    ClientSideWebPartManager._webPartManagerList = [];
    return ClientSideWebPartManager;
}());
exports.default = ClientSideWebPartManager;


/***/ }),
/* 14 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function() {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		var result = [];
		for(var i = 0; i < this.length; i++) {
			var item = this[i];
			if(item[2]) {
				result.push("@media " + item[2] + "{" + item[1] + "}");
			} else {
				result.push(item[1]);
			}
		}
		return result.join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(2);
var sp_core_library_1 = __webpack_require__(0);
var Strings_resx_1 = __webpack_require__(6);
var SPWebPartErrorCode;
(function (SPWebPartErrorCode) {
    SPWebPartErrorCode[SPWebPartErrorCode["ModuleUndefined"] = 0] = "ModuleUndefined";
    SPWebPartErrorCode[SPWebPartErrorCode["ModuleNotLoaded"] = 1] = "ModuleNotLoaded";
    SPWebPartErrorCode[SPWebPartErrorCode["IncorrectBoostrapModule"] = 2] = "IncorrectBoostrapModule";
    SPWebPartErrorCode[SPWebPartErrorCode["MissingExpectedWebPartMemberError"] = 3] = "MissingExpectedWebPartMemberError";
    SPWebPartErrorCode[SPWebPartErrorCode["NonBaseWebPart"] = 4] = "NonBaseWebPart";
    SPWebPartErrorCode[SPWebPartErrorCode["ScriptLoadError"] = 5] = "ScriptLoadError";
    SPWebPartErrorCode[SPWebPartErrorCode["LoaderNotFound"] = 6] = "LoaderNotFound";
    SPWebPartErrorCode[SPWebPartErrorCode["ManifestNull"] = 7] = "ManifestNull";
    SPWebPartErrorCode[SPWebPartErrorCode["ManifestInvalid"] = 8] = "ManifestInvalid";
    SPWebPartErrorCode[SPWebPartErrorCode["BaseConstructError"] = 9] = "BaseConstructError";
    SPWebPartErrorCode[SPWebPartErrorCode["MustOverrideRender"] = 10] = "MustOverrideRender";
    SPWebPartErrorCode[SPWebPartErrorCode["NotInitializedError"] = 11] = "NotInitializedError";
    SPWebPartErrorCode[SPWebPartErrorCode["PropertyBagNull"] = 12] = "PropertyBagNull";
    SPWebPartErrorCode[SPWebPartErrorCode["OnAfterDeserializeReturnedNull"] = 13] = "OnAfterDeserializeReturnedNull";
    SPWebPartErrorCode[SPWebPartErrorCode["OnInitReturnedNullPromise"] = 14] = "OnInitReturnedNullPromise";
    SPWebPartErrorCode[SPWebPartErrorCode["ReadOnlyProperty"] = 15] = "ReadOnlyProperty";
    SPWebPartErrorCode[SPWebPartErrorCode["SerializationFailed"] = 16] = "SerializationFailed";
    SPWebPartErrorCode[SPWebPartErrorCode["FirstTimeRenderCalledMoreThanOnce"] = 17] = "FirstTimeRenderCalledMoreThanOnce";
    SPWebPartErrorCode[SPWebPartErrorCode["RenderCompletedCallNotCalled"] = 18] = "RenderCompletedCallNotCalled";
    SPWebPartErrorCode[SPWebPartErrorCode["InvalidSPLinkAttributeFormat"] = 19] = "InvalidSPLinkAttributeFormat";
    SPWebPartErrorCode[SPWebPartErrorCode["InvalidSPLinkIndex"] = 20] = "InvalidSPLinkIndex";
    SPWebPartErrorCode[SPWebPartErrorCode["GetDataReturnedNullPromise"] = 21] = "GetDataReturnedNullPromise";
})(SPWebPartErrorCode = exports.SPWebPartErrorCode || (exports.SPWebPartErrorCode = {}));
var SPWebPartError = (function (_super) {
    __extends(SPWebPartError, _super);
    function SPWebPartError(errorCode, logProperties) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        var _this = _super.call(this, SPWebPartErrorCode[errorCode], sp_core_library_1.Text.format(SPWebPartError_1._errorCodeToMessageMap.get(errorCode), params), logProperties) || this;
        _this.__proto__ = SPWebPartError_1.prototype; 
        _this._id = errorCode;
        return _this;
    }
    SPWebPartError_1 = SPWebPartError;
    Object.defineProperty(SPWebPartError.prototype, "id", {
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPWebPartError.prototype, "category", {
        get: function () {
            return 'SPWebPartErrorCode';
        },
        enumerable: true,
        configurable: true
    });
    SPWebPartError.create = function (errorCode) {
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        return new SPWebPartError_1(errorCode, undefined, params);
    };
    SPWebPartError.createWithLogProperties = function (errorCode, logProperties) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        return new SPWebPartError_1(errorCode, logProperties, params);
    };
    SPWebPartError._errorCodeToMessageMap = new Map([
        [SPWebPartErrorCode.ModuleUndefined, Strings_resx_1.default.UndefinedModuleError],
        [SPWebPartErrorCode.ModuleNotLoaded, Strings_resx_1.default.ModuleNotLoadedError],
        [SPWebPartErrorCode.IncorrectBoostrapModule, Strings_resx_1.default.IncorrectBoostrapModuleError],
        [SPWebPartErrorCode.MissingExpectedWebPartMemberError, Strings_resx_1.default.MissingExpectedWebPartMemberError],
        [SPWebPartErrorCode.NonBaseWebPart, Strings_resx_1.default.NonBaseWebPartError],
        [SPWebPartErrorCode.ScriptLoadError, Strings_resx_1.default.ScriptLoadErrorTemplate],
        [SPWebPartErrorCode.ManifestNull, Strings_resx_1.default.ManifestNullError],
        [SPWebPartErrorCode.ManifestInvalid, Strings_resx_1.default.ManifestInvalidError],
        [SPWebPartErrorCode.BaseConstructError, Strings_resx_1.default.BaseConstructError],
        [SPWebPartErrorCode.MustOverrideRender, Strings_resx_1.default.MustOverrideRenderError],
        [SPWebPartErrorCode.NotInitializedError, Strings_resx_1.default.NotIntializedError],
        [SPWebPartErrorCode.PropertyBagNull, Strings_resx_1.default.PropertyBagNullError],
        [SPWebPartErrorCode.OnAfterDeserializeReturnedNull, Strings_resx_1.default.OnAfterDeserializeReturnedNull],
        [SPWebPartErrorCode.OnInitReturnedNullPromise, Strings_resx_1.default.OnInitReturnedNullPromise],
        [SPWebPartErrorCode.ReadOnlyProperty, Strings_resx_1.default.ReadOnlyPropertyError],
        [SPWebPartErrorCode.SerializationFailed, Strings_resx_1.default.SerializationFailedError],
        [SPWebPartErrorCode.FirstTimeRenderCalledMoreThanOnce, Strings_resx_1.default.FirstTimeRenderCalledMoreThanOnceError],
        [SPWebPartErrorCode.RenderCompletedCallNotCalled, Strings_resx_1.default.RenderCompletedCallNotCalledError],
        [SPWebPartErrorCode.InvalidSPLinkAttributeFormat, Strings_resx_1.default.InvalidSPLinkAttributeFormatError],
        [SPWebPartErrorCode.InvalidSPLinkIndex, Strings_resx_1.default.InvalidSPLinkIndexError]
    ] );
    SPWebPartError = SPWebPartError_1 = __decorate([
        decorators_1.sealed
    ], SPWebPartError);
    return SPWebPartError;
    var SPWebPartError_1;
}(sp_core_library_1.SPError));
exports.SPWebPartError = SPWebPartError;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(49);
var styles = {
    errorBox: 'errorBox_897404e1',
    errorBoxText: 'errorBoxText_897404e1',
    detailsButton: 'detailsButton_897404e1',
    somethingWentWrongText: 'somethingWentWrongText_897404e1',
    siteAdminText: 'siteAdminText_897404e1',
    screenReaderOnly: 'screenReaderOnly_897404e1',
};
exports.default = styles;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _Animations = (function () {
    function _Animations() {
        this._pendingElements = [];
    }
    Object.defineProperty(_Animations, "instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new _Animations();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    _Animations.prototype.init = function () {
        var _this = this;
        this._ensureScrollRevealLoaded().then(function () {
            _this._pendingElements.forEach(function (elem) {
                _this._scrollReveal.reveal(elem);
            });
        });
    };
    _Animations.prototype.reveal = function (elem) {
        if (!!this._scrollReveal) {
            this._scrollReveal.reveal(elem);
        }
        else {
            this._pendingElements.push(elem);
        }
    };
    _Animations.prototype._ensureScrollRevealLoaded = function () {
        var _this = this;
        return new Promise(function (resolve) {
            if (!_this._scrollReveal) {
                __webpack_require__.e/* require.ensure */(2).then((function (require) {
                    var sr = __webpack_require__(71);
                    _this._scrollReveal =
                        sr({
                            scale: 1,
                            origin: 'bottom',
                            duration: 750,
                            distance: '20px',
                            easing: 'cubic-bezier(0.33, 0.0, 0.0, 1)',
                            container: 'div[class*="scrollRegion_"]'
                        });
                    resolve(_this._scrollReveal);
                }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
            }
            else {
                resolve(_this._scrollReveal);
            }
        });
    };
    return _Animations;
}());
exports.default = _Animations;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(2);
var React = __webpack_require__(3);
var office_ui_fabric_react_1 = __webpack_require__(9);
__webpack_require__(55);
var PlaceholderSpinner = (function (_super) {
    __extends(PlaceholderSpinner, _super);
    function PlaceholderSpinner(props) {
        var _this = _super.call(this, props) || this;
        _this.showSpinner = _this.showSpinner.bind(_this);
        _this.state = { showSpinner: !props.hideSpinner };
        return _this;
    }
    PlaceholderSpinner.prototype.componentDidMount = function () {
        this._isMounted = true;
    };
    PlaceholderSpinner.prototype.render = function () {
        if (this.state.removePlaceholder) {
            return null; 
        }
        return (React.createElement(office_ui_fabric_react_1.Overlay, { className: 'Placeholder-overlay' },
            React.createElement("div", { className: 'Placeholder-spinnerContainer' }, this.state.showSpinner && React.createElement(office_ui_fabric_react_1.Spinner, { type: office_ui_fabric_react_1.SpinnerType.large, label: this.props.label }))));
    };
    PlaceholderSpinner.prototype.componentWillUnmount = function () {
        this._isMounted = false;
    };
    PlaceholderSpinner.prototype.showSpinner = function (showSpinner) {
        if (this._isMounted) {
            this.setState({ showSpinner: showSpinner });
        }
    };
    PlaceholderSpinner.prototype.clearPlaceholder = function () {
        if (this._isMounted) {
            this.setState({ removePlaceholder: true });
        }
    };
    PlaceholderSpinner = __decorate([
        decorators_1.sealed
    ], PlaceholderSpinner);
    return PlaceholderSpinner;
}(React.Component));
exports.default = PlaceholderSpinner;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(2);
var sp_http_1 = __webpack_require__(28);
var sp_telemetry_1 = __webpack_require__(4);
var sp_component_base_1 = __webpack_require__(27);
var sp_core_library_1 = __webpack_require__(0);
var PropertyPaneDefinitions_1 = __webpack_require__(5);
var PropertyPaneAccessor_1 = __webpack_require__(60);
var WebPartContext = (function (_super) {
    __extends(WebPartContext, _super);
    function WebPartContext(parameters) {
        var _this = _super.call(this, parameters) || this;
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters, 'webpart context');
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters.domElement, "webpart context domElement");
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters.instanceId, 'webpart context instanceId');
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters.webPartTag, 'webpart context webPartTag');
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters.eventAggregator, 'webpart context eventAggregator');
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters.statusRenderer, 'webpart context statusRenderer');
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters.host, 'webpart context host');
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters.isPropertyPaneRenderedByWebPart, 'webpart context isPropertyPaneRenderedByWebPart');
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters.isPropertyPaneOpen, 'webpart context isPropertyPaneOpen');
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters.setPropertyPaneState, 'webpart context setPropertyPaneState');
        _this._webPartTag = parameters.webPartTag;
        _this._domElement = parameters.domElement;
        _this._host = parameters.host;
        _this._statusRenderer = parameters.statusRenderer;
        _this._eventAggregator = parameters.eventAggregator;
        _this._setPropertyPaneState = parameters.setPropertyPaneState;
        _this._isPropertyPaneRenderedByWebPart = parameters.isPropertyPaneRenderedByWebPart;
        _this._isPropertyPaneOpen = parameters.isPropertyPaneOpen;
        _this._propertyPaneAccessor = new PropertyPaneAccessor_1.default(function () { _this._setPropertyPaneState(_this.instanceId, PropertyPaneDefinitions_1.PropertyPaneState.Open, true); }, function () { _this._setPropertyPaneState(_this.instanceId, PropertyPaneDefinitions_1.PropertyPaneState.Refresh); }, function () { return _this._isPropertyPaneRenderedByWebPart(); }, function () { return _this._isPropertyPaneOpen(); });
        if (true) {
            _this._graphHttpClient = _this.serviceScope.createDefaultAndProvide(sp_http_1.GraphHttpClient.serviceKey);
        }
        _this._httpClient = _this.serviceScope.createDefaultAndProvide(sp_http_1.HttpClient.serviceKey);
        _this._spHttpClient = _this.serviceScope.createDefaultAndProvide(sp_http_1.SPHttpClient.serviceKey);
        return _this;
    }
    Object.defineProperty(WebPartContext.prototype, "webPartTag", {
        get: function () { return this._webPartTag; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "domElement", {
        get: function () { return this._domElement; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "httpClient", {
        get: function () { return this._httpClient; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "spHttpClient", {
        get: function () { return this._spHttpClient; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "graphHttpClient", {
        get: function () {
            if (false) {
                sp_telemetry_1._TraceLogger.logVerbose(this._logSource, 'GraphHttpClient is not supported for OnPrem.');
            }
            return this._graphHttpClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "statusRenderer", {
        get: function () { return this._statusRenderer; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "eventAggregator", {
        get: function () {
            if (false) {
                sp_telemetry_1._TraceLogger.logVerbose(this._logSource, 'EventAggregator is not supported for OnPrem.');
            }
            return this._eventAggregator;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "propertyPane", {
        get: function () { return this._propertyPaneAccessor; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "host", {
        get: function () { return this._host; },
        enumerable: true,
        configurable: true
    });
    WebPartContext = __decorate([
        decorators_1.sealed
    ], WebPartContext);
    return WebPartContext;
}(sp_component_base_1.BaseComponentContext));
exports.default = WebPartContext;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(2);
var sp_core_library_1 = __webpack_require__(0);
var ReservedEventNames_1 = __webpack_require__(21);
var EventAggregator = (function () {
    function EventAggregator() {
        this._events = new Map();
        this._sources = new Map();
    }
    EventAggregator.prototype.subscribeByEventName = function (eventName, subscriberId, callback) {
        sp_core_library_1.Validate.isNotNullOrUndefined(eventName, 'eventName');
        this._validateEvent(eventName);
        this._setSubscription(eventName, subscriberId, callback, this._events);
    };
    EventAggregator.prototype.subscribeBySourceId = function (sourceId, subscriberId, callback) {
        sp_core_library_1.Validate.isNotNullOrUndefined(sourceId, 'sourceId');
        this._setSubscription(sourceId, subscriberId, callback, this._sources);
    };
    EventAggregator.prototype.raiseEvent = function (eventName, eventObject) {
        sp_core_library_1.Validate.isNotNullOrUndefined(eventName, 'eventName');
        sp_core_library_1.Validate.isNotNullOrUndefined(eventObject, 'eventObject');
        sp_core_library_1.Validate.isNotNullOrUndefined(eventObject.sourceId, 'eventObject.sourceId');
        var targets = {};
        this._validateEvent(eventName);
        this._processEvent(eventName, eventObject, targets, this._events.get(eventName));
        this._processEvent(eventName, eventObject, targets, this._sources.get(eventObject.sourceId));
    };
    EventAggregator.prototype._validateEvent = function (eventName) {
        var e = eventName.split(ReservedEventNames_1.default.delimitor);
        if (e.length !== 2) {
            throw new Error('Event ' + eventName + ' not in eventName:action format');
        }
    };
    EventAggregator.prototype._processEvent = function (eventName, eventObject, targets, map) {
        if (map) {
            map.forEach(function (callback, targetId) {
                if (!targets[targetId]) {
                    targets[targetId] = true;
                    callback(eventName, eventObject);
                }
            });
        }
    };
    EventAggregator.prototype._setSubscription = function (id, subscriberId, callback, eventBucket) {
        sp_core_library_1.Validate.isNotNullOrUndefined(subscriberId, 'subscriberId');
        sp_core_library_1.Validate.isNotNullOrUndefined(callback, 'callback');
        if (!eventBucket.get(id)) {
            eventBucket.set(id, new Map());
        }
        var map = eventBucket.get(id);
        map.set(subscriberId, callback);
    };
    EventAggregator = __decorate([
        decorators_1.sealed
    ], EventAggregator);
    return EventAggregator;
}());
exports.default = EventAggregator;


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ReservedEventNames = (function () {
    function ReservedEventNames() {
    }
    ReservedEventNames.delimitor = ':';
    ReservedEventNames.configure = 'configure';
    ReservedEventNames.start = 'start';
    ReservedEventNames.end = 'end';
    ReservedEventNames.configureStart = ReservedEventNames.configure
        + ReservedEventNames.delimitor + ReservedEventNames.start;
    ReservedEventNames.configureEnd = ReservedEventNames.configure
        + ReservedEventNames.delimitor + ReservedEventNames.end;
    ReservedEventNames.classicToolpane = 'ClassicToolpane';
    ReservedEventNames.classicToolpaneId = '121ff297-293c-4d66-a24b-916156760cab';
    return ReservedEventNames;
}());
exports.default = ReservedEventNames;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings = ( false)
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(23);
exports.default = strings['_ZRJdhh/Ht8a/UwYAwPqP9Q'];


/***/ }),
/* 23 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_23__;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var cswp_base_module_scss_1 = __webpack_require__(16);
var React = __webpack_require__(3);
var ErrorMessage = (function (_super) {
    __extends(ErrorMessage, _super);
    function ErrorMessage(props) {
        return _super.call(this, props) || this;
    }
    ErrorMessage.prototype.render = function () {
        return (React.createElement("div", { className: cswp_base_module_scss_1.default.errorBox, role: 'alert', "aria-live": 'assertive' },
            React.createElement("span", { className: cswp_base_module_scss_1.default.errorBoxText }, this.props.errorMessage)));
    };
    return ErrorMessage;
}(React.Component));
exports.default = ErrorMessage;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(4);
var sp_core_library_1 = __webpack_require__(0);
var lodash = __webpack_require__(7);
var Strings_resx_1 = __webpack_require__(6);
var WebPartMetrics_1 = __webpack_require__(26);
var WebPartLoadSource;
(function (WebPartLoadSource) {
    WebPartLoadSource[WebPartLoadSource["viewport"] = 1] = "viewport";
    WebPartLoadSource[WebPartLoadSource["scroll"] = 2] = "scroll";
    WebPartLoadSource[WebPartLoadSource["loadOutsideViewport"] = 3] = "loadOutsideViewport";
})(WebPartLoadSource || (WebPartLoadSource = {}));
var ViewportLoader = (function () {
    function ViewportLoader() {
        this._webparts = new Set();
        this._lazyLoadedTrackerAttribute = 'data-sp-webpart-lazycount';
        this.SCROLL = 'scroll';
        this.RESIZE = 'resize';
        this._isInitialized = false;
        this._logSource = sp_telemetry_1._LogSource.create('ViewportLoader');
        this._isListeningWindow = false;
        this._offsetWebpartsToLoad = [];
        this._bind();
    }
    Object.defineProperty(ViewportLoader, "instance", {
        get: function () {
            if (ViewportLoader._instance === undefined) {
                ViewportLoader._instance = new ViewportLoader();
            }
            return ViewportLoader._instance;
        },
        enumerable: true,
        configurable: true
    });
    ViewportLoader.isInIntialViewport = function (webpart) {
        sp_core_library_1.Validate.isNotNullOrUndefined(webpart, 'webpart');
        var viewportHeight = window.innerHeight || document.documentElement.clientHeight;
        var top = webpart.domElement && webpart.domElement.getBoundingClientRect().top;
        var euplViewportOffset = Math.floor(viewportHeight * 0.1);
        if ((window.pageYOffset + top) < (viewportHeight - euplViewportOffset)) {
            return true;
        }
        return false;
    };
    ViewportLoader.prototype.register = function (webpart) {
        var _this = this;
        sp_core_library_1.Validate.isNotNullOrUndefined(webpart, 'webpart');
        webpart._internalIsInViewport = false;
        if (!this._isInitialized) {
            this._initialize();
        }
        this._checkVisibilityAndRender(webpart, WebPartLoadSource.viewport);
        if (webpart._internalIsInViewport) {
            return;
        }
        var parents = this._findScrollableParents(webpart.domElement);
        parents.forEach(function (parent, index, allPatents) {
            var count = _this._updateRegisteredChildren(parent, 1);
            if (count === 1) {
                _this._listenEvents(parent);
            }
        });
        this._listenEvents(window);
        this._webparts.add(webpart);
        if (!!this._noMoreLazy) {
            sp_telemetry_1._TraceLogger.logVerbose(this._logSource, 'Web part to load after no more lazy state');
            this._noMoreLazy = false;
            this._loadOutsideViewPort();
        }
    };
    ViewportLoader.prototype.unregister = function (webpart) {
        var _this = this;
        sp_core_library_1.Validate.isNotNullOrUndefined(webpart, 'unregister Web part');
        if (!this._webparts.has(webpart)) {
            return;
        }
        this._webparts.delete(webpart);
        var parents = this._findScrollableParents(webpart.domElement);
        parents.forEach(function (parent, index, allParents) {
            var count = _this._updateRegisteredChildren(parent, -1);
            if (count <= 0) {
                _this._unlistenEvents(parent);
            }
        });
        if (this._webparts.size === 0 && !!this._noMoreLazy) {
            this._unlistenEvents(window);
            this._dispose();
        }
    };
    ViewportLoader.prototype.loadOutsideViewPort = function () {
        sp_telemetry_1._TraceLogger.logVerbose(this._logSource, "loadOutsideViewPort is called to load rest of the " + this._webparts.size + " web parts");
        this._loadOutsideViewPort();
        sp_telemetry_1._TraceLogger.logVerbose(this._logSource, "loadOutsideViewPort is completed");
    };
    ViewportLoader.prototype._bind = function () {
        this.register = this.register.bind(this);
        this.unregister = this.unregister.bind(this);
        this._checkVisibilityAndRender = this._checkVisibilityAndRender.bind(this);
        this._dispose = this._dispose.bind(this);
        this._findScrollableParent = this._findScrollableParent.bind(this);
        this._findScrollableParents = this._findScrollableParents.bind(this);
        this._initialize = this._initialize.bind(this);
        this._isCloseToViewport = this._isCloseToViewport.bind(this);
        this._renderWebpartInViewport = this._renderWebpartInViewport.bind(this);
        this._unlistenEvents = this._unlistenEvents.bind(this);
        this._updateRegisteredChildren = this._updateRegisteredChildren.bind(this);
        this._loadOutsideViewPort = this._loadOutsideViewPort.bind(this);
    };
    ViewportLoader.prototype._lazyLoaderEventHandler = function () {
        this._loadWebPartsInViewport(WebPartLoadSource.scroll);
    };
    ViewportLoader.prototype._loadWebPartsInViewport = function (loadSource) {
        var _this = this;
        if (!this._webparts || this._webparts.size === 0) {
            sp_telemetry_1._TraceLogger.logVerbose(this._logSource, Strings_resx_1.default.LazyEventOnNoLazyWebpart, 'InViewportHandler');
            return;
        }
        this._webparts.forEach(function (value, index, theSet) {
            _this._checkVisibilityAndRender(value, loadSource);
        });
    };
    ViewportLoader.prototype._checkVisibilityAndRender = function (webPart, loadSource) {
        if (webPart._internalIsInViewport) {
            this.unregister(webPart);
            return;
        }
        if (this._isCloseToViewport(webPart.domElement)) {
            this._renderWebpartInViewport(webPart, loadSource);
            this.unregister(webPart);
        }
    };
    ViewportLoader.prototype._isCloseToViewport = function (webpartNode) {
        try {
            var parent_1 = this._findScrollableParent(webpartNode);
            var _a = webpartNode.getBoundingClientRect(), top_1 = _a.top, height = _a.height;
            var documentHeight = window.innerHeight || document.documentElement.clientHeight;
            if (!parent_1) {
                var topInOrAboveViewport = (top_1 - this._offset) <= documentHeight;
                var bottomNotAboveViewport = (top_1 + height + this._offset) >= 0;
                return topInOrAboveViewport && bottomNotAboveViewport;
            }
            var _b = parent_1.getBoundingClientRect(), parentTop = _b.top, parentHeight = _b.height;
            var parentIntersectionTop = Math.max(0, parentTop);
            var parentIntersectionHeight = Math.min(parentTop + parentHeight, documentHeight) - parentIntersectionTop;
            var offsetTop = top_1 - parentIntersectionTop;
            var parentTopInOrAboveViewport = (offsetTop - this._offset) <= parentIntersectionHeight;
            var parentBottomNotAboveViewport = (offsetTop + height + this._offset) >= 0;
            return parentTopInOrAboveViewport && parentBottomNotAboveViewport;
        }
        catch (error) {
            sp_telemetry_1._TraceLogger.logError(this._logSource, error);
            return true;
        }
    };
    ViewportLoader.prototype._findScrollableParents = function (startingElement) {
        var parents = [];
        var parent = startingElement;
        while (parent) {
            parent = this._findScrollableParent(parent);
            if (parent) {
                parents.push(parent);
                parent = parent.parentElement;
            }
        }
        return parents;
    };
    ViewportLoader.prototype._findScrollableParent = function (startingElement) {
        var DATA_IS_SCROLLABLE_ATTRIBUTE = 'data-is-scrollable';
        var el = startingElement;
        while (el && el !== document.body) {
            if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) === 'true') {
                return el;
            }
            el = el.parentElement;
        }
        el = startingElement;
        while (el && el !== document.body) {
            if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) !== 'false') {
                var styles = getComputedStyle(el);
                if (styles) {
                    var overflowY = styles.getPropertyValue('overflow-y');
                    if (overflowY && (overflowY === this.SCROLL || overflowY === 'auto')) {
                        return el;
                    }
                }
            }
            el = el.parentElement;
        }
        if (!el || el === document.body) {
            el = undefined;
        }
        return el;
    };
    ViewportLoader.prototype._initialize = function () {
        this._offset = 0;
        this._initTime = new Date();
        this._lazyHandler = lodash.throttle(this._lazyLoaderEventHandler, 100).bind(this);
        sp_telemetry_1._TraceLogger.logVerbose(this._logSource, 'ViewportLoader is Initialized');
        this._isInitialized = true;
    };
    ViewportLoader.prototype._dispose = function () {
        sp_telemetry_1._TraceLogger.logVerbose(this._logSource, 'ViewportLoader is disposed');
        var timeSpent = (new Date()).getTime() - this._initTime.getTime();
        sp_telemetry_1._EngagementLogger.logEvent('Webpart.ViewportLoad.Completed', timeSpent.toString());
        this._isInitialized = false;
        this._initTime = undefined;
    };
    ViewportLoader.prototype._listenEvents = function (parent) {
        if (!parent) {
            return;
        }
        var isWindow = parent === window;
        if (!isWindow || (isWindow && !this._isListeningWindow)) {
            this._addEventListerer(parent);
            if (isWindow) {
                this._isListeningWindow = true;
            }
        }
    };
    ViewportLoader.prototype._addEventListerer = function (element) {
        element.addEventListener(this.SCROLL, this._lazyHandler, false);
        element.addEventListener(this.RESIZE, this._lazyHandler, false);
    };
    ViewportLoader.prototype._unlistenEvents = function (parent) {
        if (!parent) {
            return;
        }
        var isWindow = parent === window;
        if (!isWindow || (isWindow && this._isListeningWindow)) {
            this._removeEventListener(parent);
            if (isWindow) {
                this._isListeningWindow = false;
            }
        }
    };
    ViewportLoader.prototype._removeEventListener = function (element) {
        element.removeEventListener(this.SCROLL, this._lazyHandler);
        element.removeEventListener(this.RESIZE, this._lazyHandler);
    };
    ViewportLoader.prototype._updateRegisteredChildren = function (element, count) {
        var lazyChilds = count + Number(element.getAttribute(this._lazyLoadedTrackerAttribute));
        if (count !== 0) {
            element.setAttribute(this._lazyLoadedTrackerAttribute, lazyChilds.toString());
        }
        return lazyChilds;
    };
    ViewportLoader.prototype._renderWebpartInViewport = function (webpart, loadSource) {
        if (webpart && !webpart._internalIsInViewport) {
            webpart._internalRenderInViewPort();
            switch (loadSource) {
                case WebPartLoadSource.viewport:
                    webpart._internalIsInViewport = true;
                    sp_telemetry_1._PageMetricsLogger.recordMetric(WebPartMetrics_1.default.webPartsLoadedForViewport);
                    sp_telemetry_1._TraceLogger.logVerbose(this._logSource, 'Web part is loaded in initial viewport.');
                    break;
                case WebPartLoadSource.scroll:
                    sp_telemetry_1._PageMetricsLogger.recordMetric(WebPartMetrics_1.default.webPartsLoadedByScroll);
                    break;
                case WebPartLoadSource.loadOutsideViewport:
                    sp_telemetry_1._PageMetricsLogger.recordMetric(WebPartMetrics_1.default.webPartsLoadedBeforeScroll);
                    break;
            }
        }
    };
    ViewportLoader.prototype._loadOutsideViewPort = function () {
        var _this = this;
        if (!this._webparts || this._webparts.size === 0) {
            this._noMoreLazy = true;
            return;
        }
        for (var index = 0; this._offsetWebpartsToLoad && index < this._offsetWebpartsToLoad.length; index++) {
            if (!this._offsetWebpartsToLoad[index]._renderedOnce) {
                window.setTimeout(this._loadOutsideViewPort, 100);
                return;
            }
        }
        this._offsetWebpartsToLoad = [];
        var documentHeight = window.innerHeight || document.documentElement.clientHeight;
        this._offset = this._offset + documentHeight * 2;
        this._webparts.forEach(function (webpart, index, theSet) {
            if (_this._isCloseToViewport(webpart.domElement)) {
                _this._offsetWebpartsToLoad.push(webpart);
            }
        });
        this._loadWebPartsInViewport(WebPartLoadSource.loadOutsideViewport);
        if (this._webparts.size > 0) {
            this._loadOutsideViewPort();
        }
        else {
            this._noMoreLazy = true;
        }
    };
    return ViewportLoader;
}());
exports.default = ViewportLoader;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var WebPartMetrics = (function () {
    function WebPartMetrics() {
    }
    WebPartMetrics.webParts = 'WebParts';
    WebPartMetrics.webPartsCountedInViewport = 'WebPartsCountedInViewport';
    WebPartMetrics.webPartsLoadedNotInViewport = 'WebPartsLoadedNotInViewport';
    WebPartMetrics.webPartsLoadedForViewport = 'WebPartsLoadedForViewport';
    WebPartMetrics.webPartsLoadedByScroll = 'WebPartsLoadedByScroll';
    WebPartMetrics.webPartsLoadedBeforeScroll = 'WebPartsLoadedBeforeScroll';
    return WebPartMetrics;
}());
exports.default = WebPartMetrics;


/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_27__;

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_28__;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(2);
var React = __webpack_require__(3);
var office_ui_fabric_react_1 = __webpack_require__(9);
var WebPartForm = (function (_super) {
    __extends(WebPartForm, _super);
    function WebPartForm(props) {
        var _this = _super.call(this, props) || this;
        _this._handleKeyDown = _this._handleKeyDown.bind(_this);
        _this._handleClick = _this._handleClick.bind(_this);
        return _this;
    }
    WebPartForm.prototype.render = function () {
        var _this = this;
        var nativeProps = office_ui_fabric_react_1.getNativeProps(this.props, office_ui_fabric_react_1.divProperties);
        return (this.props.isClassicSharePointPage
            ? (React.createElement("div", __assign({ ref: function (ref) { return _this._webpartDiv = ref; }, role: 'form' }, nativeProps, { onKeyDown: this._handleKeyDown, onClick: this._handleClick }), this.props.children))
            : (React.createElement("form", __assign({}, nativeProps), this.props.children)));
    };
    WebPartForm.prototype._handleKeyDown = function (evt) {
        if (this.props.onKeyDown) {
            this.props.onKeyDown(evt);
        }
        if (evt.keyCode === 13  && this.props.onSubmit) {
            this.props.onSubmit(evt);
        }
    };
    WebPartForm.prototype._handleClick = function (event) {
        if (this.props.onSubmit && document.activeElement === this._submitElement) {
            this.props.onSubmit(event);
        }
    };
    Object.defineProperty(WebPartForm.prototype, "_submitElement", {
        get: function () {
            return this._webpartDiv.querySelector('input[type="submit"], button:not([type="reset"]):not([type="button"]):not([type="menu"])');
        },
        enumerable: true,
        configurable: true
    });
    WebPartForm = __decorate([
        decorators_1.sealed
    ], WebPartForm);
    return WebPartForm;
}(React.Component));
exports.default = WebPartForm;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(2);
var sp_core_library_1 = __webpack_require__(0);
var ClientSideWebPartMaintenanceModeManager_1 = __webpack_require__(56);
var ClientSideWebPartManager_1 = __webpack_require__(13);
var ClientSideWebPartManagerFactory = (function () {
    function ClientSideWebPartManagerFactory() {
    }
    ClientSideWebPartManagerFactory.create = function (host) {
        var urlParams = new sp_core_library_1.UrlQueryParameterCollection(window.location.href);
        var isMaintenanceMode = urlParams.getValue('maintenanceMode') === 'true';
        if (isMaintenanceMode) {
            return new ClientSideWebPartMaintenanceModeManager_1.default(host);
        }
        else {
            return new ClientSideWebPartManager_1.default(host);
        }
    };
    ClientSideWebPartManagerFactory = __decorate([
        decorators_1.sealed
    ], ClientSideWebPartManagerFactory);
    return ClientSideWebPartManagerFactory;
}());
exports.default = ClientSideWebPartManagerFactory;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(2);
var lodash = __webpack_require__(7);
var sp_core_library_1 = __webpack_require__(0);
var ISerializedServerProcessedData_1 = __webpack_require__(59);
var SPWebPartError_1 = __webpack_require__(15);
var WebPartDataConverter = (function () {
    function WebPartDataConverter() {
    }
    WebPartDataConverter_1 = WebPartDataConverter;
    Object.defineProperty(WebPartDataConverter, "_parsingDocument", {
        get: function () {
            if (!this._tempDoc) {
                this._tempDoc = document.implementation.createHTMLDocument('tempDocument');
            }
            return this._tempDoc;
        },
        enumerable: true,
        configurable: true
    });
    WebPartDataConverter.isWebPartHtml = function (htmlString) {
        sp_core_library_1.Validate.isNonemptyString(htmlString, 'htmlString');
        return htmlString.indexOf('<div') === 0 && htmlString.indexOf(WebPartDataConverter_1._webPartDataAttribute) !== -1;
    };
    WebPartDataConverter.convertWebPartDataToHtml = function (webpartData) {
        sp_core_library_1.Validate.isNotNullOrUndefined(webpartData, 'web part data');
        var wpdata = lodash.cloneDeep(webpartData);
        WebPartDataConverter_1._initializeIfNeeded();
        var componentIdDiv = WebPartDataConverter_1._wpComponentIdDiv.cloneNode();
        componentIdDiv.textContent = wpdata.id;
        var htmlPropsDiv = WebPartDataConverter_1._wpHtmlPropsDiv.cloneNode();
        htmlPropsDiv.innerHTML = WebPartDataConverter_1.convertServerProcessedDataToHtml(wpdata.serverProcessedContent);
        wpdata.serverProcessedContent = undefined;
        var wpHtmlDiv = WebPartDataConverter_1._wpDiv.cloneNode();
        wpHtmlDiv.setAttribute(WebPartDataConverter_1._webPartDataAttribute, JSON.stringify(wpdata));
        wpHtmlDiv.appendChild(componentIdDiv);
        wpHtmlDiv.appendChild(htmlPropsDiv);
        var wrapper = WebPartDataConverter_1._parsingDocument.createElement('div');
        wrapper.appendChild(wpHtmlDiv);
        return wrapper.innerHTML;
    };
    WebPartDataConverter.convertHtmlToWebPartData = function (htmlString, links) {
        var wpdata;
        var wrapper = WebPartDataConverter_1._parsingDocument.createElement('div');
        wrapper.innerHTML = htmlString.trim();
        var wpHtmlDiv = wrapper.children[0];
        if (wpHtmlDiv && wpHtmlDiv.hasAttribute(WebPartDataConverter_1._webPartAttribute)) {
            var wpHtmlDivWebPartAttributeData = wpHtmlDiv.getAttribute(WebPartDataConverter_1._webPartDataAttribute);
            if (wpHtmlDivWebPartAttributeData) {
                wpdata = JSON.parse(wpHtmlDivWebPartAttributeData);
            }
            if (wpdata) {
                var htmlPropsDiv = wpHtmlDiv.querySelector("[" + WebPartDataConverter_1._htmlPropertiesAttribute + "]");
                wpdata.serverProcessedContent =
                    WebPartDataConverter_1.convertServerProcessedHtmlToData(htmlPropsDiv.innerHTML, links);
            }
        }
        return wpdata || undefined;
    };
    WebPartDataConverter.convertServerProcessedDataToHtml = function (serverContent) {
        var result = '';
        if (serverContent) {
            if (serverContent.htmlStrings) {
                result += WebPartDataConverter_1._convertServerProcessedDataToHtmlByType(serverContent.htmlStrings, ISerializedServerProcessedData_1.ServerProcessedDataType.htmlString);
            }
            if (serverContent.searchablePlainTexts) {
                result += WebPartDataConverter_1._convertServerProcessedDataToHtmlByType(serverContent.searchablePlainTexts, ISerializedServerProcessedData_1.ServerProcessedDataType.searchablePlainText);
            }
            if (serverContent.links) {
                result += WebPartDataConverter_1._convertServerProcessedDataToHtmlByType(serverContent.links, ISerializedServerProcessedData_1.ServerProcessedDataType.link);
            }
            if (serverContent.imageSources) {
                result += WebPartDataConverter_1._convertServerProcessedDataToHtmlByType(serverContent.imageSources, ISerializedServerProcessedData_1.ServerProcessedDataType.imageSource);
            }
        }
        return result;
    };
    WebPartDataConverter._convertServerProcessedDataToHtmlByType = function (properties, type) {
        var result = '';
        for (var propPath in properties) {
            var value = properties[propPath];
            result += WebPartDataConverter_1._getHtmlString(propPath, type, value);
        }
        return result;
    };
    WebPartDataConverter.convertServerProcessedHtmlToData = function (htmlString, links) {
        var serverContent = {
            htmlStrings: {},
            searchablePlainTexts: {},
            links: {},
            imageSources: {}
        };
        if (!htmlString || htmlString === '') {
            return serverContent;
        }
        var tempNode = WebPartDataConverter_1._parsingDocument.createElement('DIV');
        tempNode.innerHTML = htmlString;
        var nodes = tempNode.children;
        for (var i = 0; i < nodes.length; i++) {
            var node = nodes[i];
            var key = node.getAttribute(WebPartDataConverter_1._propNameAttribute);
            if (key) {
                switch (node.tagName) {
                    case 'DIV':
                        if (node.hasAttribute(WebPartDataConverter_1._searchablePlainTextAttribute) &&
                            serverContent.searchablePlainTexts) {
                            serverContent.searchablePlainTexts[key] = node.innerText;
                        }
                        else if (serverContent.htmlStrings) {
                            serverContent.htmlStrings[key] = node.innerHTML;
                        }
                        break;
                    case 'LINK':
                    case 'A':
                        if (links) {
                            WebPartDataConverter_1._extractSPLink(node, links, serverContent, key, false);
                        }
                        else {
                            var aTagAttribute = node.getAttribute('href');
                            if (aTagAttribute && serverContent.links) {
                                serverContent.links[key] = aTagAttribute;
                            }
                        }
                        break;
                    case 'IMG':
                    case 'SPIMG':
                        if (links) {
                            WebPartDataConverter_1._extractSPLink(node, links, serverContent, key, true);
                        }
                        else {
                            var srcAttribute = node.getAttribute('src');
                            if (serverContent.imageSources && srcAttribute) {
                                serverContent.imageSources[key] = srcAttribute;
                            }
                            var hrefAttribute = node.getAttribute('href');
                            if (hrefAttribute && serverContent && serverContent.imageSources &&
                                (serverContent.imageSources[key] === undefined || serverContent.imageSources[key] === null)) {
                                serverContent.imageSources[key] = hrefAttribute;
                            }
                        }
                        break;
                }
            }
        }
        return serverContent;
    };
    WebPartDataConverter._getHtmlString = function (propName, propType, propValue) {
        var htmlPropsString = '';
        if (propName && typeof propValue === 'string' && propValue) {
            switch (propType) {
                case ISerializedServerProcessedData_1.ServerProcessedDataType.htmlString:
                    var htmlDiv = this._parsingDocument.createElement('DIV');
                    htmlDiv.setAttribute(WebPartDataConverter_1._propNameAttribute, propName);
                    var sanitizedValue = WebPartDataConverter_1._normalizeHTML(propValue);
                    htmlDiv.innerHTML = sanitizedValue;
                    htmlPropsString = htmlDiv.outerHTML;
                    break;
                case ISerializedServerProcessedData_1.ServerProcessedDataType.searchablePlainText:
                    var plainTextDiv = this._parsingDocument.createElement('DIV');
                    plainTextDiv.setAttribute(WebPartDataConverter_1._propNameAttribute, propName);
                    plainTextDiv.setAttribute(WebPartDataConverter_1._searchablePlainTextAttribute, 'true');
                    plainTextDiv.innerText = propValue;
                    htmlPropsString = plainTextDiv.outerHTML;
                    break;
                case ISerializedServerProcessedData_1.ServerProcessedDataType.link:
                    var anchorDiv = this._parsingDocument.createElement('A');
                    anchorDiv.setAttribute(WebPartDataConverter_1._propNameAttribute, propName);
                    anchorDiv.setAttribute('href', propValue);
                    htmlPropsString = anchorDiv.outerHTML;
                    break;
                case ISerializedServerProcessedData_1.ServerProcessedDataType.imageSource:
                    var imgDiv = this._parsingDocument.createElement('IMG');
                    imgDiv.setAttribute(WebPartDataConverter_1._propNameAttribute, propName);
                    imgDiv.setAttribute('src', propValue);
                    htmlPropsString = imgDiv.outerHTML;
                    break;
            }
        }
        return htmlPropsString;
    };
    WebPartDataConverter._normalizeHTML = function (htmlString) {
        if (!htmlString || htmlString === '') {
            return htmlString;
        }
        var tempDiv = WebPartDataConverter_1._parsingDocument.createElement('DIV');
        tempDiv.innerHTML =
            "<div class='child1'></div>" +
                ("<div class='main'>" + htmlString + "</div>") +
                "<div class='child3'></div>";
        var children = tempDiv.children;
        if (!children[0] || children[0].className !== 'child1' ||
            !children[1] || children[1].className !== 'main' ||
            !children[2] || children[2].className !== 'child3') {
            return '';
        }
        var mainDiv = children[1];
        var scriptTags = mainDiv.querySelectorAll('script');
        for (var i = 0; i < scriptTags.length; i++) {
            var scriptTag = scriptTags[0];
            if (scriptTag && scriptTag.parentElement) {
                scriptTag.parentElement.removeChild(scriptTag);
            }
        }
        return mainDiv.innerHTML;
    };
    WebPartDataConverter._initializeIfNeeded = function () {
        if (!WebPartDataConverter_1._wpDiv) {
            WebPartDataConverter_1._wpDiv = WebPartDataConverter_1._parsingDocument.createElement('div');
            WebPartDataConverter_1._wpDiv.setAttribute(WebPartDataConverter_1._webPartAttribute, '');
            WebPartDataConverter_1._wpDiv.setAttribute(WebPartDataConverter_1._webPartDataVersionAttribute, '1.0');
            WebPartDataConverter_1._wpComponentIdDiv = WebPartDataConverter_1._parsingDocument.createElement('div');
            WebPartDataConverter_1._wpComponentIdDiv.setAttribute(WebPartDataConverter_1._componentIdAttribute, '');
            WebPartDataConverter_1._wpHtmlPropsDiv = WebPartDataConverter_1._parsingDocument.createElement('div');
            WebPartDataConverter_1._wpHtmlPropsDiv.setAttribute(WebPartDataConverter_1._htmlPropertiesAttribute, '');
        }
    };
    WebPartDataConverter._extractSPLink = function (node, links, serverContent, key, isImage) {
        if (links.length <= 0) {
            return;
        }
        var spLinkAttribute = node.getAttribute('data-sp-splink');
        if (spLinkAttribute) {
            var result = WebPartDataConverter_1._linkPlaceHolderRegex.exec(spLinkAttribute);
            if (result) {
                var index = parseInt(result[1], 10);
                if (!isNaN(index) && !!links[index]) {
                    if (isImage && serverContent.imageSources) {
                        serverContent.imageSources[key] = links[index];
                    }
                    else if (serverContent.links) {
                        serverContent.links[key] = links[index];
                    }
                }
                else {
                    throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.InvalidSPLinkIndex, result[1]);
                }
            }
            else {
                throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.InvalidSPLinkAttributeFormat, spLinkAttribute);
            }
        }
    };
    WebPartDataConverter._componentIdAttribute = 'data-sp-componentid';
    WebPartDataConverter._htmlPropertiesAttribute = 'data-sp-htmlproperties';
    WebPartDataConverter._propNameAttribute = 'data-sp-prop-name';
    WebPartDataConverter._searchablePlainTextAttribute = 'data-sp-searchableplaintext';
    WebPartDataConverter._webPartAttribute = 'data-sp-webpart';
    WebPartDataConverter._webPartDataAttribute = 'data-sp-webpartdata';
    WebPartDataConverter._webPartDataVersionAttribute = 'data-sp-webpartdataversion';
    WebPartDataConverter._linkPlaceHolderRegex = /^__SPLINK__(\d+)__$/;
    WebPartDataConverter = WebPartDataConverter_1 = __decorate([
        decorators_1.sealed
    ], WebPartDataConverter);
    return WebPartDataConverter;
    var WebPartDataConverter_1;
}());
exports.WebPartDataConverter = WebPartDataConverter;
exports.default = WebPartDataConverter;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var ReactDOM = __webpack_require__(10);
var BaseClientSideWebPart_1 = __webpack_require__(12);
var ReactWebPart = (function (_super) {
    __extends(ReactWebPart, _super);
    function ReactWebPart(componentType) {
        var _this = _super.call(this) || this;
        _this._componentType = componentType;
        return _this;
    }
    ReactWebPart.prototype.render = function () {
        var element = this.domElement;
        this._componentInstance = React.createElement(this._componentType, {
            mode: this.displayMode
        });
        ReactDOM.render(this._componentInstance, element);
    };
    ReactWebPart.prototype.onDispose = function () {
        ReactDOM.unmountComponentAtNode(this.domElement);
    };
    return ReactWebPart;
}(BaseClientSideWebPart_1.default));
exports.default = ReactWebPart;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BasePropertyPaneControl = (function () {
    function BasePropertyPaneControl() {
    }
    BasePropertyPaneControl.prototype._internalOnAfterResize = function () {
    };
    BasePropertyPaneControl.prototype._internalOnConfigurationEvent = function (configurationEvent) {
    };
    BasePropertyPaneControl.prototype._internalSerialize = function () {
        return undefined;
    };
    return BasePropertyPaneControl;
}());
exports.default = BasePropertyPaneControl;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PropertyPaneButtonType;
(function (PropertyPaneButtonType) {
    PropertyPaneButtonType[PropertyPaneButtonType["Normal"] = 0] = "Normal";
    PropertyPaneButtonType[PropertyPaneButtonType["Primary"] = 1] = "Primary";
    PropertyPaneButtonType[PropertyPaneButtonType["Hero"] = 2] = "Hero";
    PropertyPaneButtonType[PropertyPaneButtonType["Compound"] = 3] = "Compound";
    PropertyPaneButtonType[PropertyPaneButtonType["Command"] = 4] = "Command";
    PropertyPaneButtonType[PropertyPaneButtonType["Icon"] = 5] = "Icon";
})(PropertyPaneButtonType = exports.PropertyPaneButtonType || (exports.PropertyPaneButtonType = {}));


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var IPropertyPaneField_1 = __webpack_require__(1);
function PropertyPaneButton(targetProperty, properties) {
    return {
        type: IPropertyPaneField_1.PropertyPaneFieldType.Button,
        targetProperty: targetProperty,
        properties: properties
    };
}
exports.PropertyPaneButton = PropertyPaneButton;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var IPropertyPaneField_1 = __webpack_require__(1);
function PropertyPaneCheckbox(targetProperty, properties) {
    return {
        type: IPropertyPaneField_1.PropertyPaneFieldType.CheckBox,
        targetProperty: targetProperty,
        properties: properties
    };
}
exports.PropertyPaneCheckbox = PropertyPaneCheckbox;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var IPropertyPaneField_1 = __webpack_require__(1);
function PropertyPaneChoiceGroup(targetProperty, properties) {
    return {
        type: IPropertyPaneField_1.PropertyPaneFieldType.ChoiceGroup,
        targetProperty: targetProperty,
        properties: properties
    };
}
exports.PropertyPaneChoiceGroup = PropertyPaneChoiceGroup;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var IPropertyPaneField_1 = __webpack_require__(1);
function PropertyPaneCustomField(properties) {
    return {
        type: IPropertyPaneField_1.PropertyPaneFieldType.Custom,
        targetProperty: undefined,
        properties: properties
    };
}
exports.PropertyPaneCustomField = PropertyPaneCustomField;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PropertyPaneDropdownOptionType;
(function (PropertyPaneDropdownOptionType) {
    PropertyPaneDropdownOptionType[PropertyPaneDropdownOptionType["Normal"] = 0] = "Normal";
    PropertyPaneDropdownOptionType[PropertyPaneDropdownOptionType["Divider"] = 1] = "Divider";
    PropertyPaneDropdownOptionType[PropertyPaneDropdownOptionType["Header"] = 2] = "Header";
})(PropertyPaneDropdownOptionType = exports.PropertyPaneDropdownOptionType || (exports.PropertyPaneDropdownOptionType = {}));


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var IPropertyPaneField_1 = __webpack_require__(1);
function PropertyPaneDropdown(targetProperty, properties) {
    return {
        type: IPropertyPaneField_1.PropertyPaneFieldType.Dropdown,
        targetProperty: targetProperty,
        properties: properties
    };
}
exports.PropertyPaneDropdown = PropertyPaneDropdown;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var IPropertyPaneField_1 = __webpack_require__(1);
function PropertyPaneHorizontalRule() {
    return {
        type: IPropertyPaneField_1.PropertyPaneFieldType.HorizontalRule,
        targetProperty: undefined,
        properties: undefined
    };
}
exports.PropertyPaneHorizontalRule = PropertyPaneHorizontalRule;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var IPropertyPaneField_1 = __webpack_require__(1);
function PropertyPaneLabel(targetProperty, properties) {
    return {
        type: IPropertyPaneField_1.PropertyPaneFieldType.Label,
        targetProperty: targetProperty,
        properties: properties
    };
}
exports.PropertyPaneLabel = PropertyPaneLabel;


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var IPropertyPaneField_1 = __webpack_require__(1);
function PropertyPaneLink(targetProperty, properties) {
    return {
        type: IPropertyPaneField_1.PropertyPaneFieldType.Link,
        targetProperty: undefined,
        properties: properties
    };
}
exports.PropertyPaneLink = PropertyPaneLink;


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var IPropertyPaneField_1 = __webpack_require__(1);
function PropertyPaneSlider(targetProperty, properties) {
    return {
        type: IPropertyPaneField_1.PropertyPaneFieldType.Slider,
        targetProperty: targetProperty,
        properties: properties
    };
}
exports.PropertyPaneSlider = PropertyPaneSlider;


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var IPropertyPaneField_1 = __webpack_require__(1);
function PropertyPaneTextField(targetProperty, properties) {
    return {
        type: IPropertyPaneField_1.PropertyPaneFieldType.TextField,
        targetProperty: targetProperty,
        properties: properties
    };
}
exports.PropertyPaneTextField = PropertyPaneTextField;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var IPropertyPaneField_1 = __webpack_require__(1);
function PropertyPaneToggle(targetProperty, properties) {
    return {
        type: IPropertyPaneField_1.PropertyPaneFieldType.Toggle,
        targetProperty: targetProperty,
        properties: properties
    };
}
exports.PropertyPaneToggle = PropertyPaneToggle;


/***/ }),
/* 47 */,
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(51);
var loader = __webpack_require__(8);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(52);
var loader = __webpack_require__(8);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(53);
var loader = __webpack_require__(8);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)();
// imports


// module
exports.push([module.i, ".Placeholder{display:-webkit-box;display:-ms-flexbox;display:flex}.Placeholder .Placeholder-container{-webkit-box-align:center;-ms-flex-align:center;-ms-grid-row-align:center;align-items:center;color:\"[theme:neutralSecondary, default: #666666]\";background-color:\"[theme:neutralLighter, default: #f4f4f4]\";width:100%;padding:80px 0}.Placeholder .Placeholder-container .Placeholder-head{color:\"[theme:neutralPrimary, default: #333333]\"}.Placeholder .Placeholder-container .Placeholder-head .Placeholder-headContainer{height:100%;white-space:nowrap;text-align:center}.Placeholder .Placeholder-container .Placeholder-head .Placeholder-icon,.Placeholder .Placeholder-container .Placeholder-head .Placeholder-text{display:inline-block;vertical-align:middle;white-space:normal}[dir=ltr] .Placeholder .Placeholder-container .Placeholder-head .Placeholder-text{padding-left:20px}[dir=rtl] .Placeholder .Placeholder-container .Placeholder-head .Placeholder-text{padding-right:20px}.Placeholder .Placeholder-container .Placeholder-description{width:65%;vertical-align:middle;margin:0 auto;text-align:center}.Placeholder .Placeholder-container .Placeholder-description .Placeholder-descriptionText{color:\"[theme:neutralSecondary, default: #666666]\";font-size:17px;display:inline-block;margin:24px 0;font-weight:100}.Placeholder-overlay{position:relative;height:100%;z-index:1}.Placeholder-overlay .Placeholder-spinnerContainer{position:relative;width:100%;margin:164px 0}", ""]);

// exports


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)();
// imports


// module
exports.push([module.i, ".errorBox_897404e1{padding:12px 0;overflow:hidden;position:relative;top:0;left:0;right:0;z-index:1;display:inline-block}[dir=ltr] .errorBox_897404e1{text-align:left}[dir=rtl] .errorBox_897404e1{text-align:right}.errorBoxText_897404e1{position:relative;display:inline-block;white-space:pre-wrap;color:#666;font-weight:700}.detailsButton_897404e1{text-transform:uppercase;color:#0078d7;border:none;background:0 0;margin-top:20px}[dir=ltr] .detailsButton_897404e1{padding-left:0}[dir=rtl] .detailsButton_897404e1{padding-right:0}.somethingWentWrongText_897404e1{font-weight:400;color:#0078d7}.siteAdminText_897404e1{font-weight:700;color:#0078d7}.screenReaderOnly_897404e1{position:absolute;text-indent:-9999px;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;border:0}", ""]);

// exports


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(14)();
// imports


// module
exports.push([module.i, "[id^=spPropertyPaneContainer].showPane_443b019e{width:340px}[id^=spPropertyPaneContainer].showPane_443b019e button{display:block}[id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_443b019e{position:absolute;top:50px;bottom:0;z-index:999}[dir=ltr] [id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_443b019e{right:-340px}[dir=rtl] [id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_443b019e{left:-340px}[dir=ltr] [id^=spPropertyPaneContainerNoFlexbox].showPane_443b019e{right:0}[dir=rtl] [id^=spPropertyPaneContainerNoFlexbox].showPane_443b019e{left:0}[dir=ltr] [id^=spPageChromeAppDiv].shrinkContent_443b019e{right:340px}[dir=rtl] [id^=spPageChromeAppDiv].shrinkContent_443b019e{left:340px}[dir=ltr] [id^=workbenchPageContent].shrinkContent_443b019e{right:340px}[dir=rtl] [id^=workbenchPageContent].shrinkContent_443b019e{left:340px}[dir=ltr] [id^=workbenchCommandBar].shrinkContent_443b019e{padding-right:340px}[dir=rtl] [id^=workbenchCommandBar].shrinkContent_443b019e{padding-left:340px}", ""]);

// exports


/***/ }),
/* 54 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(48);


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(2);
var sp_core_library_1 = __webpack_require__(0);
var ClassicPageUtils_1 = __webpack_require__(11);
var ClientSideWebPartManager_1 = __webpack_require__(13);
var MaintenanceModeRenderer_1 = __webpack_require__(61);
var ClientSideWebPartMaintenanceModeManager = (function (_super) {
    __extends(ClientSideWebPartMaintenanceModeManager, _super);
    function ClientSideWebPartMaintenanceModeManager(host) {
        var _this = _super.call(this, host) || this;
        _this._wpMaintenanceModeData = new Map();
        return _this;
    }
    ClientSideWebPartMaintenanceModeManager.prototype.loadWebPart = function (context) {
        this._loadWebPartInMaintenanceMode(context);
        this._wpMaintenanceModeData.set(context.instanceId, context.webPartData);
        return Promise.resolve();
    };
    ClientSideWebPartMaintenanceModeManager.prototype.serialize = function (instanceId) {
        return this._wpMaintenanceModeData;
    };
    ClientSideWebPartMaintenanceModeManager.prototype.dispose = function (instanceId) {
        if (instanceId) {
            this._wpMaintenanceModeData.delete(instanceId);
        }
        else {
            this._wpMaintenanceModeData = new Map();
        }
    };
    ClientSideWebPartMaintenanceModeManager.prototype._loadWebPartInMaintenanceMode = function (context) {
        var webPartContext = this._getWebPartContext(context);
        webPartContext.serviceScope.finish();
        MaintenanceModeRenderer_1.default.render(webPartContext, context.webPartData, function () {
            ClassicPageUtils_1.default.disableAutomaticPostbacks(context.domElement, sp_core_library_1.Environment.type);
        });
    };
    ClientSideWebPartMaintenanceModeManager = __decorate([
        decorators_1.sealed
    ], ClientSideWebPartMaintenanceModeManager);
    return ClientSideWebPartMaintenanceModeManager;
}(ClientSideWebPartManager_1.default));
exports.default = ClientSideWebPartMaintenanceModeManager;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ReactDOM = __webpack_require__(10);
var React = __webpack_require__(3);
var decorators_1 = __webpack_require__(2);
var sp_telemetry_1 = __webpack_require__(4);
var sp_core_library_1 = __webpack_require__(0);
var PlaceholderSpinner_1 = __webpack_require__(18);
var Strings_resx_1 = __webpack_require__(6);
var ErrorMessage_1 = __webpack_require__(24);
var FriendlyErrorMessage_1 = __webpack_require__(58);
var ClassicPageUtils_1 = __webpack_require__(11);
var ClientSideWebPartStatusRenderer = (function () {
    function ClientSideWebPartStatusRenderer() {
        this._errorId = 'cswp-error';
        this._logSource = sp_telemetry_1._LogSource.create('ClientSideWebPartStatusRenderer');
        this._activeIndicatorCache = new Map();
    }
    ClientSideWebPartStatusRenderer.prototype.displayLoadingIndicator = function (domElement, loadingMessage, timeout) {
        var _this = this;
        sp_core_library_1.Validate.isNotNullOrUndefined(domElement, 'domElement');
        if (!timeout || (timeout && isNaN(timeout))) {
            timeout = 1500; 
        }
        var cacheEntry = this._getCacheEntry(domElement);
        if (cacheEntry.loadingTimer) {
            window.clearTimeout(cacheEntry.loadingTimer);
        }
        this._renderSpinner(domElement, loadingMessage, false);
        cacheEntry.loadingTimer =
            window.setTimeout(function () { _this._renderSpinner(domElement, loadingMessage, true); }, timeout);
    };
    ClientSideWebPartStatusRenderer.prototype.clearLoadingIndicator = function (domElement) {
        sp_core_library_1.Validate.isNotNullOrUndefined(domElement, 'domElement');
        if (this._activeIndicatorCache.has(domElement)) {
            var cacheEntry = this._getCacheEntry(domElement);
            sp_telemetry_1._TraceLogger.logVerbose(this._logSource, Strings_resx_1.default.ClearLoadingIndicator);
            if (cacheEntry.loadingTimer) {
                window.clearTimeout(cacheEntry.loadingTimer);
            }
            if (cacheEntry.placeholder) {
                cacheEntry.placeholder.clearPlaceholder();
                ReactDOM.unmountComponentAtNode(domElement);
            }
            this._activeIndicatorCache.delete(domElement);
        }
    };
    ClientSideWebPartStatusRenderer.prototype.renderError = function (domElement, error) {
        sp_core_library_1.Validate.isNotNullOrUndefined(domElement, 'domElement');
        sp_core_library_1.Validate.isNotNullOrUndefined(error, 'error');
        var errorText = '';
        if (error instanceof sp_core_library_1.SPError) {
            errorText = error.toStringForUI();
        }
        else {
            var errorMessageArray = [
                Strings_resx_1.default.WebpartErrorErrorText,
                "" + (error.message || error)
            ];
            if (error.stack) {
                errorMessageArray = errorMessageArray.concat([
                    '',
                    Strings_resx_1.default.WebpartErrorCallStackText,
                    "" + error.stack
                ]);
            }
            errorText = errorMessageArray.join('\r\n');
        }
        var cacheEntry = this._getCacheEntry(domElement);
        cacheEntry.isErrorBeingRendered = true;
        var divErr = domElement.querySelector("div[data-sp-id='" + this._errorId + "']");
        if (divErr) {
            divErr.style.display = 'block';
        }
        else {
            if (!this._errorHtml) {
                var errorComponent = void 0;
                if (false) {
                    errorComponent = FriendlyErrorMessage_1.default;
                }
                else {
                    errorComponent = ErrorMessage_1.default;
                }
                var el = React.createElement(errorComponent, { errorMessage: errorText });
                divErr = document.createElement('div');
                divErr.setAttribute('data-sp-id', this._errorId);
                divErr.setAttribute('data-automation-id', 'webPartError');
                domElement.appendChild(divErr);
                ReactDOM.render(el, divErr);
                ClassicPageUtils_1.default.disableAutomaticPostbacks(domElement, sp_core_library_1.Environment.type);
            }
        }
    };
    ClientSideWebPartStatusRenderer.prototype.clearError = function (domElement) {
        sp_core_library_1.Validate.isNotNullOrUndefined(domElement, 'domElement');
        if (!this._activeIndicatorCache.has(domElement)) {
            return;
        }
        var cacheEntry = this._activeIndicatorCache.get(domElement);
        if (cacheEntry.isErrorBeingRendered) {
            cacheEntry.isErrorBeingRendered = false;
            var divErr = domElement.querySelector("div[data-sp-id='" + this._errorId + "']");
            if (divErr) {
                divErr.style.display = 'none';
                divErr.removeAttribute('data-automation-id');
            }
        }
    };
    ClientSideWebPartStatusRenderer.prototype._renderSpinner = function (domElement, loadingMessage, showSpinner) {
        if (!this._activeIndicatorCache.has(domElement)) {
            return;
        }
        var cacheEntry = this._getCacheEntry(domElement);
        if (cacheEntry.isErrorBeingRendered) {
            return;
        }
        sp_telemetry_1._TraceLogger.logVerbose(this._logSource, Strings_resx_1.default.DisplayLoadingIndicator);
        if (!cacheEntry.placeholder) {
            var el = React.createElement(PlaceholderSpinner_1.default, { hideSpinner: !showSpinner, label: sp_core_library_1.Text.format(Strings_resx_1.default.LoadingStatus, loadingMessage) });
            cacheEntry.placeholder = ReactDOM.render(el, domElement);
        }
        else {
            cacheEntry.placeholder.showSpinner(showSpinner);
        }
    };
    ClientSideWebPartStatusRenderer.prototype._getCacheEntry = function (domElement) {
        if (this._activeIndicatorCache.has(domElement)) {
            return this._activeIndicatorCache.get(domElement);
        }
        var cacheEntry = {
            loadingTimer: undefined,
            placeholder: undefined,
            isErrorBeingRendered: false
        };
        this._activeIndicatorCache.set(domElement, cacheEntry);
        return cacheEntry;
    };
    ClientSideWebPartStatusRenderer = __decorate([
        decorators_1.sealed
    ], ClientSideWebPartStatusRenderer);
    return ClientSideWebPartStatusRenderer;
}());
exports.default = ClientSideWebPartStatusRenderer;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Strings_resx_1 = __webpack_require__(6);
var cswp_base_module_scss_1 = __webpack_require__(16);
var ErrorMessage_1 = __webpack_require__(24);
var React = __webpack_require__(3);
var FriendlyErrorMessage = (function (_super) {
    __extends(FriendlyErrorMessage, _super);
    function FriendlyErrorMessage(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isExpanded: false
        };
        _this._toggleExpandedDetails = _this._toggleExpandedDetails.bind(_this);
        return _this;
    }
    FriendlyErrorMessage.prototype.render = function () {
        var isExpanded = this.state.isExpanded;
        return (React.createElement("div", { className: cswp_base_module_scss_1.default.errorBox },
            React.createElement("div", null,
                React.createElement("h2", { className: cswp_base_module_scss_1.default.somethingWentWrongText }, Strings_resx_1.default.WebpartErrorSomethingWentWrong)),
            React.createElement("div", null,
                React.createElement("span", { className: cswp_base_module_scss_1.default.siteAdminText }, Strings_resx_1.default.WebpartErrorSiteAdminAdvice)),
            React.createElement("div", null,
                React.createElement("button", { onClick: this._toggleExpandedDetails, className: cswp_base_module_scss_1.default.detailsButton }, Strings_resx_1.default.WebpartErrorTechnicalDetails)),
            isExpanded &&
                React.createElement(ErrorMessage_1.default, { errorMessage: this.props.errorMessage })));
    };
    FriendlyErrorMessage.prototype._toggleExpandedDetails = function () {
        this.setState({ isExpanded: !this.state.isExpanded });
    };
    return FriendlyErrorMessage;
}(React.Component));
exports.default = FriendlyErrorMessage;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ServerProcessedDataType;
(function (ServerProcessedDataType) {
    ServerProcessedDataType[ServerProcessedDataType["htmlString"] = 1] = "htmlString";
    ServerProcessedDataType[ServerProcessedDataType["link"] = 2] = "link";
    ServerProcessedDataType[ServerProcessedDataType["imageSource"] = 3] = "imageSource";
    ServerProcessedDataType[ServerProcessedDataType["searchablePlainText"] = 4] = "searchablePlainText";
})(ServerProcessedDataType = exports.ServerProcessedDataType || (exports.ServerProcessedDataType = {}));


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(2);
var PropertyPaneAccessor = (function () {
    function PropertyPaneAccessor(openProperytPane, refresh, isRenderedByWebPart, isPropertyPaneOpen) {
        this._open = openProperytPane;
        this._refresh = refresh;
        this._isRenderedByWebPart = isRenderedByWebPart;
        this._isPropertyPaneOpen = isPropertyPaneOpen;
        this.open = this.open.bind(this);
        this.refresh = this.refresh.bind(this);
        this.isRenderedByWebPart = this.isRenderedByWebPart.bind(this);
    }
    PropertyPaneAccessor.prototype.open = function () {
        this._open();
    };
    PropertyPaneAccessor.prototype.refresh = function () {
        this._refresh();
    };
    PropertyPaneAccessor.prototype.isRenderedByWebPart = function () {
        return this._isRenderedByWebPart();
    };
    PropertyPaneAccessor.prototype.isPropertyPaneOpen = function () {
        return this._isPropertyPaneOpen();
    };
    PropertyPaneAccessor = __decorate([
        decorators_1.sealed
    ], PropertyPaneAccessor);
    return PropertyPaneAccessor;
}());
exports.default = PropertyPaneAccessor;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(2);
var React = __webpack_require__(3);
var ReactDOM = __webpack_require__(10);
__webpack_require__(9);
var MaintenanceModeRenderer = (function () {
    function MaintenanceModeRenderer() {
    }
    MaintenanceModeRenderer.render = function (context, data, onRenderComplete) {
        __webpack_require__.e/* require.ensure */(1).then((function (require) {
            var maintenanceMode = __webpack_require__(47).default;
            var el = React.createElement(maintenanceMode, { context: context, data: data });
            ReactDOM.render(el, context.domElement);
            onRenderComplete();
        }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
    };
    MaintenanceModeRenderer = __decorate([
        decorators_1.sealed
    ], MaintenanceModeRenderer);
    return MaintenanceModeRenderer;
}());
exports.default = MaintenanceModeRenderer;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ReactDOM = __webpack_require__(10);
var React = __webpack_require__(3);
var sp_core_library_1 = __webpack_require__(0);
var sp_telemetry_1 = __webpack_require__(4);
var PropertyPaneDefinitions_1 = __webpack_require__(5);
var Strings_resx_1 = __webpack_require__(22);
var PropertyPaneController_module_scss_1 = __webpack_require__(63);
__webpack_require__(22);
__webpack_require__(9);
var PropertyPaneController = (function () {
    function PropertyPaneController(webPartGetter, callback) {
        this._logSource = sp_telemetry_1._LogSource.create('PropertyPaneController');
        sp_core_library_1.Validate.isNotNullOrUndefined(webPartGetter, 'webPartGetter');
        this._webPartGetter = webPartGetter;
        this._configurationEventCallback = callback;
        this._propertyPaneContainerId =
            this._isFlexLayoutEnabled && sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.ClassicSharePoint ?
                PropertyPaneController.PROPERTY_PANE_CONTAINER_ID :
                PropertyPaneController.PROPERTY_PANE_CONTAINER_NOFLEXBOX_ID;
        this._onPropertyPaneFieldChanged = this._onPropertyPaneFieldChanged.bind(this);
        this._onConfigurationEvent = this._onConfigurationEvent.bind(this);
        this._fireConfigurationEvent = this._fireConfigurationEvent.bind(this);
    }
    Object.defineProperty(PropertyPaneController.prototype, "currentlyConfiguredWebPartId", {
        get: function () { return this._currentlyConfiguredWebPartId; },
        enumerable: true,
        configurable: true
    });
    PropertyPaneController.prototype.setPropertyPaneState = function (id, propertyPaneState, renderedByWebPart) {
        var noOp = renderedByWebPart &&
            propertyPaneState === PropertyPaneDefinitions_1.PropertyPaneState.Refresh &&
            id !== this._currentlyConfiguredWebPartId;
        if (!noOp) {
            var toBeConfiguredWebPart = this._webPartGetter(id);
            this._resolvePropertyPaneElements();
            var paneWillOpen = !this._isOpen &&
                (propertyPaneState === PropertyPaneDefinitions_1.PropertyPaneState.Open || propertyPaneState === PropertyPaneDefinitions_1.PropertyPaneState.Toggle);
            var propertyPaneWebPartsSwitched = false;
            if (id && this._currentlyConfiguredWebPartId && (id !== this._currentlyConfiguredWebPartId || paneWillOpen)) {
                propertyPaneWebPartsSwitched = true;
                this._fireConfigurationEvent(id, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneWebPartsSwitched);
            }
            if (propertyPaneState !== PropertyPaneDefinitions_1.PropertyPaneState.Refresh) {
                if (propertyPaneState === PropertyPaneDefinitions_1.PropertyPaneState.Toggle) {
                    var fromItemEditToOverallWebPartEdit = !!this._isRenderedByWebPart !== !!renderedByWebPart;
                    if (!propertyPaneWebPartsSwitched && fromItemEditToOverallWebPartEdit) {
                        propertyPaneState = PropertyPaneDefinitions_1.PropertyPaneState.Refresh;
                    }
                }
                this._isRenderedByWebPart = !!renderedByWebPart;
            }
            this._setPropertyPaneState(toBeConfiguredWebPart, id, propertyPaneState);
            this._currentlyConfiguredWebPartId = id;
        }
        else {
            sp_telemetry_1._TraceLogger.logVerbose(this._logSource, sp_core_library_1.Text.format(Strings_resx_1.default.NoOpOnRefreshPropertyPaneText, id));
        }
    };
    PropertyPaneController.prototype.isRenderedByWebPart = function () {
        return this._isRenderedByWebPart;
    };
    PropertyPaneController.prototype.isPropertyPaneOpen = function () {
        return this._isOpen;
    };
    PropertyPaneController.prototype.onWebPartDelete = function (id) {
        sp_core_library_1.Validate.isNonemptyString(id, 'id');
        if (id === this._currentlyConfiguredWebPartId) {
            if (this._isOpen) {
                this._renderPropertyPane(undefined, true);
            }
            this._currentlyConfiguredWebPartId = undefined;
        }
    };
    PropertyPaneController.prototype._setPropertyPaneState = function (wp, id, propertyPaneState) {
        switch (propertyPaneState) {
            case PropertyPaneDefinitions_1.PropertyPaneState.Open:
                var paneOpenBeforeRender = this._isOpen;
                this._renderPropertyPane(wp, true, true);
                this._showPropertyPane();
                if (paneOpenBeforeRender) {
                    this._fireNoToggleConfigurationEvents(id);
                }
                else {
                    this._firePostToggleConfigurationEvents();
                }
                break;
            case PropertyPaneDefinitions_1.PropertyPaneState.Close:
                if (this._isOpen) {
                    this._hidePropertyPane();
                    this._firePostToggleConfigurationEvents();
                }
                break;
            case PropertyPaneDefinitions_1.PropertyPaneState.Toggle:
                if (this._isOpen) {
                    this._hidePropertyPane();
                }
                else {
                    this._renderPropertyPane(wp, true, true);
                    this._showPropertyPane();
                }
                this._firePostToggleConfigurationEvents();
                break;
            case PropertyPaneDefinitions_1.PropertyPaneState.Default:
                if (this._isOpen) {
                    this._fireNoToggleConfigurationEvents(id);
                    if (this._isCurrentlyConfiguredPropertyPaneReactive) {
                        this._renderPropertyPane(wp, true, true);
                    }
                    else {
                        this._renderPropertyPane(wp, true, true);
                    }
                }
                break;
            case PropertyPaneDefinitions_1.PropertyPaneState.Refresh:
                if (this._isOpen) {
                    this._renderPropertyPane(wp, true, false);
                }
                break;
        }
        if (this._isOpen !== false && wp) {
            var wpContext = wp.context; 
            var wpAlias = wpContext && wpContext._manifest && wpContext._manifest.alias;
            var isInternal = wpContext && wpContext._manifest && wpContext._manifest.isInternal || false;
            var logEntry = new sp_telemetry_1._LogEntry(this._logSource.id, 'PropertyPaneOpened', sp_telemetry_1._LogType.Event, {
                'alias': wpAlias,
                'isInternal': isInternal.toString()
            });
            sp_telemetry_1._EngagementLogger.logEventWithLogEntry(logEntry);
        }
    };
    PropertyPaneController.prototype._showPropertyPane = function () {
        if (this._pageContentElement) {
            this._pageContentElement.classList.add(PropertyPaneController_module_scss_1.default.shrinkContent);
        }
        else {
            this._propertyPaneContainer.style.top = '50px';
            this._propertyPaneContainer.style.zIndex = '999';
        }
        if (this._workbenchCommandBarElement) {
            this._workbenchCommandBarElement.classList.add(PropertyPaneController_module_scss_1.default.shrinkContent);
        }
        this._propertyPaneContainer.classList.add(PropertyPaneController_module_scss_1.default.showPane);
        this._isOpen = true;
    };
    PropertyPaneController.prototype._hidePropertyPane = function () {
        if (this._pageContentElement) {
            this._pageContentElement.classList.remove(PropertyPaneController_module_scss_1.default.shrinkContent);
        }
        else {
            ReactDOM.unmountComponentAtNode(this._propertyPaneElement);
        }
        if (this._workbenchCommandBarElement) {
            this._workbenchCommandBarElement.classList.remove(PropertyPaneController_module_scss_1.default.shrinkContent);
        }
        this._propertyPaneContainer.classList.remove(PropertyPaneController_module_scss_1.default.showPane);
        this._isOpen = false;
    };
    PropertyPaneController.prototype._renderPropertyPane = function (currentWebpart, shouldRecreatePropertyPaneElement, resetPropertyPaneState) {
        var _this = this;
        if (currentWebpart) {
            this._currentPropertyPaneData = currentWebpart._internalGetPropertyPaneData();
            this._currentPropertyPaneData.onPropertyPaneFieldChanged = this._onPropertyPaneFieldChanged;
            this._currentPropertyPaneData.onConfigurationEvent = this._onConfigurationEvent;
            this._currentPropertyPaneData.render = function () { _this._render(); };
            this._currentPropertyPaneData.shouldResetState = resetPropertyPaneState;
            if (this._currentPropertyPaneData.configuration &&
                this._currentPropertyPaneData.configuration.showLoadingIndicator) {
                var delay = this._currentPropertyPaneData.configuration.loadingIndicatorDelayTime === undefined ?
                    500 :
                    this._currentPropertyPaneData.configuration.loadingIndicatorDelayTime;
                setTimeout(function () {
                    if (_this._currentPropertyPaneData.configuration.showLoadingIndicator) {
                        _this._loadPropertyPaneComponent(true);
                    }
                }, delay);
            }
            else {
                this._loadPropertyPaneComponent(true);
            }
        }
        else {
            this._currentPropertyPaneData = this._getEmptyPropertyPaneData();
            this._loadPropertyPaneComponent(shouldRecreatePropertyPaneElement);
        }
    };
    PropertyPaneController.prototype._loadPropertyPaneComponent = function (shouldRecreatePropertyPaneElement) {
        var _this = this;
        __webpack_require__.e/* require.ensure */(0).then((function (require) {
            var propertyPane = __webpack_require__(70).default;
            var insertIntoDom = false;
            if (shouldRecreatePropertyPaneElement) {
                if (!_this._propertyPaneElement) {
                    _this._propertyPaneElement = document.createElement('div');
                    insertIntoDom = true;
                }
            }
            _this._propertyPaneElement.className = _this._currentPropertyPaneData.webPartId;
            var el = React.createElement(propertyPane, { data: _this._currentPropertyPaneData });
            ReactDOM.render(el, _this._propertyPaneElement);
            if (_this._propertyPaneContainer) {
                if (insertIntoDom) {
                    _this._clearPropertyPaneContainer();
                    _this._propertyPaneContainer.appendChild(_this._propertyPaneElement);
                }
            }
            else {
                if (insertIntoDom && document.body.lastChild) {
                    document.body.insertBefore(_this._propertyPaneElement, document.body.lastChild.nextSibling);
                }
            }
        }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
    };
    PropertyPaneController.prototype._render = function () {
        var wp = this._webPartGetter(this._currentPropertyPaneData.webPartId);
        if (wp) {
            this._renderPropertyPane(wp);
        }
    };
    PropertyPaneController.prototype._onPropertyPaneFieldChanged = function (propertyName, newValue) {
        sp_core_library_1.Validate.isNonemptyString(propertyName, 'propertyName');
        if (!this._currentPropertyPaneData.webPartId) {
            throw new Error('onPropertyPaneFieldChanged event is not expected when no web part is being configured');
        }
        var wp = this._webPartGetter(this._currentPropertyPaneData.webPartId);
        if (wp) {
            wp._internalOnPropertyPaneFieldChanged(propertyName, newValue);
            this._renderPropertyPane(wp);
        }
        if (this._isCurrentlyConfiguredPropertyPaneReactive()) {
            this._resetConfigurationCompleteTimeout();
        }
    };
    PropertyPaneController.prototype._onConfigurationEvent = function (configurationEvent) {
        switch (configurationEvent) {
            case PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneClosed:
                this._hidePropertyPane();
                this._firePostToggleConfigurationEvents();
                break;
            case PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneApplyClicked:
            case PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneLostFocus:
                this._fireConfigurationEvent(this._currentlyConfiguredWebPartId, configurationEvent);
                this._fireConfigurationEvent(this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationComplete);
                break;
        }
    };
    PropertyPaneController.prototype._firePostToggleConfigurationEvents = function () {
        var _this = this;
        if (this._isOpen) {
            window.setTimeout(function () {
                _this._fireConfigurationEvent(_this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneOpened);
                _this._fireConfigurationEvent(_this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationStart);
                window.postMessage('Property pane toggled', window.location.origin);
            }, PropertyPaneController.ANIMATION_TIMEOUT);
        }
        else {
            this._fireConfigurationEvent(this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationComplete);
            window.setTimeout(function () {
                _this._fireConfigurationEvent(_this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneClosed);
                window.postMessage('Property pane toggled', window.location.origin);
            }, PropertyPaneController.ANIMATION_TIMEOUT);
        }
    };
    PropertyPaneController.prototype._fireNoToggleConfigurationEvents = function (id) {
        this._fireConfigurationEvent(this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationComplete);
        this._fireConfigurationEvent(id, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationStart);
    };
    PropertyPaneController.prototype._fireConfigurationEvent = function (webpartId, configurationEvent) {
        this._clearConfigurationCompleteTimeout();
        var wp = this._webPartGetter(webpartId);
        if (wp) {
            if (this._configurationEventCallback) {
                this._configurationEventCallback(configurationEvent, wp._internalSerialize());
            }
            wp._internalOnConfigurationEvent(configurationEvent);
        }
    };
    PropertyPaneController.prototype._resolvePropertyPaneElements = function () {
        var workbenchElement = document.getElementById('workbenchPageContent');
        if (workbenchElement) {
            this._pageContentElement = workbenchElement;
            this._workbenchCommandBarElement = document.getElementById('workbenchCommandBar');
        }
        else {
            this._pageContentElement = document.getElementById('spPageChromeAppDiv');
        }
        if (!this._pageContentElement) {
            if (!this._propertyPaneContainer) {
                this._propertyPaneContainer = document.createElement('div');
                this._propertyPaneContainer.id = this._propertyPaneContainerId;
                this._propertyPaneContainer.className = this._propertyPaneContainerId;
                document.body.appendChild(this._propertyPaneContainer);
            }
        }
        else {
            this._propertyPaneContainer = document.getElementById(this._propertyPaneContainerId) ||
                document.getElementById(PropertyPaneController.PROPERTY_PANE_CONTAINER_NOFLEXBOX_ID);
        }
    };
    PropertyPaneController.prototype._clearPropertyPaneContainer = function () {
        while (this._propertyPaneContainer && this._propertyPaneContainer.firstChild) {
            this._propertyPaneContainer.removeChild(this._propertyPaneContainer.firstChild);
        }
    };
    PropertyPaneController.prototype._resetConfigurationCompleteTimeout = function () {
        this._clearConfigurationCompleteTimeout();
        this._configurationCompletionTimeout = window.setTimeout(this._fireConfigurationEvent, PropertyPaneController.CONFIGURATION_COMPLETE_TIMEOUT, this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationComplete);
    };
    PropertyPaneController.prototype._clearConfigurationCompleteTimeout = function () {
        if (this._configurationCompletionTimeout) {
            window.clearTimeout(this._configurationCompletionTimeout);
            this._configurationCompletionTimeout = undefined;
        }
    };
    PropertyPaneController.prototype._isCurrentlyConfiguredPropertyPaneReactive = function () {
        if (this._currentlyConfiguredWebPartId) {
            var currentlyConfiguredWebPart = this._webPartGetter(this._currentlyConfiguredWebPartId);
            var isReactive = this._currentPropertyPaneData ?
                this._currentPropertyPaneData.isReactive :
                currentlyConfiguredWebPart._internalGetPropertyPaneData().isReactive;
            return !!isReactive;
        }
        return false;
    };
    PropertyPaneController.prototype._getEmptyPropertyPaneData = function () {
        return {
            webPartId: undefined,
            title: undefined,
            shouldResetState: true,
            onPropertyPaneFieldChanged: undefined,
            onConfigurationEvent: this._onConfigurationEvent,
            onRendered: undefined,
            properties: undefined,
            configuration: undefined
        };
    };
    Object.defineProperty(PropertyPaneController.prototype, "_isFlexLayoutEnabled", {
        get: function () {
            return !sp_core_library_1._SPKillSwitch.isActivated(PropertyPaneController.flexLayoutKillSwitch, '5/9/2017', 'Switch to flexbox');
        },
        enumerable: true,
        configurable: true
    });
    PropertyPaneController.ANIMATION_TIMEOUT = 400;
    PropertyPaneController.CONFIGURATION_COMPLETE_TIMEOUT = 5000;
    PropertyPaneController.PROPERTY_PANE_CONTAINER_ID = 'spPropertyPaneContainer';
    PropertyPaneController.PROPERTY_PANE_CONTAINER_NOFLEXBOX_ID = 'spPropertyPaneContainerNoFlexbox';
    PropertyPaneController.flexLayoutKillSwitch = sp_core_library_1.Guid.parse('E17AF313-E05B-4055-BDF7-7CD508F8853F');
    return PropertyPaneController;
}());
exports.default = PropertyPaneController;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(50);
var styles = {
    showPane: 'showPane_443b019e',
    spPropertyPaneContainer: 'spPropertyPaneContainer_443b019e',
    shrinkContent: 'shrinkContent_443b019e',
};
exports.default = styles;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(4);
var sp_core_library_1 = __webpack_require__(0);
function executeAndReThrow(method, errorToThrow, logSource) {
    sp_core_library_1.Validate.isNotNullOrUndefined(method, 'method');
    try {
        method();
    }
    catch (e) {
        if (logSource) {
            sp_telemetry_1._TraceLogger.logError(logSource, new Error('Error: ' + e));
        }
        errorToThrow.innerError = e;
        throw errorToThrow;
    }
}
exports.executeAndReThrow = executeAndReThrow;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(4);
var sp_core_library_1 = __webpack_require__(0);
function executeWithoutFailing(method, logSource) {
    sp_core_library_1.Validate.isNotNullOrUndefined(method, 'method');
    try {
        method();
    }
    catch (e) {
        if (logSource) {
            sp_telemetry_1._TraceLogger.logError(logSource, new Error('Error: ' + e));
        }
    }
}
exports.executeWithoutFailing = executeWithoutFailing;


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var lodash = __webpack_require__(7);
function deepFreeze(obj) {
    if (!obj) {
        return undefined;
    }
    if (!Object.isFrozen(obj)) {
        Object.freeze(obj);
    }
    var depth = 0;
    var func = function (o) {
        if (++depth > 5) {
            return;
        }
        var propNames = Object.getOwnPropertyNames(o);
        propNames.forEach(function (name) {
            var prop = o[name];
            if (typeof prop === 'object' && !!prop && !lodash.isElement(prop) && !Object.isFrozen(prop)) {
                func(prop);
            }
        });
    };
    func(obj);
    return obj;
}
exports.deepFreeze = deepFreeze;


/***/ }),
/* 67 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_67__;

/***/ }),
/* 68 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_68__;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var WebPartContext_1 = __webpack_require__(19);
exports.WebPartContext = WebPartContext_1.default;
var PropertyPaneDefinitions_1 = __webpack_require__(5);
exports.WebPartConfigurationEvent = PropertyPaneDefinitions_1.WebPartConfigurationEvent;
var BaseClientSideWebPart_1 = __webpack_require__(12);
exports.BaseClientSideWebPart = BaseClientSideWebPart_1.default;
var ClientSideWebPartManager_1 = __webpack_require__(13);
exports.ClientSideWebPartManager = ClientSideWebPartManager_1.default;
var ClientSideWebPartManagerFactory_1 = __webpack_require__(30);
exports.ClientSideWebPartManagerFactory = ClientSideWebPartManagerFactory_1.default;
var ReactWebPart_1 = __webpack_require__(32);
exports.ReactWebPart = ReactWebPart_1.default;
var ReservedEventNames_1 = __webpack_require__(21);
exports.ReservedEventNames = ReservedEventNames_1.default;
var WebPartDataConverter_1 = __webpack_require__(31);
exports.WebPartDataConverter = WebPartDataConverter_1.default;
var EventAggregator_1 = __webpack_require__(20);
exports.EventAggregator = EventAggregator_1.default;
var PlaceholderSpinner_1 = __webpack_require__(18);
exports.PlaceholderSpinner = PlaceholderSpinner_1.default;
var WebPartForm_1 = __webpack_require__(29);
exports.WebPartForm = WebPartForm_1.default;
var PropertyPaneDefinitions_2 = __webpack_require__(5);
exports.PropertyPaneState = PropertyPaneDefinitions_2.PropertyPaneState;
var IPropertyPaneField_1 = __webpack_require__(1);
exports.PropertyPaneFieldType = IPropertyPaneField_1.PropertyPaneFieldType;
var PropertyPaneCustomField_1 = __webpack_require__(38);
exports.PropertyPaneCustomField = PropertyPaneCustomField_1.PropertyPaneCustomField;
var IPropertyPaneButton_1 = __webpack_require__(34);
exports.PropertyPaneButtonType = IPropertyPaneButton_1.PropertyPaneButtonType;
var PropertyPaneButton_1 = __webpack_require__(35);
exports.PropertyPaneButton = PropertyPaneButton_1.PropertyPaneButton;
var PropertyPaneCheckbox_1 = __webpack_require__(36);
exports.PropertyPaneCheckbox = PropertyPaneCheckbox_1.PropertyPaneCheckbox;
var PropertyPaneChoiceGroup_1 = __webpack_require__(37);
exports.PropertyPaneChoiceGroup = PropertyPaneChoiceGroup_1.PropertyPaneChoiceGroup;
var IPropertyPaneDropdown_1 = __webpack_require__(39);
exports.PropertyPaneDropdownOptionType = IPropertyPaneDropdown_1.PropertyPaneDropdownOptionType;
var PropertyPaneDropdown_1 = __webpack_require__(40);
exports.PropertyPaneDropdown = PropertyPaneDropdown_1.PropertyPaneDropdown;
var PropertyPaneHorizontalRule_1 = __webpack_require__(41);
exports.PropertyPaneHorizontalRule = PropertyPaneHorizontalRule_1.PropertyPaneHorizontalRule;
var PropertyPaneLabel_1 = __webpack_require__(42);
exports.PropertyPaneLabel = PropertyPaneLabel_1.PropertyPaneLabel;
var PropertyPaneLink_1 = __webpack_require__(43);
exports.PropertyPaneLink = PropertyPaneLink_1.PropertyPaneLink;
var PropertyPaneSlider_1 = __webpack_require__(44);
exports.PropertyPaneSlider = PropertyPaneSlider_1.PropertyPaneSlider;
var PropertyPaneTextField_1 = __webpack_require__(45);
exports.PropertyPaneTextField = PropertyPaneTextField_1.PropertyPaneTextField;
var PropertyPaneToggle_1 = __webpack_require__(46);
exports.PropertyPaneToggle = PropertyPaneToggle_1.PropertyPaneToggle;
var BasePropertyPaneControl_1 = __webpack_require__(33);
exports.BasePropertyPaneControl = BasePropertyPaneControl_1.default;
var _Animations_1 = __webpack_require__(17);
exports._Animations = _Animations_1.default;


/***/ })
/******/ ])}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));;


/***/ })
/******/ ])});;
//# sourceMappingURL=sp-webpart-base_en-us.js.map
(function(){
if (!window.__setWebpackPublicPathLoaderSrcRegistry__) window.__setWebpackPublicPathLoaderSrcRegistry__={};
var scripts = document.getElementsByTagName('script');
if (scripts && scripts.length) {
  for (var i = 0; i < scripts.length; i++) {
    if (!scripts[i]) continue;
    var path = scripts[i].getAttribute('src');
    if (path) window.__setWebpackPublicPathLoaderSrcRegistry__[path]=true;
  }
}
})();
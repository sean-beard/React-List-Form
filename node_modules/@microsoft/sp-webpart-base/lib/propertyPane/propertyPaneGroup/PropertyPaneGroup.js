"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var decorators_1 = require("@microsoft/decorators");
var lodash = require("@microsoft/sp-lodash-subset");
var office_ui_fabric_react_1 = require("office-ui-fabric-react");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var PropertyPaneCustomFieldHost_1 = require("../propertyPaneFields/propertyPaneCustomField/PropertyPaneCustomFieldHost");
var IPropertyPaneField_1 = require("../propertyPaneFields/propertyPaneField/IPropertyPaneField");
var PropertyPaneGroup_module_scss_1 = require("./PropertyPaneGroup.module.scss");
var Strings_resx_1 = require("../loc/Strings.resx");
var PropertyPaneChoiceGroup_module_scss_1 = require("./PropertyPaneChoiceGroup.module.scss");
var propertyPaneGroupInstance = 0;
var PropertyPaneGroup = (function (_super) {
    __extends(PropertyPaneGroup, _super);
    function PropertyPaneGroup(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isDetailsShown: true,
            id: "PropertyPaneGroup-" + propertyPaneGroupInstance++
        };
        _this._onHeaderClicked = _this._onHeaderClicked.bind(_this);
        return _this;
    }
    PropertyPaneGroup_1 = PropertyPaneGroup;
    PropertyPaneGroup._getCheckedStatus = function (propValue, groupField) {
        return (propValue !== undefined && propValue !== null) ? propValue : groupField.properties.checked;
    };
    PropertyPaneGroup.prototype.componentWillMount = function () {
        this.setState({
            isDetailsShown: !this.props.isCollapsed
        });
    };
    PropertyPaneGroup.prototype.componentWillReceiveProps = function (props) {
        if (props.groupFields &&
            props.groupFields.some(function (groupField) { return groupField.shouldFocus || false; })) {
            this.setState({
                isDetailsShown: true
            });
        }
        else {
            var isDetailsShown = undefined;
            if (this.props.propertyPanePagesStateMap[this.props.pageNumber] &&
                this.props.groupName) {
                isDetailsShown = this.props.propertyPanePagesStateMap[this.props.pageNumber][this.props.groupName];
            }
            this.setState({
                isDetailsShown: (isDetailsShown !== undefined) ? isDetailsShown : !props.isCollapsed
            });
        }
    };
    PropertyPaneGroup.prototype.componentDidMount = function () {
        this._setFocus();
    };
    PropertyPaneGroup.prototype.componentDidUpdate = function () {
        this._setFocus();
    };
    PropertyPaneGroup.prototype.render = function () {
        this._keys = {}; 
        this._elementRefs = {}; 
        return (React.createElement("div", null,
            this._renderGroupName(),
            this._renderGroupContent()));
    };
    PropertyPaneGroup.prototype._setFocus = function () {
        var _this = this;
        setTimeout(function () {
            if (_this._focusElementKey) {
                var nextFocusedElement = _this._elementRefs[_this._focusElementKey];
                if (nextFocusedElement && nextFocusedElement.focus) {
                    nextFocusedElement.focus();
                    _this._focusElementKey = undefined;
                }
            }
        }, 0);
    };
    PropertyPaneGroup.prototype._renderGroupName = function () {
        var groupNameElem = undefined; 
        var rtl = document.dir === 'rtl';
        if (!this.props.displayGroupsAsAccordion) {
            if (this.props.groupName) {
                groupNameElem = (React.createElement("div", { className: office_ui_fabric_react_1.css(PropertyPaneGroup_module_scss_1.default.propertyPaneGroupHeaderNoAccordion, 'ms-font-m', 'ms-fontWeight-semibold') }, this.props.groupName));
            }
        }
        else {
            groupNameElem = (React.createElement("div", { className: PropertyPaneGroup_module_scss_1.default.propertyPaneGroupHeaderWithAccordion },
                React.createElement("button", { className: office_ui_fabric_react_1.css(PropertyPaneGroup_module_scss_1.default.propertyPaneGroupHeader, 'ms-font-m', 'ms-fontWeight-semibold'), "aria-expanded": this.state.isDetailsShown, onClick: this._onHeaderClicked },
                    React.createElement("i", { className: this.state.isDetailsShown ?
                            office_ui_fabric_react_1.css(PropertyPaneGroup_module_scss_1.default.propertyPaneGroupHeaderIcon, 'ms-Icon', 'ms-Icon--ChevronDown') :
                            office_ui_fabric_react_1.css(PropertyPaneGroup_module_scss_1.default.propertyPaneGroupHeaderIcon, 'ms-Icon', rtl ? 'ms-Icon--ChevronLeft' : 'ms-Icon--ChevronRight') }),
                    React.createElement("div", { className: PropertyPaneGroup_module_scss_1.default.propertyPaneGroupHeaderText }, this.props.groupName))));
        }
        return groupNameElem;
    };
    PropertyPaneGroup.prototype._renderGroupContent = function () {
        var _this = this;
        if (this.state.isDetailsShown) {
            return (React.createElement("div", { className: PropertyPaneGroup_module_scss_1.default.propertyPaneGroupContent }, this.props.groupFields.map(function (groupField) { return _this._renderGroupField(groupField); })));
        }
        return undefined; 
    };
    PropertyPaneGroup.prototype._renderGroupField = function (groupField) {
        var _this = this;
        var propValue = lodash.get(this.props.properties, groupField.targetProperty);
        var groupFieldElement;
        var key = '';
        if (groupField.type === IPropertyPaneField_1.PropertyPaneFieldType.Custom) {
            sp_core_library_1.Validate.isNonemptyString(groupField.properties.key, 'Custom field key');
            var customField = groupField;
            key = customField.type + "-" + customField.properties.key;
        }
        else {
            key = groupField.type + "-" + (groupField.targetProperty || '');
        }
        var keyIndex = this._keys[key] || 0;
        this._keys[key] = keyIndex + 1;
        key += "-" + keyIndex;
        if (groupField.shouldFocus) {
            this._focusElementKey = key;
        }
        var setRef = function (instance) {
            _this._elementRefs[key] = instance; 
            if (typeof groupField.properties.ref === 'function') {
                groupField.properties.ref(instance);
            }
        };
        switch (groupField.type) {
            case IPropertyPaneField_1.PropertyPaneFieldType.Custom:
                groupFieldElement = React.createElement(PropertyPaneCustomFieldHost_1.default, __assign({}, groupField.properties, { onChanged: function (targetProperty, value) {
                        if (_this.props.setEntryState) {
                            _this.props.setEntryState(targetProperty, true);
                        }
                        if (_this.props.onChange) {
                            _this.props.onChange(targetProperty, value);
                        }
                    } }));
                break;
            case IPropertyPaneField_1.PropertyPaneFieldType.Toggle:
                groupFieldElement =
                    React.createElement(office_ui_fabric_react_1.Toggle, __assign({}, groupField.properties, { componentRef: setRef, checked: PropertyPaneGroup_1._getCheckedStatus(propValue, groupField), onText: groupField.properties.onText || Strings_resx_1.default.ToggleOnText, offText: groupField.properties.offText || Strings_resx_1.default.ToggleOffText, onChanged: function (value) {
                            _this._onChange(groupField, value);
                        } }));
                break;
            case IPropertyPaneField_1.PropertyPaneFieldType.TextField:
                var textFieldValue = propValue || groupField.properties.value || '';
                groupFieldElement = React.createElement(office_ui_fabric_react_1.TextField, __assign({}, groupField.properties, { componentRef: setRef, value: textFieldValue, onChanged: function (value) {
                        if (!groupField.properties.onGetErrorMessage) {
                            _this._onChange(groupField, value);
                        }
                    }, onNotifyValidationResult: function (errorMessage, value) {
                        return _this._onNotifyValidationResult(errorMessage, value, groupField, _this.props.setEntryState);
                    } }));
                break;
            case IPropertyPaneField_1.PropertyPaneFieldType.Dropdown:
                var dropdownOptions = groupField.properties.options
                    ? groupField.properties.options.map(function (option) { return ({
                        key: option.key,
                        index: option.index,
                        text: option.text,
                        itemType: option.type || office_ui_fabric_react_1.DropdownMenuItemType.Normal
                    }); })
                    : [];
                groupFieldElement = React.createElement(office_ui_fabric_react_1.Dropdown, __assign({}, groupField.properties, { componentRef: setRef, selectedKey: propValue || groupField.properties.selectedKey, disabled: groupField.properties.isDisabled || groupField.properties.disabled, ariaLabel: groupField.properties.ariaLabel, label: groupField.properties.label, options: dropdownOptions, onChanged: function (option, index) {
                        _this._onDropDownChange(groupField, option, index);
                    } }));
                break;
            case IPropertyPaneField_1.PropertyPaneFieldType.CheckBox:
                groupFieldElement = React.createElement(office_ui_fabric_react_1.Checkbox, __assign({}, groupField.properties, { componentRef: setRef, label: groupField.properties.text, checked: PropertyPaneGroup_1._getCheckedStatus(propValue, groupField), disabled: this._isDisabled(groupField), onChange: function (ev, isChecked) {
                        _this._onChange(groupField, isChecked);
                    } }));
                break;
            case IPropertyPaneField_1.PropertyPaneFieldType.Label:
                groupFieldElement = React.createElement(office_ui_fabric_react_1.Label, __assign({}, groupField.properties), groupField.properties.text);
                break;
            case IPropertyPaneField_1.PropertyPaneFieldType.Slider:
                groupFieldElement =
                    React.createElement(office_ui_fabric_react_1.Slider, __assign({}, groupField.properties, { componentRef: setRef, value: propValue || groupField.properties.value, onChange: function (value) {
                            _this._onChange(groupField, value);
                        } }));
                break;
            case IPropertyPaneField_1.PropertyPaneFieldType.ChoiceGroup:
                groupField.properties.options.forEach(function (option) {
                    if (propValue !== undefined && propValue !== '' && propValue !== null) {
                        option.checked = option.key === propValue;
                    }
                    if (option.hasOwnProperty('disabled') && option.disabled !== undefined) {
                        option.disabled = option.disabled;
                    }
                    if (!option.onRenderLabel && (option.imageSrc || option.iconProps)) {
                        option.onRenderLabel = function (choice) {
                            return (React.createElement(office_ui_fabric_react_1.TooltipHost, { overflowMode: office_ui_fabric_react_1.TooltipOverflowMode.Parent, calloutProps: { gapSpace: 65 }, content: choice.text },
                                React.createElement("span", { id: choice.labelId, className: 'ms-label' }, choice.text)));
                        };
                    }
                });
                var options = groupField.properties.options.map(function (option) {
                    var propertyPaneChoiceGroupOptionIconProps = option.iconProps, otherOptions = __rest(option, ["iconProps"]);
                    var iconOption = propertyPaneChoiceGroupOptionIconProps
                        ? {
                            iconProps: {
                                iconName: propertyPaneChoiceGroupOptionIconProps.officeFabricIconFontName
                            }
                        }
                        : undefined;
                    var themableSvg = option.themableSvg;
                    var renderOption = themableSvg ?
                        {
                            onRenderField: _this._renderChoiceGroupWithSvg
                        }
                        : undefined;
                    return lodash.merge({}, otherOptions, iconOption, renderOption);
                });
                groupFieldElement =
                    React.createElement(office_ui_fabric_react_1.ChoiceGroup, __assign({}, groupField.properties, { componentRef: setRef, options: options, className: PropertyPaneGroup_module_scss_1.default.propertyPaneChoiceGroup, onChanged: function (checkedOption) {
                            _this._onChoiceGroupChange(groupField, checkedOption);
                        } }));
                break;
            case IPropertyPaneField_1.PropertyPaneFieldType.Button:
                var handleClick = function () {
                    var newValue = groupField.properties.onClick(propValue); 
                    _this._onChange(groupField, newValue);
                };
                groupFieldElement =
                    React.createElement(office_ui_fabric_react_1.Button, __assign({}, groupField.properties, { componentRef: setRef, onClick: handleClick, ariaLabel: groupField.properties.text }), groupField.properties.text);
                break;
            case IPropertyPaneField_1.PropertyPaneFieldType.HorizontalRule:
                groupFieldElement =
                    React.createElement("hr", __assign({}, groupField.properties));
                break;
            case IPropertyPaneField_1.PropertyPaneFieldType.Link:
                groupFieldElement = React.createElement(office_ui_fabric_react_1.Link, __assign({ componentRef: setRef }, groupField.properties), groupField.properties.text);
                break;
            default:
                groupFieldElement = null; 
        }
        return React.createElement("div", { key: key, className: PropertyPaneGroup_module_scss_1.default.propertyPaneGroupField },
            " ",
            groupFieldElement,
            " ");
    };
    PropertyPaneGroup.prototype._renderChoiceGroupWithSvg = function (props) {
        var themableSvg = props.themableSvg;
        return (React.createElement("label", { htmlFor: props.id, className: office_ui_fabric_react_1.css('ms-ChoiceField-field', PropertyPaneChoiceGroup_module_scss_1.default.field, (_a = {},
                _a['ms-ChoiceField-field--image ' + PropertyPaneChoiceGroup_module_scss_1.default.fieldIsImage] = !!props.imageSrc,
                _a['ms-ChoiceField--icon ' + PropertyPaneChoiceGroup_module_scss_1.default.fieldIsIcon] = !!props.iconProps,
                _a['is-checked ' + PropertyPaneChoiceGroup_module_scss_1.default.fieldIsChecked] = props.checked,
                _a['is-disabled ' + PropertyPaneChoiceGroup_module_scss_1.default.fieldIsDisabled] = props.disabled,
                _a)) },
            props.imageSrc && (React.createElement("div", { className: office_ui_fabric_react_1.css('ms-ChoiceField-innerField', PropertyPaneChoiceGroup_module_scss_1.default.innerField) },
                React.createElement("div", { className: office_ui_fabric_react_1.css('ms-ChoiceField-imageWrapper', PropertyPaneChoiceGroup_module_scss_1.default.imageWrapper, (_b = {},
                        _b['is-hidden ' + PropertyPaneChoiceGroup_module_scss_1.default.imageWrapperIsHidden] = props.checked,
                        _b)) },
                    React.createElement("div", { className: office_ui_fabric_react_1.css('ms-Image', PropertyPaneChoiceGroup_module_scss_1.default.imageRoot), style: {
                            width: props.imageSize ? props.imageSize.width : undefined,
                            height: props.imageSize ? props.imageSize.height : undefined
                        } }, themableSvg)),
                React.createElement("div", { className: office_ui_fabric_react_1.css('ms-ChoiceField-imageWrapper', PropertyPaneChoiceGroup_module_scss_1.default.imageWrapper, (_c = {},
                        _c['is-hidden ' + PropertyPaneChoiceGroup_module_scss_1.default.imageWrapperIsHidden] = !props.checked,
                        _c)) },
                    React.createElement("div", { className: office_ui_fabric_react_1.css('ms-Image', PropertyPaneChoiceGroup_module_scss_1.default.imageRoot), style: {
                            width: props.imageSize ? props.imageSize.width : undefined,
                            height: props.imageSize ? props.imageSize.height : undefined
                        } }, themableSvg)))),
            props.iconProps &&
                React.createElement("div", { className: office_ui_fabric_react_1.css('ms-ChoiceField-innerField', PropertyPaneChoiceGroup_module_scss_1.default.innerField) },
                    React.createElement("div", { className: office_ui_fabric_react_1.css('ms-ChoiceField-iconWrapper', PropertyPaneChoiceGroup_module_scss_1.default.iconWrapper) },
                        React.createElement(office_ui_fabric_react_1.Icon, __assign({}, props.iconProps)))),
            props.imageSrc || props.iconProps
                ? (React.createElement("div", { className: office_ui_fabric_react_1.css('ms-ChoiceField-labelWrapper', PropertyPaneChoiceGroup_module_scss_1.default.labelWrapper) },
                    React.createElement("span", { id: props.labelId, className: 'ms-Label' }, props.text))) : React.createElement("span", { id: props.labelId, className: 'ms-Label' }, props.text)));
        var _a, _b, _c;
    };
    PropertyPaneGroup.prototype._onChange = function (groupField, value) {
        if (this.props.onChange) {
            this.props.onChange(groupField.targetProperty, value);
        }
        if (!groupField.properties.onGetErrorMessage && this.props.setEntryState) {
            this.props.setEntryState(groupField.targetProperty, true);
        }
    };
    PropertyPaneGroup.prototype._onChoiceGroupChange = function (groupField, checkedOption) {
        groupField.properties.options.forEach(function (option) {
            return option.checked = option.key === checkedOption.key;
        });
        this._onChange(groupField, checkedOption.key);
    };
    PropertyPaneGroup.prototype._onDropDownChange = function (groupField, selectedItem, selectedIndex) {
        if (this.props.onChange) {
            this.props.onChange(groupField.targetProperty, selectedItem.key);
        }
    };
    PropertyPaneGroup.prototype._onHeaderClicked = function () {
        if (this.props.groupName && this.props.groupName.length > 0) {
            this.props.propertyPaneGroupStateChanged(this.props.pageNumber, this.props.groupName, !this.state.isDetailsShown);
        }
        this.setState({
            isDetailsShown: !this.state.isDetailsShown
        });
    };
    PropertyPaneGroup.prototype._onNotifyValidationResult = function (errorMessage, value, groupField,  setEntryState) {
        if (setEntryState) {
            setEntryState(groupField.targetProperty, !errorMessage);
        }
        this._onChange(groupField, value);
    };
    PropertyPaneGroup.prototype._isDisabled = function (groupField) {
        var disabled = groupField.properties.disabled;
        if (disabled === undefined) {
            if (groupField.properties.hasOwnProperty('isDisabled') && groupField.properties.isDisabled !== undefined) {
                disabled = groupField.properties.isDisabled;
            }
            else if (groupField.properties.hasOwnProperty('enabled') && groupField.properties.enabled !== undefined) {
                disabled = !groupField.properties.enabled;
            }
            else if (groupField.properties.hasOwnProperty('isEnabled') && groupField.properties.isEnabled !== undefined) {
                disabled = !groupField.properties.isEnabled;
            }
        }
        return disabled;
    };
    __decorate([
        office_ui_fabric_react_1.autobind
    ], PropertyPaneGroup.prototype, "_renderChoiceGroupWithSvg", null);
    PropertyPaneGroup = PropertyPaneGroup_1 = __decorate([
        decorators_1.sealed
    ], PropertyPaneGroup);
    return PropertyPaneGroup;
    var PropertyPaneGroup_1;
}(React.Component));
exports.default = PropertyPaneGroup;

/**
 * A singleton class to manage web part _Animations. The class triggers pre-configured reveal animation on web parts
 * when they come in view in a modern page. It uses ScrollReveal lib to accomplish this, which is defer loaded when
 * _Animations.init() is called. Use _Animations.reveal() to register the web part container elements; this
 * method can be used before or after calling init. For best outcome call the init() as soon after PLT/loading glass.
 *
 * @internal
 */
export default class _Animations {
    private static _instance;
    private _scrollReveal;
    private _pendingElements;
    /**
    * Get singleton instance of _Animations class
    */
    static readonly instance: _Animations;
    /**
     * Initiates loading of deferred scrollReveal lib, and when done also calls reveal on elements which are pending.
     * To be called right after PLT/glass has been loaded.
     */
    init(): void;
    /**
     * Registers elements for scroll reveal animation. If scrollReveal lib is not yet loaded we track the elements by
     * adding it to a pending list, but if itâ€™s loaded we call scrollReveal.reveal() right away.
     *
     * @param elem - The container element on which we want scroll reveal animation. In our case, container of a web part
     */
    reveal(elem: HTMLElement): void;
    /**
    * Private constructor of singleton class
    */
    private constructor();
    private _ensureScrollRevealLoaded();
}

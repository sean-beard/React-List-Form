define("c07208f0-ea3b-4c1a-9965-ac1b825211a6_1.2.0", ["@microsoft/decorators","@microsoft/sp-core-library","@microsoft/sp-lodash-subset","@ms/sp-telemetry"], function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 30);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ODataVersion = (function () {
    function ODataVersion(versionString) {
        this._versionString = versionString;
    }
    ODataVersion.tryParseFromHeaders = function (headers) {
        var oDataVersion;
        headers.forEach(function (value, name) {
            if (name.toUpperCase() === 'ODATA-VERSION') {
                oDataVersion = value.trim();
            }
        });
        if (oDataVersion === '3.0') {
            return ODataVersion.v3;
        }
        else if (oDataVersion === '4.0') {
            return ODataVersion.v4;
        }
        else if (oDataVersion) {
            throw new Error('Unsupported OData-Version header: ' + oDataVersion);
        }
        return undefined;
    };
    ODataVersion.prototype.toString = function () {
        return this._versionString;
    };
    ODataVersion.v3 = new ODataVersion('3.0');
    ODataVersion.v4 = new ODataVersion('4.0');
    return ODataVersion;
}());
exports.default = ODataVersion;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(1);
var decorators_1 = __webpack_require__(0);
var HttpClientConfiguration_1 = __webpack_require__(4);
var HttpClientResponse_1 = __webpack_require__(5);
var HttpClientHelper_1 = __webpack_require__(13);
var HttpClient = (function () {
    function HttpClient(serviceScope) {
        this._httpClientBase = new HttpClientHelper_1.default(serviceScope, 'HttpClient');
    }
    HttpClient_1 = HttpClient;
    HttpClient.prototype.fetch = function (url, configuration, options) {
        return this._httpClientBase.fetchCore(configuration, new Request(url, options)).then(function (response) {
            return new HttpClientResponse_1.default(response);
        });
    };
    HttpClient.prototype.get = function (url, configuration, options) {
        return this.fetch(url, configuration, this._httpClientBase.overrideHttpMethod(options, 'GET'));
    };
    HttpClient.prototype.post = function (url, configuration, options) {
        return this.fetch(url, configuration, this._httpClientBase.overrideHttpMethod(options, 'POST'));
    };
    HttpClient.configurations = HttpClientConfiguration_1.predefinedConfigurations;
    HttpClient.serviceKey = sp_core_library_1.ServiceKey.create('sp-http:HttpClient', HttpClient_1);
    HttpClient = HttpClient_1 = __decorate([
        decorators_1.sealed
    ], HttpClient);
    return HttpClient;
    var HttpClient_1;
}());
exports.default = HttpClient;


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(0);
var HttpClientConfiguration = (function () {
    function HttpClientConfiguration(flags, overrideFlags) {
        this.flags = {};
        this.initializeFlags();
        this._mergeFlags(flags);
        if (overrideFlags) {
            this._mergeFlags(overrideFlags);
        }
    }
    HttpClientConfiguration.prototype.overrideWith = function (sourceFlags) {
        return new HttpClientConfiguration(this.flags, sourceFlags);
    };
    HttpClientConfiguration.prototype.initializeFlags = function () {
    };
    HttpClientConfiguration.prototype._mergeFlags = function (source) {
        for (var _i = 0, _a = Object.keys(this.flags); _i < _a.length; _i++) {
            var key = _a[_i];
            if (source.hasOwnProperty(key)) {
                if (source[key] !== undefined) {
                    this.flags[key] = source[key];
                }
            }
        }
    };
    __decorate([
        decorators_1.virtual
    ], HttpClientConfiguration.prototype, "overrideWith", null);
    __decorate([
        decorators_1.virtual
    ], HttpClientConfiguration.prototype, "initializeFlags", null);
    return HttpClientConfiguration;
}());
exports.default = HttpClientConfiguration;
exports.predefinedConfigurations = {
    v1: new HttpClientConfiguration({})
};


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(0);
var HttpClientResponse = (function () {
    function HttpClientResponse(response) {
        this.nativeResponse = response;
    }
    Object.defineProperty(HttpClientResponse.prototype, "body", {
        get: function () { return this.nativeResponse.body; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "bodyUsed", {
        get: function () { return this.nativeResponse.bodyUsed; },
        enumerable: true,
        configurable: true
    });
    HttpClientResponse.prototype.arrayBuffer = function () { return this.nativeResponse.arrayBuffer(); };
    HttpClientResponse.prototype.blob = function () { return this.nativeResponse.blob(); };
    HttpClientResponse.prototype.formData = function () { return this.nativeResponse.formData; }; 
    HttpClientResponse.prototype.json = function () { return this.nativeResponse.json(); };
    HttpClientResponse.prototype.text = function () { return this.nativeResponse.text(); };
    Object.defineProperty(HttpClientResponse.prototype, "type", {
        get: function () { return this.nativeResponse.type; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "url", {
        get: function () { return this.nativeResponse.url; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "status", {
        get: function () { return this.nativeResponse.status; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "ok", {
        get: function () { return this.nativeResponse.ok; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "statusText", {
        get: function () { return this.nativeResponse.statusText; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpClientResponse.prototype, "headers", {
        get: function () { return this.nativeResponse.headers; },
        enumerable: true,
        configurable: true
    });
    HttpClientResponse.prototype.clone = function () {
        return new HttpClientResponse(this.nativeResponse.clone());
    };
    __decorate([
        decorators_1.virtual
    ], HttpClientResponse.prototype, "clone", null);
    return HttpClientResponse;
}());
exports.default = HttpClientResponse;


/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_6__;

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_7__;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(7);
var sp_core_library_1 = __webpack_require__(1);
var FetchProvider_1 = __webpack_require__(12);
var DigestCache = (function () {
    function DigestCache(serviceScope) {
        var _this = this;
        this._digestsByUrl = new Map();
        serviceScope.whenFinished(function () {
            _this._fetchProvider = serviceScope.consume(FetchProvider_1.fetchProviderServiceKey);
            _this._timeProvider = serviceScope.consume(sp_core_library_1.TimeProvider.serviceKey);
        });
    }
    DigestCache.prototype.fetchDigest = function (webUrl) {
        var _this = this;
        var normalizedWebUrl = sp_core_library_1.UrlUtilities.removeEndSlash(webUrl);
        var cachedDigest = this._digestsByUrl.get(normalizedWebUrl);
        if (cachedDigest) {
            var timestamp = this._timeProvider.getTimestamp();
            if (timestamp < cachedDigest.expirationTimestamp) {
                sp_telemetry_1._TraceLogger.logVerbose(DigestCache._logSource, 'DigestCache: Reusing cached digest.  Expiration: ' + cachedDigest.expirationTimestamp);
                return Promise.resolve(cachedDigest.value);
            }
        }
        var digestUrl = normalizedWebUrl + '/_api/contextinfo';
        var rawRequest = new Request(digestUrl, {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-type': 'application/json;odata=verbose;charset=utf-8'
            },
            credentials: 'same-origin',
            cache: 'no-cache'
        });
        return this._fetchProvider.fetch(rawRequest).then(function (response) {
            return response.json();
        }).then(function (responseObject) {
            var digestValue = responseObject.FormDigestValue;
            var seconds = responseObject.FormDigestTimeoutSeconds;
            var expirationTimeMs = _this._timeProvider.getTimestamp() + 1000 * seconds;
            _this.addDigestToCache(normalizedWebUrl, digestValue, expirationTimeMs);
            sp_telemetry_1._TraceLogger.logVerbose(DigestCache._logSource, 'DigestCache: Fetched new digest');
            return digestValue;
        });
    };
    DigestCache.prototype.addDigestToCache = function (webUrl, digestValue, expirationTimestamp) {
        var normalizedWebUrl = sp_core_library_1.UrlUtilities.removeEndSlash(webUrl);
        var newCachedDigest = {
            value: digestValue,
            expirationTimestamp: expirationTimestamp - DigestCache.EXPIRATION_SLOP_MS
        };
        this._digestsByUrl.set(normalizedWebUrl, newCachedDigest);
    };
    DigestCache.prototype.clearDigest = function (webUrl) {
        var normalizedWebUrl = sp_core_library_1.UrlUtilities.removeEndSlash(webUrl);
        var found = this._digestsByUrl.delete(normalizedWebUrl);
        sp_telemetry_1._TraceLogger.logVerbose(DigestCache._logSource, "DigestCache: Requested to clear cache entry: " + (found ? 'found' : 'not found'));
        return found;
    };
    DigestCache.prototype.clearAllDigests = function () {
        this._digestsByUrl.clear();
    };
    DigestCache.serviceKey = sp_core_library_1.ServiceKey.create('sp-client-base:DigestCache', DigestCache);
    DigestCache.EXPIRATION_SLOP_MS = 3000;
    DigestCache._logSource = sp_telemetry_1._LogSource.create('DigestCache');
    return DigestCache;
}());
exports.default = DigestCache;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(0);
var lodash = __webpack_require__(6);
var sp_telemetry_1 = __webpack_require__(7);
var sp_core_library_1 = __webpack_require__(1);
var DigestCache_1 = __webpack_require__(8);
var SPHttpClientConfiguration_1 = __webpack_require__(21);
var SPHttpClientResponse_1 = __webpack_require__(11);
var SPHttpClientBatch_1 = __webpack_require__(19);
var SPHttpClientHelper_1 = __webpack_require__(14);
var ODataVersion_1 = __webpack_require__(2);
var SPHttpClient = (function () {
    function SPHttpClient(serviceScope) {
        var _this = this;
        this._spHttpClientHelper = new SPHttpClientHelper_1.default(serviceScope, 'SPHttpClient');
        this._serviceScope = serviceScope;
        this._serviceScope.whenFinished(function () {
            _this._digestCache = serviceScope.consume(DigestCache_1.default.serviceKey);
            _this._randomNumberGenerator = serviceScope.consume(sp_core_library_1.RandomNumberGenerator.serviceKey);
            _this._parentSource = serviceScope.consume(sp_telemetry_1._logSourceServiceKey);
        });
    }
    SPHttpClient_1 = SPHttpClient;
    SPHttpClient.getWebUrlFromRequestUrl = function (requestUrl) {
        var segmentIndex = -1;
        var upperCaseUrl = requestUrl.toUpperCase();
        for (var _i = 0, _a = SPHttpClient_1._reservedUrlSegments; _i < _a.length; _i++) {
            var reservedUrlSegment = _a[_i];
            segmentIndex = upperCaseUrl.indexOf(reservedUrlSegment);
            if (segmentIndex >= 0) {
                return requestUrl.substr(0, segmentIndex);
            }
        }
        throw new Error('Unable to determine web URL');
    };
    SPHttpClient.prototype.fetch = function (url, configuration, options) {
        var _this = this;
        if (!options) {
            options = {};
        }
        var modifiedOptions = lodash.clone(options);
        if (configuration.defaultSameOriginCredentials) {
            if (!options.credentials) {
                modifiedOptions.credentials = 'same-origin';
            }
        }
        var headers = SPHttpClientHelper_1.default.cloneHeaders(options);
        modifiedOptions.headers = headers;
        if (configuration.defaultODataVersion) {
            if (!headers.has('OData-Version')) {
                headers.append('OData-Version', configuration.defaultODataVersion.toString());
            }
        }
        var oDataVersion = ODataVersion_1.default.tryParseFromHeaders(headers);
        SPHttpClientHelper_1.default.applyDefaultHeaders(headers, configuration, options, oDataVersion);
        if (configuration.requestDigest) {
            if (options.method) {
                var method = options.method.toUpperCase();
                if (method !== 'GET' && method !== 'HEAD' && method !== 'OPTIONS') {
                    if (!headers.has('X-RequestDigest')) {
                        var webUrl = options.webUrl || SPHttpClient_1.getWebUrlFromRequestUrl(url);
                        var promise = this._digestCache.fetchDigest(webUrl)
                            .then(function (digest) {
                            headers.append('X-RequestDigest', digest);
                            return _this._fetchWithInstrumentation(configuration, new Request(url, modifiedOptions));
                        });
                        return SPHttpClientHelper_1.default.handleAuthenticationErrors(promise, webUrl, this._digestCache)
                            .then(function (response) {
                            return new SPHttpClientResponse_1.default(response);
                        });
                    }
                }
            }
        }
        return this._fetchWithInstrumentation(configuration, new Request(url, modifiedOptions))
            .then(function (response) {
            return new SPHttpClientResponse_1.default(response);
        });
    };
    SPHttpClient.prototype.get = function (url, configuration, options) {
        return this.fetch(url, configuration, this._spHttpClientHelper.overrideHttpMethod(options, 'GET'));
    };
    SPHttpClient.prototype.post = function (url, configuration, options) {
        return this.fetch(url, configuration, this._spHttpClientHelper.overrideHttpMethod(options, 'POST'));
    };
    SPHttpClient.prototype.beginBatch = function (batchCreationOptions) {
        return new SPHttpClientBatch_1.default(this._serviceScope, batchCreationOptions);
    };
    SPHttpClient.prototype._fetchWithInstrumentation = function (configuration, request) {
        var _this = this;
        var tag = this._performanceTag;
        sp_telemetry_1._PerformanceLogger.startMarkForApi(tag);
        var qosMonitor = new sp_telemetry_1._QosMonitor('SPHttpClient');
        return this._spHttpClientHelper.fetchCore(configuration, request).then(function (response) {
            sp_telemetry_1._PerformanceLogger.endMarkForApi(tag, _this._logSourceId, request.url, response);
            if (response.status >= 200 && response.status <= 299) {
                qosMonitor.writeSuccess({ source: _this._logSourceId });
            }
            else if (response.status >= 300 && response.status <= 499) {
                qosMonitor.writeExpectedFailure('Fetch', undefined, { source: _this._logSourceId, responseStatus: response.status });
            }
            else {
                qosMonitor.writeUnexpectedFailure('Fetch', undefined, { source: _this._logSourceId, responseStatus: response.status });
            }
            return response;
        }).catch(function (error) {
            qosMonitor.writeUnexpectedFailure('Fetch', error, { source: _this._logSourceId });
            throw error;
        });
    };
    Object.defineProperty(SPHttpClient.prototype, "_performanceTag", {
        get: function () {
            var randomSuffix = Math.floor(this._randomNumberGenerator.generate() * 100000).toString();
            return this._logSourceId + "." + randomSuffix;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPHttpClient.prototype, "_logSourceId", {
        get: function () {
            if (this._parentSource.isEmpty()) {
                return SPHttpClient_1._logSource.id;
            }
            return this._parentSource.id;
        },
        enumerable: true,
        configurable: true
    });
    SPHttpClient.configurations = SPHttpClientConfiguration_1.predefinedConfigurations;
    SPHttpClient.serviceKey = sp_core_library_1.ServiceKey.create('sp-http:SPHttpClient', SPHttpClient_1);
    SPHttpClient._logSource = sp_telemetry_1._LogSource.create('spHttpClient');
    SPHttpClient._reservedUrlSegments = [
        '/_API/',
        '/_LAYOUTS/',
        '/_VTI_BIN/'
    ];
    SPHttpClient = SPHttpClient_1 = __decorate([
        decorators_1.sealed
    ], SPHttpClient);
    return SPHttpClient;
    var SPHttpClient_1;
}());
exports.default = SPHttpClient;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(0);
var HttpClientConfiguration_1 = __webpack_require__(4);
var SPHttpClientCommonConfiguration = (function (_super) {
    __extends(SPHttpClientCommonConfiguration, _super);
    function SPHttpClientCommonConfiguration(flags, overrideFlags) {
        return _super.call(this, flags, overrideFlags) || this;
    }
    SPHttpClientCommonConfiguration.prototype.overrideWith = function (sourceFlags) {
        return new SPHttpClientCommonConfiguration(this.flags, sourceFlags);
    };
    Object.defineProperty(SPHttpClientCommonConfiguration.prototype, "jsonRequest", {
        get: function () {
            return this.flags.jsonRequest;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPHttpClientCommonConfiguration.prototype, "jsonResponse", {
        get: function () {
            return this.flags.jsonResponse;
        },
        enumerable: true,
        configurable: true
    });
    SPHttpClientCommonConfiguration.prototype.initializeFlags = function () {
        _super.prototype.initializeFlags.call(this);
        this.flags.jsonRequest = false;
        this.flags.jsonResponse = false;
    };
    __decorate([
        decorators_1.override
    ], SPHttpClientCommonConfiguration.prototype, "overrideWith", null);
    __decorate([
        decorators_1.override
    ], SPHttpClientCommonConfiguration.prototype, "initializeFlags", null);
    return SPHttpClientCommonConfiguration;
}(HttpClientConfiguration_1.default));
exports.default = SPHttpClientCommonConfiguration;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(0);
var HttpClientResponse_1 = __webpack_require__(5);
var SPHttpClientResponse = (function (_super) {
    __extends(SPHttpClientResponse, _super);
    function SPHttpClientResponse(response) {
        return _super.call(this, response) || this;
    }
    SPHttpClientResponse_1 = SPHttpClientResponse;
    SPHttpClientResponse.prototype.clone = function () {
        return new SPHttpClientResponse_1(this.nativeResponse.clone());
    };
    __decorate([
        decorators_1.override
    ], SPHttpClientResponse.prototype, "clone", null);
    SPHttpClientResponse = SPHttpClientResponse_1 = __decorate([
        decorators_1.sealed
    ], SPHttpClientResponse);
    return SPHttpClientResponse;
    var SPHttpClientResponse_1;
}(HttpClientResponse_1.default));
exports.default = SPHttpClientResponse;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(1);
var FetchProvider = (function () {
    function FetchProvider(serviceScope) {
    }
    FetchProvider.prototype.fetch = function (request) {
        return window.fetch(request);
    };
    return FetchProvider;
}());
exports.default = FetchProvider;
exports.fetchProviderServiceKey = sp_core_library_1.ServiceKey.create('sp-client-base:FetchProvider', FetchProvider);


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(1);
var lodash = __webpack_require__(6);
var FetchProvider_1 = __webpack_require__(12);
var HttpClientHelper = (function () {
    function HttpClientHelper(serviceScope, logSource) {
        var _this = this;
        this._serviceScope = serviceScope;
        this._logSource = logSource;
        serviceScope.whenFinished(function () {
            _this._fetchProvider = serviceScope.consume(FetchProvider_1.fetchProviderServiceKey);
        });
    }
    HttpClientHelper.prototype.overrideHttpMethod = function (options, httpRequestMethod) {
        var modifiedOptions = lodash.clone(options || {});
        modifiedOptions.method = httpRequestMethod;
        return modifiedOptions;
    };
    HttpClientHelper.prototype.fetchCore = function (configuration, request) {
        sp_core_library_1.Log.info(this._logSource, request.method + " " + request.url, this._serviceScope);
        return this._fetchProvider.fetch(request);
    };
    return HttpClientHelper;
}());
exports.default = HttpClientHelper;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ODataVersion_1 = __webpack_require__(2);
var HttpClientHelper_1 = __webpack_require__(13);
var SPHttpClientHelper = (function (_super) {
    __extends(SPHttpClientHelper, _super);
    function SPHttpClientHelper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SPHttpClientHelper.cloneHeaders = function (options) {
        var clonedHeaders = new Headers();
        var temp = new Request('', { headers: options.headers || {} });
        temp.headers.forEach(function (value, name) {
            clonedHeaders.append(name, value); 
        });
        return clonedHeaders;
    };
    SPHttpClientHelper.applyDefaultHeaders = function (headers, configuration, options, oDataVersion) {
        if (configuration.jsonRequest) {
            if (options.method && options.method.toUpperCase() !== 'GET') {
                if (!headers.has('Content-Type')) {
                    if (oDataVersion === ODataVersion_1.default.v3) {
                        headers.append('Content-Type', 'application/json;odata=verbose;charset=utf-8');
                    }
                    else if (oDataVersion === ODataVersion_1.default.v4) {
                        headers.append('Content-Type', 'application/json;charset=utf-8');
                    }
                    else {
                        throw new Error('ISPHttpClientConfiguration.jsonRequest is enabled, which requires'
                            + ' the "OData-Version" header to be 3.0 or 4.0');
                    }
                }
            }
        }
        if (configuration.jsonResponse) {
            if (!headers.has('Accept')) {
                if (oDataVersion === ODataVersion_1.default.v3) {
                    headers.append('Accept', 'application/json');
                }
                else if (oDataVersion === ODataVersion_1.default.v4) {
                    headers.append('Accept', 'application/json;odata.metadata=minimal');
                }
                else {
                    throw new Error('ISPHttpClientConfiguration.jsonResponse is enabled, which requires'
                        + ' the "OData-Version" header to be 3.0 or 4.0');
                }
            }
        }
    };
    SPHttpClientHelper.handleAuthenticationErrors = function (promise, webUrl, digestCache) {
        return promise.then(function (response) {
            if (response.status === 403) {
                digestCache.clearDigest(webUrl);
            }
            return response;
        });
    };
    return SPHttpClientHelper;
}(HttpClientHelper_1.default));
exports.default = SPHttpClientHelper;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var HttpClient_1 = __webpack_require__(3);
var HttpClientConfiguration_1 = __webpack_require__(4);
var GraphHttpClientConfiguration = (function (_super) {
    __extends(GraphHttpClientConfiguration, _super);
    function GraphHttpClientConfiguration(flags, overrideFlags) {
        return _super.call(this, flags, overrideFlags) || this;
    }
    return GraphHttpClientConfiguration;
}(HttpClientConfiguration_1.default));
exports.default = GraphHttpClientConfiguration;
exports.predefinedConfigurations = {
    v1: new GraphHttpClientConfiguration(HttpClient_1.default.configurations.v1)
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(1);
var GraphHttpClientContext = (function () {
    function GraphHttpClientContext(serviceScope) {
    }
    GraphHttpClientContext.prototype.initialize = function (webServerRelativeUrl) {
        if (this._isInitialized) {
            throw new Error('GraphHttpClientContext has already been initialized.');
        }
        this._isInitialized = true;
        this._webServerRelativeUrl = webServerRelativeUrl;
    };
    GraphHttpClientContext.prototype.getWebServerRelativeUrl = function () {
        if (!this._isInitialized) {
            throw new Error('This operation cannot be performed until the GraphHttpClientContext is initialized.');
        }
        return this._webServerRelativeUrl;
    };
    GraphHttpClientContext.serviceKey = sp_core_library_1.ServiceKey.create('sp-http:GraphHttpClientContext', GraphHttpClientContext);
    return GraphHttpClientContext;
}());
exports.default = GraphHttpClientContext;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(0);
var HttpClientResponse_1 = __webpack_require__(5);
var GraphHttpClientResponse = (function (_super) {
    __extends(GraphHttpClientResponse, _super);
    function GraphHttpClientResponse(response) {
        return _super.call(this, response) || this;
    }
    GraphHttpClientResponse_1 = GraphHttpClientResponse;
    GraphHttpClientResponse.prototype.clone = function () {
        return new GraphHttpClientResponse_1(this.nativeResponse.clone());
    };
    __decorate([
        decorators_1.override
    ], GraphHttpClientResponse.prototype, "clone", null);
    GraphHttpClientResponse = GraphHttpClientResponse_1 = __decorate([
        decorators_1.sealed
    ], GraphHttpClientResponse);
    return GraphHttpClientResponse;
    var GraphHttpClientResponse_1;
}(HttpClientResponse_1.default));
exports.default = GraphHttpClientResponse;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_client_shared_1 = __webpack_require__(24);
var OAuthUtilityContext_1 = __webpack_require__(28);
var sp_core_library_1 = __webpack_require__(1);
var OAuthTokenProvider = (function () {
    function OAuthTokenProvider(serviceScope) {
        this._tokenUtility = new sp_client_shared_1.OAuthUtility(new OAuthUtilityContext_1.default(serviceScope));
    }
    OAuthTokenProvider.prototype.getOAuthToken = function (resource, webUrl) {
        sp_core_library_1.Validate.isNotNullOrUndefined(resource, 'resource');
        sp_core_library_1.Validate.isNonemptyString(resource, 'resource');
        return this._tokenUtility.getOAuthToken(resource, webUrl);
    };
    OAuthTokenProvider.prototype.clearCachedToken = function (resource) {
        sp_core_library_1.Validate.isNotNullOrUndefined(resource, 'resource');
        sp_core_library_1.Validate.isNonemptyString(resource, 'resource');
        this._tokenUtility.clearCachedToken(resource);
    };
    OAuthTokenProvider.serviceKey = sp_core_library_1.ServiceKey.create('sp-client-shared:OAuthTokenProvider', OAuthTokenProvider);
    return OAuthTokenProvider;
}());
exports.default = OAuthTokenProvider;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var lodash = __webpack_require__(6);
var sp_core_library_1 = __webpack_require__(1);
var BatchedRequest_1 = __webpack_require__(29);
var SPHttpClient_1 = __webpack_require__(9);
var SPHttpClientResponse_1 = __webpack_require__(11);
var FetchProvider_1 = __webpack_require__(12);
var DigestCache_1 = __webpack_require__(8);
var SPHttpClientHelper_1 = __webpack_require__(14);
var ODataVersion_1 = __webpack_require__(2);
var SPHttpClientBatchConfiguration_1 = __webpack_require__(20);
var SPHttpClientBatch = (function () {
    function SPHttpClientBatch(serviceScope, batchCreationOptions) {
        var _this = this;
        this._batchCreationOptions = batchCreationOptions || {};
        this._batchedRequests = [];
        serviceScope.whenFinished(function () {
            _this._fetchProvider = serviceScope.consume(FetchProvider_1.fetchProviderServiceKey);
            _this._randomNumberGenerator = serviceScope.consume(sp_core_library_1.RandomNumberGenerator.serviceKey);
            _this._digestCache = serviceScope.consume(DigestCache_1.default.serviceKey);
        });
    }
    SPHttpClientBatch.prototype.fetch = function (url, configuration, options) {
        if (!options) {
            options = {};
        }
        var modifiedOptions = lodash.clone(options);
        modifiedOptions.headers = SPHttpClientHelper_1.default.cloneHeaders(options);
        SPHttpClientHelper_1.default.applyDefaultHeaders(modifiedOptions.headers, configuration, options, ODataVersion_1.default.v4);
        var request = new Request(url, modifiedOptions);
        var requestUrl = request.url;
        if (!this._webUrl) {
            this._webUrl = SPHttpClient_1.default.getWebUrlFromRequestUrl(requestUrl);
        }
        var batchedRequest = new BatchedRequest_1.default(request);
        this._batchedRequests.push(batchedRequest);
        return batchedRequest.promise;
    };
    SPHttpClientBatch.prototype.get = function (url, configuration, options) {
        var modifiedOptions = lodash.clone(options || {});
        modifiedOptions.method = 'GET';
        return this.fetch(url, configuration, modifiedOptions);
    };
    SPHttpClientBatch.prototype.post = function (url, configuration, options) {
        var modifiedOptions = lodash.clone(options || {});
        modifiedOptions.method = 'POST';
        return this.fetch(url, configuration, modifiedOptions);
    };
    SPHttpClientBatch.prototype.execute = function () {
        var _this = this;
        var batchBody = '\n';
        var batchGuid = sp_core_library_1.Guid.newGuid(this._randomNumberGenerator);
        var chain = Promise.resolve();
        this._batchedRequests.forEach(function (batchedRequest) {
            chain = chain.then(function () {
                return batchedRequest.request.text();
            }).then(function (requestText) {
                var request = batchedRequest.request;
                batchBody += "--batch_" + batchGuid.toString() + "\n";
                batchBody += "Content-type: application/http\n"
                    + "Content-Transfer-Encoding: binary\n\n";
                batchBody += request.method + " " + request.url + " HTTP/1.1\n";
                request.headers.forEach(function (value, name) {
                    batchBody += name + ": " + value + "\n";
                });
                batchBody += '\n';
                batchBody += requestText;
                batchBody += '\n\n';
            });
        });
        return chain.then(function () {
            batchBody += "--batch_" + batchGuid + "--\n\n";
            return _this._digestCache.fetchDigest(_this._webUrl);
        }).then(function (digest) {
            var headers = new Headers();
            headers.append('Accept', 'application/json');
            headers.append('OData-Version', '4.0');
            headers.append('Content-Type', "multipart/mixed; boundary=batch_" + batchGuid);
            headers.append('Content-Length', batchBody.length.toString());
            headers.append('X-RequestDigest', digest);
            var request = new Request(_this._webUrl + '/_api/$batch', {
                method: 'POST',
                headers: headers,
                body: batchBody,
                credentials: 'same-origin',
                cache: 'no-cache'
            });
            var promise = _this._fetchProvider.fetch(request);
            return SPHttpClientHelper_1.default.handleAuthenticationErrors(promise, _this._webUrl, _this._digestCache);
        }).then(function (response) {
            if (!response.ok) {
                throw new Error('SPHttpClientBatch: The batch request failed: ' + response.statusText);
            }
            return response.text();
        }).then(function (text) {
            var responses = _this._parseResponsesFromBody(text);
            if (responses.length !== _this._batchedRequests.length) {
                throw new Error("SPHttpClientBatch: Expecting " + _this._batchedRequests.length + " responses");
            }
            for (var i = 0; i < _this._batchedRequests.length; ++i) {
                var request = _this._batchedRequests[i];
                request.notifyCompleted(new SPHttpClientResponse_1.default(responses[i]));
            }
            return _this;
        });
    };
    SPHttpClientBatch.prototype._parseResponsesFromBody = function (text) {
        var responses = [];
        var header = '--batchresponse_';
        var statusRegExp = new RegExp('^HTTP/[0-9.]+ +([0-9]+) +(.*)', 'i');
        var lines = text.split('\n');
        var parserState = 'batch';
        var batchStatus;
        var batchStatusText;
        for (var i = 0; i < lines.length; ++i) {
            var line = lines[i];
            switch (parserState) {
                case 'batch':
                    if (line.substr(0, header.length) === header) {
                        parserState = 'batchHeaders';
                    }
                    else {
                        if (line.trim() !== '') {
                            throw new Error('SPHttpClientBatch: Invalid response, line ' + i);
                        }
                    }
                    break;
                case 'batchHeaders':
                    if (line.trim() === '') {
                        parserState = 'status';
                    }
                    break;
                case 'status':
                    var parts = statusRegExp.exec(line);
                    if (!parts || parts && parts.length !== 3) {
                        throw new Error('SPHttpClientBatch: Invalid status, line ' + i);
                    }
                    batchStatus = parseInt(parts[1], 10);
                    batchStatusText = parts[2];
                    parserState = 'statusHeaders';
                    break;
                case 'statusHeaders':
                    if (line.trim() === '') {
                        parserState = 'body';
                    }
                    break;
                case 'body':
                    var response = new Response(line, { status: batchStatus, statusText: batchStatusText });
                    responses.push(response);
                    parserState = 'batch';
                    break;
            }
        }
        if (parserState !== 'status') {
            throw new Error('SPHttpClientBatch: Unexpected end of input');
        }
        return responses;
    };
    SPHttpClientBatch.configurations = SPHttpClientBatchConfiguration_1.predefinedConfigurations;
    return SPHttpClientBatch;
}());
exports.default = SPHttpClientBatch;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(0);
var SPHttpClientCommonConfiguration_1 = __webpack_require__(10);
var HttpClient_1 = __webpack_require__(3);
var SPHttpClientBatchConfiguration = (function (_super) {
    __extends(SPHttpClientBatchConfiguration, _super);
    function SPHttpClientBatchConfiguration(flags, overrideFlags) {
        return _super.call(this, flags, overrideFlags) || this;
    }
    SPHttpClientBatchConfiguration.prototype.overrideWith = function (sourceFlags) {
        return new SPHttpClientBatchConfiguration(this.flags, sourceFlags);
    };
    SPHttpClientBatchConfiguration.prototype.initializeFlags = function () {
        _super.prototype.initializeFlags.call(this);
    };
    __decorate([
        decorators_1.override
    ], SPHttpClientBatchConfiguration.prototype, "overrideWith", null);
    __decorate([
        decorators_1.override
    ], SPHttpClientBatchConfiguration.prototype, "initializeFlags", null);
    return SPHttpClientBatchConfiguration;
}(SPHttpClientCommonConfiguration_1.default));
exports.default = SPHttpClientBatchConfiguration;
exports.predefinedConfigurations = {
    v1: new SPHttpClientBatchConfiguration(HttpClient_1.default.configurations.v1, {
        jsonRequest: true,
        jsonResponse: true
    })
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(0);
var SPHttpClientCommonConfiguration_1 = __webpack_require__(10);
var ODataVersion_1 = __webpack_require__(2);
var HttpClient_1 = __webpack_require__(3);
var SPHttpClientConfiguration = (function (_super) {
    __extends(SPHttpClientConfiguration, _super);
    function SPHttpClientConfiguration(flags, overrideFlags) {
        return _super.call(this, flags, overrideFlags) || this;
    }
    SPHttpClientConfiguration.prototype.overrideWith = function (sourceFlags) {
        return new SPHttpClientConfiguration(this.flags, sourceFlags);
    };
    Object.defineProperty(SPHttpClientConfiguration.prototype, "defaultSameOriginCredentials", {
        get: function () {
            return this.flags.defaultSameOriginCredentials;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPHttpClientConfiguration.prototype, "defaultODataVersion", {
        get: function () {
            return this.flags.defaultODataVersion;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPHttpClientConfiguration.prototype, "requestDigest", {
        get: function () {
            return this.flags.requestDigest;
        },
        enumerable: true,
        configurable: true
    });
    SPHttpClientConfiguration.prototype.initializeFlags = function () {
        _super.prototype.initializeFlags.call(this);
        this.flags.defaultSameOriginCredentials = false;
        this.flags.defaultODataVersion = ODataVersion_1.default.v3;
        this.flags.requestDigest = false;
    };
    __decorate([
        decorators_1.override
    ], SPHttpClientConfiguration.prototype, "overrideWith", null);
    __decorate([
        decorators_1.override
    ], SPHttpClientConfiguration.prototype, "initializeFlags", null);
    return SPHttpClientConfiguration;
}(SPHttpClientCommonConfiguration_1.default));
exports.default = SPHttpClientConfiguration;
exports.predefinedConfigurations = {
    v1: new SPHttpClientConfiguration(HttpClient_1.default.configurations.v1, {
        jsonRequest: true,
        jsonResponse: true,
        defaultSameOriginCredentials: true,
        defaultODataVersion: ODataVersion_1.default.v4,
        requestDigest: true
    })
};


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var OAuthUtilityErrorType;
(function (OAuthUtilityErrorType) {
    OAuthUtilityErrorType[OAuthUtilityErrorType["unknownError"] = 0] = "unknownError";
    OAuthUtilityErrorType[OAuthUtilityErrorType["malformedResponseBody"] = 1] = "malformedResponseBody";
    OAuthUtilityErrorType[OAuthUtilityErrorType["serverError"] = 2] = "serverError";
})(OAuthUtilityErrorType = exports.OAuthUtilityErrorType || (exports.OAuthUtilityErrorType = {}));
var OAuthUtilityError = (function (_super) {
    __extends(OAuthUtilityError, _super);
    function OAuthUtilityError(type, context) {
        var _this = _super.call(this, context.message) || this;
        _this.__proto__ = OAuthUtilityError.prototype; 
        _this._type = type;
        _this._httpResponseStatus = context.httpResponseStatus;
        _this._cultureName = context.cultureName;
        _this._message = context.message;
        _this._serverErrorCode = context.serverErrorCode;
        _this._correlationId = context.correlationId;
        _this._redirectUrl = context.redirectUrl;
        return _this;
    }
    Object.defineProperty(OAuthUtilityError.prototype, "type", {
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OAuthUtilityError.prototype, "serverErrorCode", {
        get: function () {
            if (this.type !== OAuthUtilityErrorType.serverError) {
                throw new Error('ServerErrorCode can only be obtained for errors of type serverError');
            }
            return this._serverErrorCode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OAuthUtilityError.prototype, "httpResponseStatus", {
        get: function () {
            return this._httpResponseStatus;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OAuthUtilityError.prototype, "message", {
        get: function () {
            return this._message;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OAuthUtilityError.prototype, "cultureName", {
        get: function () {
            return this._cultureName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OAuthUtilityError.prototype, "correlationId", {
        get: function () {
            return this._correlationId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OAuthUtilityError.prototype, "redirectUrl", {
        get: function () {
            return this._redirectUrl;
        },
        enumerable: true,
        configurable: true
    });
    return OAuthUtilityError;
}(Error));
exports.default = OAuthUtilityError;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(0);
var lodash = __webpack_require__(6);
var sp_telemetry_1 = __webpack_require__(7);
var sp_core_library_1 = __webpack_require__(1);
var OAuthTokenProvider_1 = __webpack_require__(18);
var GraphHttpClientResponse_1 = __webpack_require__(17);
var HttpClientHelper_1 = __webpack_require__(13);
var SPHttpClientHelper_1 = __webpack_require__(14);
var GraphHttpClientConfiguration_1 = __webpack_require__(15);
var GraphConstants_1 = __webpack_require__(27);
var GraphHttpClientContext_1 = __webpack_require__(16);
var GraphHttpClient = (function () {
    function GraphHttpClient(serviceScope) {
        var _this = this;
        this._httpClientHelper = new HttpClientHelper_1.default(serviceScope, 'GraphHttpClient');
        this._serviceScope = serviceScope;
        this._serviceScope.whenFinished(function () {
            _this._tokenProvider = serviceScope.consume(OAuthTokenProvider_1.default.serviceKey);
            _this._randomNumberGenerator = serviceScope.consume(sp_core_library_1.RandomNumberGenerator.serviceKey);
            _this._parentSource = serviceScope.consume(sp_telemetry_1._logSourceServiceKey);
            _this._graphContext = serviceScope.consume(GraphHttpClientContext_1.default.serviceKey);
        });
    }
    GraphHttpClient_1 = GraphHttpClient;
    GraphHttpClient.prototype.fetch = function (url, configuration, options) {
        var _this = this;
        this._validateGraphRelativeUrl(url);
        return this._getOAuthToken().then(function () {
            if (!options) {
                options = {};
            }
            var modifiedOptions = lodash.clone(options);
            var defaultHeaders = {
                'Accept': 'application/json',
                'Authorization': 'Bearer ' + _this._token,
                'Content-Type': 'application/json; charset=utf-8'
            };
            var userHeaders = SPHttpClientHelper_1.default.cloneHeaders(options);
            modifiedOptions.headers = _this._mergeUserHeaders(defaultHeaders, userHeaders);
            return _this._fetchWithInstrumentation(configuration, new Request(GraphConstants_1.default.OAUTH_TOKEN_URL + '/' + url, modifiedOptions)).then(function (response) {
                return new GraphHttpClientResponse_1.default(response);
            });
        });
    };
    GraphHttpClient.prototype.get = function (url, configuration, options) {
        return this.fetch(url, configuration, this._httpClientHelper.overrideHttpMethod(options, 'GET'));
    };
    GraphHttpClient.prototype.post = function (url, configuration, options) {
        return this.fetch(url, configuration, this._httpClientHelper.overrideHttpMethod(options, 'POST'));
    };
    GraphHttpClient.prototype._fetchWithInstrumentation = function (configuration, request) {
        var _this = this;
        var tag = this._performanceTag;
        sp_telemetry_1._PerformanceLogger.startMarkForApi(tag);
        var qosMonitor = new sp_telemetry_1._QosMonitor('GraphHttpClient.Fetch');
        return this._httpClientHelper.fetchCore(configuration, request).then(function (response) {
            sp_telemetry_1._PerformanceLogger.endMarkForApi(tag, _this._logSourceId, request.url, response);
            _this._writeQosMonitorUpdate(response, qosMonitor, 'Fetch');
            return response;
        }).catch(function (error) {
            qosMonitor.writeUnexpectedFailure('Fetch', error, { source: _this._logSourceId });
            return Promise.reject(error);
        });
    };
    GraphHttpClient.prototype._getOAuthToken = function () {
        var _this = this;
        if (!!this._token) {
            return Promise.resolve(undefined);
        }
        var qosMonitor = new sp_telemetry_1._QosMonitor('GraphHttpClient.FetchGraphToken');
        return this._tokenProvider.getOAuthToken(GraphConstants_1.default.OAUTH_TOKEN_URL, this._graphContext.getWebServerRelativeUrl()).then(function (response) {
            _this._writeQosMonitorUpdate(response, qosMonitor, 'FetchGraphToken');
            _this._token = response.token;
        })
            .catch(function (error) {
            qosMonitor.writeUnexpectedFailure('FetchGraphToken', error, { source: _this._logSourceId });
            return Promise.reject(error);
        });
    };
    Object.defineProperty(GraphHttpClient.prototype, "_logSourceId", {
        get: function () {
            if (this._parentSource.isEmpty()) {
                return GraphHttpClient_1._logSource.id;
            }
            return this._parentSource.id;
        },
        enumerable: true,
        configurable: true
    });
    GraphHttpClient.prototype._mergeUserHeaders = function (defaultHeaders, userHeaders) {
        userHeaders.forEach(function (value, name) {
            defaultHeaders.set(name, value); 
        });
        return defaultHeaders;
    };
    Object.defineProperty(GraphHttpClient.prototype, "_performanceTag", {
        get: function () {
            var randomSuffix = Math.floor(this._randomNumberGenerator.generate() * 100000).toString();
            return this._logSourceId + "." + randomSuffix;
        },
        enumerable: true,
        configurable: true
    });
    GraphHttpClient.prototype._writeQosMonitorUpdate = function (response, qosMonitor, operation) {
        if (response.status >= 200 && response.status <= 299) {
            qosMonitor.writeSuccess({ source: this._logSourceId });
        }
        else if (response.status >= 300 && response.status <= 499) {
            qosMonitor.writeExpectedFailure(operation, undefined, { source: this._logSourceId, responseStatus: response.status });
        }
        else {
            qosMonitor.writeUnexpectedFailure(operation, undefined, { source: this._logSourceId, responseStatus: response.status });
        }
    };
    GraphHttpClient.prototype._validateGraphRelativeUrl = function (url) {
        sp_core_library_1.Validate.isNotNullOrUndefined(url, 'url');
        if (url.charAt(0) === '/') {
            throw new Error('GraphHttpClient requests cannot begin with a / character');
        }
        if (url.indexOf('http://', 0) === 0) {
            throw new Error('GraphHttpClient requests cannot specify a different graph server with the url.');
        }
        if (url.indexOf('https://', 0) === 0) {
            throw new Error('GraphHttpClient requests cannot specify a different graph server with the url.');
        }
    };
    GraphHttpClient.configurations = GraphHttpClientConfiguration_1.predefinedConfigurations;
    GraphHttpClient.serviceKey = sp_core_library_1.ServiceKey.create('sp-http:GraphHttpClient', GraphHttpClient_1);
    GraphHttpClient._logSource = sp_telemetry_1._LogSource.create('graphHttpClient');
    GraphHttpClient = GraphHttpClient_1 = __decorate([
        decorators_1.sealed
    ], GraphHttpClient);
    return GraphHttpClient;
    var GraphHttpClient_1;
}());
exports.default = GraphHttpClient;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var OAuthUtility_1 = __webpack_require__(26);
exports.OAuthUtility = OAuthUtility_1.default;
var OAuthUtilityError_1 = __webpack_require__(22);
exports.OAuthUtilityError = OAuthUtilityError_1.default;
exports.OAuthUtilityErrorType = OAuthUtilityError_1.OAuthUtilityErrorType;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Constants = (function () {
    function Constants() {
    }
    Constants.tokenCacheSessionStorageId = 'tokenCache';
    Constants.aboutToExpireIntervalSeconds = 600;
    Constants.apiUrl = '/_api/SP.OAuth.Token/Acquire';
    Constants.retries = 3;
    Constants.retriableErrorCodes = [
        10006,
        10008
    ];
    Constants.unexpectedErrorCodeFormat = 'Expected error code format is <numericCode>, <exception class name>';
    Constants.unexpectedTokenMessageFormat = 'Your token request succeedeed but the token could not be parsed from the response.' +
        'This is most probably caused by a change in the server response format';
    Constants.npmPackageVersion = '0.1.5';
    return Constants;
}());
exports.default = Constants;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Constants_1 = __webpack_require__(25);
var OAuthUtilityError_1 = __webpack_require__(22);
var OAuthUtility = (function () {
    function OAuthUtility(context) {
        var _this = this;
        this._context = context;
        this._dispose = this._dispose.bind(this);
        window.addEventListener('unload', this._dispose);
        var mediaTokenCallback = '_spPageOnMediaTokenReceived';
        window[mediaTokenCallback] = function () {
            _this._receiveMediaServiceFlushedToken();
        };
    }
    OAuthUtility._getCorrelationId = function (response) {
        return response.headers.get('sprequestguid');
    };
    OAuthUtility._extractRealError = function (errorResponse) {
        var isNested = errorResponse.hasOwnProperty('error');
        return isNested ? errorResponse.error : errorResponse;
    };
    OAuthUtility.prototype.getOAuthToken = function (resource, webUrl) {
        var _this = this;
        this._receiveMediaServiceFlushedToken();
        var cachedData = this._getCachedTokenData(resource);
        if (cachedData && !this._isExpiring(cachedData)) {
            return Promise.resolve({
                token: cachedData.accessToken,
                isGuest: false
            });
        }
        return this._retriableFetchWithDigest(resource, Constants_1.default.retries, webUrl)
            .then(function (responseData) {
            _this._storeTokenData(resource, responseData);
            return {
                token: responseData.accessToken,
                isGuest: false
            };
        });
    };
    OAuthUtility.prototype.clearCachedToken = function (resource) {
        var key = this._getCacheKey(resource);
        window.sessionStorage.removeItem(key);
        var index = this._resourceKeys.indexOf(key);
        if (!isNaN(index) && index > -1) {
            this._resourceKeys.splice(index);
        }
    };
    Object.defineProperty(OAuthUtility.prototype, "_resourceKeys", {
        get: function () {
            if (!this._keysToDispose) {
                this._keysToDispose = new Array();
            }
            return this._keysToDispose;
        },
        enumerable: true,
        configurable: true
    });
    OAuthUtility.prototype._retriableFetchWithDigest = function (resource, retriesLeft, webUrl) {
        var _this = this;
        var monitor = this._context.qosMonitor();
        return this._context.fetchWithDigest(this._buildTokenRequest(resource, webUrl))
            .then(function (response) {
            if (response.status !== 200) {
                _this._context.logger.logError('fetchWithDigest failed. Server responded with ' + response.statusText);
                var error = new OAuthUtilityError_1.default(OAuthUtilityError_1.OAuthUtilityErrorType.unknownError, {
                    httpResponseStatus: response.status,
                    message: response.statusText,
                    correlationId: OAuthUtility._getCorrelationId(response)
                });
                if (response.status !== 400) {
                    monitor.writeUnexpectedFailure('UnknownError', error);
                    return Promise.reject(error);
                }
                return response.json().then(function (mixedErrorResponse) {
                    var errorResponse = OAuthUtility._extractRealError(mixedErrorResponse);
                    var errorCode = _this._getErrorCodeFromResponseCode(errorResponse);
                    if (!_this._isRetriableError(errorCode) || (retriesLeft === 0)) {
                        var oAuthError = _this._buildErrorFromResponse(errorResponse);
                        monitor.writeUnexpectedFailure('SharepointServerError', oAuthError);
                        return Promise.reject(oAuthError);
                    }
                    _this._context.logger.logError('fetchWithDigest failed. Retrying. Retries left: ' + retriesLeft);
                    return _this._retriableFetchWithDigest(resource, retriesLeft - 1, webUrl);
                });
            }
            return _this._instrumentedParseResponseData(response, monitor);
        });
    };
    OAuthUtility.prototype._getCachedTokenData = function (resource) {
        return JSON.parse(window.sessionStorage.getItem(this._getCacheKey(resource)));
    };
    OAuthUtility.prototype._storeTokenData = function (resource, data) {
        window.sessionStorage.setItem(this._getCacheKey(resource), JSON.stringify(data));
    };
    OAuthUtility.prototype._getCacheKey = function (resource) {
        var key = ['sp-client-shared', Constants_1.default.npmPackageVersion, 'OAuthUtility', resource].join(';');
        var index = this._resourceKeys.indexOf(key);
        if (index === -1) {
            this._resourceKeys.push(key);
        }
        return key;
    };
    OAuthUtility.prototype._isExpiring = function (tokenRequestData) {
        return (tokenRequestData.expiresOn - Date.now() / 1000) < Constants_1.default.aboutToExpireIntervalSeconds;
    };
    OAuthUtility.prototype._isRetriableError = function (errorCode) {
        return Constants_1.default.retriableErrorCodes.indexOf(errorCode) !== -1;
    };
    OAuthUtility.prototype._buildTokenRequest = function (resource, webUrl) {
        var requestHeaders = new Headers();
        requestHeaders.append('Content-Type', 'application/json; charset=utf-8');
        requestHeaders.append('Odata-Version', '4.0');
        requestHeaders.append('Accept', 'application/json;odata.metadata=minimal');
        var request = {
            method: 'POST',
            headers: requestHeaders,
            body: JSON.stringify(this._buildRequestBody(resource))
        };
        var webUrlNoEndingSlash = webUrl;
        if (webUrlNoEndingSlash && webUrlNoEndingSlash.lastIndexOf('/') === webUrlNoEndingSlash.length - 1) {
            webUrlNoEndingSlash = webUrlNoEndingSlash.substr(0, webUrlNoEndingSlash.length - 1);
        }
        return new Request(webUrlNoEndingSlash + Constants_1.default.apiUrl, request);
    };
    OAuthUtility.prototype._buildRequestBody = function (resource) {
        return {
            resource: resource
        };
    };
    OAuthUtility.prototype._buildErrorFromResponse = function (serverErrorResponse) {
        var errorCode = this._getErrorCodeFromResponseCode(serverErrorResponse);
        if (errorCode === undefined) {
            return new OAuthUtilityError_1.default(OAuthUtilityError_1.OAuthUtilityErrorType.malformedResponseBody, {
                httpResponseStatus: 400,
                message: Constants_1.default.unexpectedErrorCodeFormat,
                correlationId: serverErrorResponse.correlationId
            });
        }
        var message;
        var cultureName;
        if (serverErrorResponse.message) {
            if (typeof serverErrorResponse.message === 'string') {
                message = serverErrorResponse.message;
            }
            else {
                message = serverErrorResponse.message.value;
                cultureName = serverErrorResponse.message.lang;
            }
        }
        var redirectUrlKey = 'error.redirectUrl';
        return new OAuthUtilityError_1.default(OAuthUtilityError_1.OAuthUtilityErrorType.serverError, {
            httpResponseStatus: 400,
            message: message,
            cultureName: cultureName,
            serverErrorCode: errorCode,
            correlationId: serverErrorResponse.correlationId,
            redirectUrl: serverErrorResponse[redirectUrlKey] || serverErrorResponse["@" + redirectUrlKey]
        });
    };
    OAuthUtility.prototype._getErrorCodeFromResponseCode = function (serverErrorResponse) {
        var responseErrorCode = serverErrorResponse.code;
        var errorCode = Number(responseErrorCode);
        if (isNaN(errorCode) && typeof serverErrorResponse.message === 'string') {
            var firstCommaIndex = responseErrorCode.indexOf(',');
            if (firstCommaIndex !== -1) {
                errorCode = Number(responseErrorCode.substr(0, firstCommaIndex));
            }
        }
        return errorCode;
    };
    OAuthUtility.prototype._instrumentedParseResponseData = function (response, monitor) {
        try {
            return response.json().then(function (responseBody) {
                monitor.writeSuccess();
                return {
                    accessToken: responseBody.access_token,
                    expiresOn: Number(responseBody.expires_on),
                    notBefore: Number(responseBody.not_before),
                    resource: responseBody.resource,
                    tokenType: responseBody.token_type
                };
            });
        }
        catch (error) {
            monitor.writeUnexpectedFailure('ResponseParseError', error);
            return Promise.reject(new OAuthUtilityError_1.default(OAuthUtilityError_1.OAuthUtilityErrorType.malformedResponseBody, {
                httpResponseStatus: 200,
                message: Constants_1.default.unexpectedTokenMessageFormat,
                correlationId: OAuthUtility._getCorrelationId(response)
            }));
        }
    };
    OAuthUtility.prototype._dispose = function (ev) {
        window.removeEventListener('unload', this._dispose);
        for (var _i = 0, _a = this._resourceKeys; _i < _a.length; _i++) {
            var key = _a[_i];
            window.sessionStorage.removeItem(key);
        }
    };
    OAuthUtility.prototype._receiveMediaServiceFlushedToken = function () {
        var tokenKey = '_spMSBT';
        if (window[tokenKey]) {
            var responseData = {
                tokenType: window[tokenKey].TokenType,
                expiresOn: window[tokenKey].ExpiresOn,
                notBefore: undefined,
                resource: window[tokenKey].Resource,
                accessToken: window[tokenKey].AccessToken
            };
            this._storeTokenData(responseData.resource, responseData);
            window[tokenKey] = undefined;
        }
    };
    return OAuthUtility;
}());
exports.default = OAuthUtility;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var GraphConstants = (function () {
    function GraphConstants() {
    }
    GraphConstants.OAUTH_TOKEN_URL = 'https://graph.microsoft.com';
    return GraphConstants;
}());
exports.default = GraphConstants;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(7);
var SPHttpClient_1 = __webpack_require__(9);
var TokenUtilityLogger = (function () {
    function TokenUtilityLogger() {
    }
    TokenUtilityLogger.prototype.logInfo = function (message) {
        sp_telemetry_1._TraceLogger.logVerbose(TokenUtilityLogger.logSource, message);
    };
    TokenUtilityLogger.prototype.logError = function (message) {
        sp_telemetry_1._TraceLogger.logError(TokenUtilityLogger.logSource, new Error(message));
    };
    TokenUtilityLogger.prototype.logWarning = function (message) {
        sp_telemetry_1._TraceLogger.logVerbose(TokenUtilityLogger.logSource, 'Warning: ' + message);
    };
    TokenUtilityLogger.logSource = sp_telemetry_1._LogSource.create('TokenUtility');
    return TokenUtilityLogger;
}());
var OAuthUtilityContext = (function () {
    function OAuthUtilityContext(serviceScope) {
        var _this = this;
        serviceScope.whenFinished(function () {
            _this._spHttpClient = serviceScope.consume(SPHttpClient_1.default.serviceKey);
            _this._logger = new TokenUtilityLogger();
        });
    }
    Object.defineProperty(OAuthUtilityContext.prototype, "logger", {
        get: function () {
            return this._logger;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OAuthUtilityContext.prototype, "webUrl", {
        get: function () {
            return '';
        },
        enumerable: true,
        configurable: true
    });
    OAuthUtilityContext.prototype.fetchWithDigest = function (request) {
        var _this = this;
        return request.blob().then(function (requestBody) {
            return _this._spHttpClient.fetch(request.url, SPHttpClient_1.default.configurations.v1, {
                method: request.method,
                headers: request.headers,
                body: requestBody
            });
        });
    };
    OAuthUtilityContext.prototype.qosMonitor = function () {
        return new sp_telemetry_1._QosMonitor(OAuthUtilityContext.qosName);
    };
    OAuthUtilityContext.qosName = 'OAuthTokenProvider';
    return OAuthUtilityContext;
}());
exports.default = OAuthUtilityContext;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BatchedRequest = (function () {
    function BatchedRequest(request) {
        var _this = this;
        this.request = request;
        this.response = undefined;
        this._queuedPromiseResolves = [];
        this._queuedPromiseRejects = [];
        this.promise = new Promise(
        function (resolve, reject) {
            if (_this.response !== undefined) {
                resolve(_this.response);
            }
            else {
                _this._queuedPromiseResolves.push(resolve);
                _this._queuedPromiseRejects.push(reject);
            }
        });
    }
    BatchedRequest.prototype.notifyCompleted = function (response) {
        var _this = this;
        this.response = response;
        if (response.ok) {
            this._queuedPromiseResolves.forEach(function (callback) {
                callback(_this.response);
            });
        }
        else {
            var error_1 = new Error('SPHttpClientBatch: Batched request failed');
            this._queuedPromiseRejects.forEach(function (callback) {
                callback(error_1);
            });
        }
        this._queuedPromiseResolves = [];
        this._queuedPromiseRejects = [];
    };
    return BatchedRequest;
}());
exports.default = BatchedRequest;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var HttpClient_1 = __webpack_require__(3);
exports.HttpClient = HttpClient_1.default;
var HttpClientConfiguration_1 = __webpack_require__(4);
exports.HttpClientConfiguration = HttpClientConfiguration_1.default;
var HttpClientResponse_1 = __webpack_require__(5);
exports.HttpClientResponse = HttpClientResponse_1.default;
var DigestCache_1 = __webpack_require__(8);
exports.DigestCache = DigestCache_1.default;
var SPHttpClient_1 = __webpack_require__(9);
exports.SPHttpClient = SPHttpClient_1.default;
var SPHttpClientCommonConfiguration_1 = __webpack_require__(10);
exports.SPHttpClientCommonConfiguration = SPHttpClientCommonConfiguration_1.default;
var SPHttpClientConfiguration_1 = __webpack_require__(21);
exports.SPHttpClientConfiguration = SPHttpClientConfiguration_1.default;
var SPHttpClientResponse_1 = __webpack_require__(11);
exports.SPHttpClientResponse = SPHttpClientResponse_1.default;
var SPHttpClientBatchConfiguration_1 = __webpack_require__(20);
exports.SPHttpClientBatchConfiguration = SPHttpClientBatchConfiguration_1.default;
var SPHttpClientBatch_1 = __webpack_require__(19);
exports.SPHttpClientBatch = SPHttpClientBatch_1.default;
var ODataVersion_1 = __webpack_require__(2);
exports.ODataVersion = ODataVersion_1.default;
var OAuthTokenProvider_1 = __webpack_require__(18);
exports.OAuthTokenProvider = OAuthTokenProvider_1.default;
var GraphHttpClient_1 = __webpack_require__(23);
exports.GraphHttpClient = GraphHttpClient_1.default;
var GraphHttpClientResponse_1 = __webpack_require__(17);
exports.GraphHttpClientResponse = GraphHttpClientResponse_1.default;
var GraphHttpClientConfiguration_1 = __webpack_require__(15);
exports.GraphHttpClientConfiguration = GraphHttpClientConfiguration_1.default;
var GraphHttpClientContext_1 = __webpack_require__(16);
exports._GraphHttpClientContext = GraphHttpClientContext_1.default;


/***/ })
/******/ ])});;
//# sourceMappingURL=sp-http.js.map
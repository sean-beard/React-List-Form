{"version":3,"sources":["test/index.test.ts"],"names":[],"mappings":"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","file":"test/index.test.js","sourcesContent":["/// <reference types=\"mocha\" />\r\n\r\nimport { expect } from 'chai';\r\nimport {\r\n  detokenize,\r\n  loadTheme,\r\n  splitStyles,\r\n  loadStyles,\r\n  configureLoadStyles,\r\n  IThemingInstruction\r\n} from './../index';\r\n\r\ndescribe('detokenize', () => {\r\n  it('handles colors', () => {\r\n    expect(detokenize('\"[theme:name, default: #FFF]\"')).to.equal('#FFF');\r\n    expect(detokenize('\"[theme: name, default: #FFF]\"')).to.equal('#FFF');\r\n    expect(detokenize('\"[theme: name , default: #FFF  ]\"')).to.equal('#FFF');\r\n  });\r\n\r\n  it('handles rgba', () => {\r\n    expect(detokenize('\"[theme:name, default: rgba(255,255,255,.5)]\"')).to.equal('rgba(255,255,255,.5)');\r\n  });\r\n\r\n  it('handles fonts', () => {\r\n    expect(detokenize('\"[theme:name, default: \"Segoe UI\"]\"')).to.equal('\"Segoe UI\"');\r\n  });\r\n\r\n  it('respects theme', () => {\r\n    loadTheme({\r\n      color: 'red'\r\n    });\r\n\r\n    try {\r\n      expect(detokenize('\"[theme:color, default: #FFF]\"')).to.equal('red');\r\n      expect(detokenize('\"[theme: color , default: #FFF]\"')).to.equal('red');\r\n    } finally {\r\n      loadTheme(undefined);\r\n    }\r\n  });\r\n\r\n  it('ignores malformed themes', () => {\r\n    expect(detokenize('\"[theme:name, default: \"Segoe UI\"]')).to.equal('\"[theme:name, default: \"Segoe UI\"]');\r\n    expect(detokenize('\"[theme:]\"')).to.equal('\"[theme:]\"');\r\n  });\r\n\r\n  it('translates missing themes', () => {\r\n    expect(detokenize('\"[theme:name]\"')).to.equal('inherit');\r\n  });\r\n\r\n  it('splits non-themable CSS', () => {\r\n      const cssString: string = '.sampleClass\\n{\\n color: #FF0000;\\n}\\n';\r\n      const arr: IThemingInstruction[] = splitStyles(cssString);\r\n      expect(arr.length).to.equal(1);\r\n      expect(arr[0].rawString).to.equal(cssString);\r\n  });\r\n\r\n  it('splits themable CSS', () => {\r\n      const arr: IThemingInstruction[] = splitStyles('.firstClass { color: \"[theme: firstColor ]\";}\\n' +\r\n          ' .secondClass { color: \"[theme:secondColor, default: #AAA]\";}\\n .coach { color: #333; }');\r\n      expect(arr.length).to.equal(5);\r\n      for (let i: number = 0; i < arr.length; i++) {\r\n          if (i % 2 === 0) { // even index should be a string component\r\n              expect(typeof arr[i].rawString).to.equal('string');\r\n          } else { // odd index should be a theme instruction object\r\n              expect(typeof arr[i].theme).to.equal('string');\r\n          }\r\n      }\r\n  });\r\n\r\n  it('passes the styles to loadStyles override callback', () => {\r\n    const expected: string = 'xxx.foo { color: #FFF }xxx';\r\n    let subject: string | undefined = undefined;\r\n\r\n    const callback: (str: string) => void = (str: string) => {\r\n      subject = 'xxx' + str + 'xxx';\r\n    };\r\n\r\n    configureLoadStyles(callback);\r\n\r\n    loadStyles('.foo { color: \"[theme:fooColor, default: #FFF]\" }');\r\n    expect(subject).to.equal(expected);\r\n\r\n    configureLoadStyles(undefined);\r\n  });\r\n});\r\n"],"sourceRoot":"..\\..\\src"}
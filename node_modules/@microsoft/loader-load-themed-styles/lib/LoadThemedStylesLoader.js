"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
 * See LICENSE in the project root for license information.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var loaderUtils = require("loader-utils");
var loadedThemedStylesPath = require.resolve('@microsoft/load-themed-styles');
/**
 * This simple loader wraps the loading of CSS in script equivalent to
 *  require("load-themed-styles").loadStyles('... css text ...').
 *
 * @public
 */
var LoadThemedStylesLoader = (function () {
    function LoadThemedStylesLoader() {
        throw new Error('Constructing "LoadThemedStylesLoader" is not supported.');
    }
    Object.defineProperty(LoadThemedStylesLoader, "loadedThemedStylesPath", {
        /**
         * Use this property to override the path to the @microsoft/load-themed-styles package.
         */
        get: function () {
            return LoadThemedStylesLoader._loadedThemedStylesPath;
        },
        /**
         * Use this property to override the path to the @microsoft/load-themed-styles package.
         */
        set: function (value) {
            LoadThemedStylesLoader._loadedThemedStylesPath = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Reset the path to the @microsoft/load-themed-styles package to the default.
     */
    LoadThemedStylesLoader.resetLoadedThemedStylesPath = function () {
        LoadThemedStylesLoader._loadedThemedStylesPath = loadedThemedStylesPath;
    };
    LoadThemedStylesLoader.pitch = function (remainingRequest) {
        var _a = loaderUtils.getOptions(this) || {}, namedExport = _a.namedExport, _b = _a.async, async = _b === void 0 ? false : _b;
        var exportName = 'module.exports';
        if (namedExport) {
            exportName += "." + namedExport;
        }
        return [
            "var content = require(" + loaderUtils.stringifyRequest(this, '!!' + remainingRequest) + ");",
            "var loader = require(" + JSON.stringify(LoadThemedStylesLoader._loadedThemedStylesPath) + ");",
            '',
            'if(typeof content === "string") content = [[module.id, content]];',
            '',
            '// add the styles to the DOM',
            "for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], " + (async === true) + ");",
            '',
            "if(content.locals) " + exportName + " = content.locals;"
        ].join('\n');
    };
    LoadThemedStylesLoader._loadedThemedStylesPath = loadedThemedStylesPath;
    return LoadThemedStylesLoader;
}());
exports.LoadThemedStylesLoader = LoadThemedStylesLoader;

//# sourceMappingURL=LoadThemedStylesLoader.js.map

{"version":3,"sources":["tasks/CleanTask.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;AAE3D,uCAAsC;AAItC,wEAAuE;AAGvE;;;;;GAKG;AACH;IAA+B,6BAAc;IAC3C;;OAEG;IACH;eACE,kBAAM,OAAO,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,+BAAW,GAAlB,UACE,IAAiB,EACjB,gBAAkD;QAE5C,IAAA,qBAAoF,EAAlF,0BAAU,EAAE,wBAAS,EAAE,8BAAY,EAAE,0BAAU,CAAoC;QAC3F,IAAI,UAAU,GAAa;YACzB,UAAU;YACV,SAAS;YACT,UAAU;SACX,CAAC;QAEF,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACjB,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChC,CAAC;QAED,yEAAyE;QACzE,GAAG,CAAC,CAAqB,UAAkC,EAAlC,KAAA,IAAI,CAAC,WAAW,CAAC,WAAW,IAAI,EAAE,EAAlC,cAAkC,EAAlC,IAAkC;YAAtD,IAAM,UAAU,SAAA;YACnB,EAAE,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;gBAC7B,6DAA6D;gBAC7D,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC7E,CAAC;SACF;QAED,IAAM,WAAW,GAA8B,EAAE,CAAC;QAElD,uEAAuE;QACvE,UAAU,CAAC,OAAO,CAAC,UAAA,SAAS;YAC1B,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBAChB,WAAW,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,mDAAmD;QACnD,UAAU,GAAG,EAAE,CAAC;QAChB,GAAG,CAAC,CAAC,IAAM,UAAU,IAAI,WAAW,CAAC,CAAC,CAAC;YACrC,EAAE,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC3C,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC;QAED,IAAI,CAAC;YACH,yCAAmB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YAC/C,gBAAgB,EAAE,CAAC;QACrB,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC;IACH,CAAC;IACH,gBAAC;AAAD,CA5DA,AA4DC,CA5D8B,mBAAQ,GA4DtC;AA5DY,8BAAS","file":"tasks/CleanTask.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { GulpTask } from './GulpTask';\r\nimport * as Gulp from 'gulp';\r\nimport * as path from 'path';\r\n\r\nimport { FileDeletionUtility } from '../utilities/FileDeletionUtility';\r\nimport { IBuildConfig } from './../IBuildConfig';\r\n\r\n/**\r\n * The clean task is a special task which iterates through all registered\r\n * tasks and subtasks, collecting a list of patterns which should be deleted.\r\n * An instance of this task is automatically registered to the 'clean' command.\r\n * @public\r\n */\r\nexport class CleanTask extends GulpTask<void> {\r\n  /**\r\n   * Instantiates a new CleanTask with the name 'clean'\r\n   */\r\n  constructor() {\r\n    super('clean');\r\n  }\r\n\r\n  /**\r\n   * The main function, which iterates through all uniqueTasks registered\r\n   * to the build, and by calling the getCleanMatch() function, collects a list of\r\n   * glob patterns which are then passed to the `del` plugin to delete them from disk.\r\n   */\r\n  public executeTask(\r\n    gulp: typeof Gulp,\r\n    completeCallback: (error?: string | Error) => void\r\n  ): void {\r\n    const { distFolder, libFolder, libAMDFolder, tempFolder }: IBuildConfig = this.buildConfig;\r\n    let cleanPaths: string[] = [\r\n      distFolder,\r\n      libFolder,\r\n      tempFolder\r\n    ];\r\n\r\n    if (libAMDFolder) {\r\n      cleanPaths.push(libAMDFolder);\r\n    }\r\n\r\n    // Give each registered task an opportunity to add their own clean paths.\r\n    for (const executable of this.buildConfig.uniqueTasks || []) {\r\n      if (executable.getCleanMatch) {\r\n        // Set the build config, as tasks need this to build up paths\r\n        cleanPaths = cleanPaths.concat(executable.getCleanMatch(this.buildConfig));\r\n      }\r\n    }\r\n\r\n    const uniquePaths: { [key: string]: string } = {};\r\n\r\n    // Create dictionary of unique paths. (Could be replaced with ES6 set.)\r\n    cleanPaths.forEach(cleanPath => {\r\n      if (!!cleanPath) {\r\n        uniquePaths[cleanPath] = cleanPath;\r\n      }\r\n    });\r\n\r\n    // Reset cleanPaths to only unique non-empty paths.\r\n    cleanPaths = [];\r\n    for (const uniquePath in uniquePaths) {\r\n      if (uniquePaths.hasOwnProperty(uniquePath)) {\r\n        cleanPaths.push(uniquePath);\r\n      }\r\n    }\r\n\r\n    try {\r\n      FileDeletionUtility.deletePatterns(cleanPaths);\r\n      completeCallback();\r\n    } catch (e) {\r\n      completeCallback(e);\r\n    }\r\n  }\r\n}"],"sourceRoot":"..\\..\\src"}
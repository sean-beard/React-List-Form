"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var CleanTask_1 = require("./CleanTask");
/**
 * This task runs at the start of any command if the --clean or -c parameter is specified
 * @public
 */
var CleanFlagTask = (function (_super) {
    __extends(CleanFlagTask, _super);
    function CleanFlagTask() {
        var _this = _super.call(this) || this;
        /** Instantiates a new CleanTask with the name 'clean' */
        _this._hasRun = false;
        return _this;
    }
    CleanFlagTask.prototype.isEnabled = function (buildConfig) {
        // tslint:disable-next-line:no-string-literal
        var shouldRun = (!!buildConfig.args['clean'] || !!buildConfig.args['c'])
            && this._hasRun === false;
        return shouldRun;
    };
    CleanFlagTask.prototype.executeTask = function (gulp, completeCallback) {
        var _this = this;
        _super.prototype.executeTask.call(this, gulp, function () {
            _this._hasRun = true;
            completeCallback();
        });
    };
    return CleanFlagTask;
}(CleanTask_1.CleanTask));
exports.CleanFlagTask = CleanFlagTask;

//# sourceMappingURL=CleanFlagTask.js.map

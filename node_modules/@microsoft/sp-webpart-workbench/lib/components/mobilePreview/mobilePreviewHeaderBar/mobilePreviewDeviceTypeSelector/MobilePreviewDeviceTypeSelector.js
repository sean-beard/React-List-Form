"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var office_ui_fabric_react_1 = require("office-ui-fabric-react");
var MobilePreviewDeviceTypeSelector_module_scss_1 = require("./MobilePreviewDeviceTypeSelector.module.scss");
var MobilePreview_1 = require("../../mobilePreview/MobilePreview");
var MobilePreviewDeviceTypeSelector = (function (_super) {
    __extends(MobilePreviewDeviceTypeSelector, _super);
    function MobilePreviewDeviceTypeSelector() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewDeviceTypeSelector.prototype.render = function () {
        var _this = this;
        var spanClassNameMobile = office_ui_fabric_react_1.css('ms-Icon', 'ms-Icon--CellPhone', 'ms-fontColor-neutralTertiary', MobilePreviewDeviceTypeSelector_module_scss_1.default.mobilePreviewDeviceIcon);
        var spanClassNameTablet = office_ui_fabric_react_1.css('ms-Icon', 'ms-Icon--Tablet', 'ms-fontColor-neutralTertiary', MobilePreviewDeviceTypeSelector_module_scss_1.default.mobilePreviewDeviceIcon);
        return (React.createElement("div", null,
            React.createElement("div", { className: MobilePreviewDeviceTypeSelector_module_scss_1.default.navBarItemRight },
                React.createElement("a", { tabIndex: 0, role: 'button', onClick: function () { return _this.props.onChangeDeviceType(MobilePreview_1.DeviceType.Phone); } },
                    React.createElement("span", { className: spanClassNameMobile }))),
            React.createElement("div", { className: MobilePreviewDeviceTypeSelector_module_scss_1.default.navBarItemRight },
                React.createElement("a", { tabIndex: 0, role: 'button', onClick: function () { return _this.props.onChangeDeviceType(MobilePreview_1.DeviceType.Tablet); } },
                    React.createElement("span", { className: spanClassNameTablet })))));
    };
    return MobilePreviewDeviceTypeSelector;
}(React.Component));
exports.default = MobilePreviewDeviceTypeSelector;

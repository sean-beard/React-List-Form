"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var decorators_1 = require("@microsoft/decorators");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var BaseExtension_1 = require("../BaseExtension");
var ExtensionContext_1 = require("../ExtensionContext");
var WidgetManager = (function () {
    function WidgetManager() {
    }
    WidgetManager.serviceKey = sp_core_library_1.ServiceKey.create('test:WidgetManager', WidgetManager);
    return WidgetManager;
}());
exports.WidgetManager = WidgetManager;
var WidgetContext = (function (_super) {
    __extends(WidgetContext, _super);
    function WidgetContext(parameters) {
        var _this = _super.call(this, parameters) || this;
        _this.extraThing = parameters.extraThing;
        return _this;
    }
    return WidgetContext;
}(ExtensionContext_1.default));
var WidgetExtension = (function (_super) {
    __extends(WidgetExtension, _super);
    function WidgetExtension() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WidgetExtension.prototype.onInit = function () {
        var _this = this;
        this.context.serviceScope.whenFinished(function () {
            _this.timeProvider = _this.context.serviceScope.consume(sp_core_library_1.TimeProvider.serviceKey);
        });
        return _super.prototype.onInit.call(this);
    };
    WidgetExtension.prototype.onProvideServices = function (serviceScope) {
        serviceScope.createDefaultAndProvide(WidgetManager.serviceKey);
    };
    __decorate([
        decorators_1.override
    ], WidgetExtension.prototype, "onInit", null);
    __decorate([
        decorators_1.override
    ], WidgetExtension.prototype, "onProvideServices", null);
    return WidgetExtension;
}(BaseExtension_1.default));
exports.default = BaseExtension_1.default;
describe('BaseExtension', function () {
    it('BaseExtension.services should be extendable', function (done) {
        var rootScope = sp_core_library_1.ServiceScope.startNewRoot();
        rootScope.createDefaultAndProvide(WidgetManager.serviceKey);
        rootScope.finish();
        var widgetContext = new WidgetContext({
            manifest: {},
            parentServiceScope: rootScope,
            loggingTag: 'test',
            instanceId: 'instanceId',
            extraThing: 'hello'
        });
        var widget = new WidgetExtension();
        widget._init(widgetContext, undefined).then(function () {
            chai_1.assert.isOk(widget.context.serviceScope);
            chai_1.assert.isOk(widget.context.httpClient);
            chai_1.assert.isOk(widget.context.spHttpClient);
            chai_1.assert.isOk(widget.timeProvider);
            chai_1.assert.notEqual(widget.context.serviceScope.consume(WidgetManager.serviceKey), rootScope.consume(WidgetManager.serviceKey));
            done();
        }).catch(function (error) {
            done(error);
        });
    });
});

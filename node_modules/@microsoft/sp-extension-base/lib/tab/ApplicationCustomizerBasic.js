var ApplicationCustomizerBasic = (function () {
    function ApplicationCustomizerBasic(serverURL) {
        this._serverURL = serverURL;
    }
    ApplicationCustomizerBasic.prototype.TestName = function () {
        return 'ApplicationCustomizer Basic Test';
    };
    ApplicationCustomizerBasic.prototype.TestOwner = function () {
        return 'dagaeta';
    };
    ApplicationCustomizerBasic.prototype.TestIncludeScripts = function () {
        return [
            '<ProductScriptsLocation>msajaxbundle.debug.js',
            '<ProductScriptsLocation>sp.runtime.debug.js',
            '<ProductScriptsLocation>sp.debug.js',
            '<TestLocation>/TabTaskLib.debug.js',
            '<AzureTaskLibLocation>/sp-tab-tasklib.js'
        ];
    };
    ApplicationCustomizerBasic.prototype.TestSetup = function () {
        TAB.Log.Comment('ApplicationCustomizer basic test start');
    };
    ApplicationCustomizerBasic.prototype.TestRun = function () {
        var newsPagePath = '/_layouts/15/news.aspx';
        var customActionParams = '{"e6ebfc48-d18a-46c2-ad11-8133c5badf5e":' +
            '{"location":"ClientSideExtension.ApplicationCustomizer",' +
            '"properties":{"headerMessage":"Header area of the page","footerMessage":"Footer area in the page"}}}';
        var spQueryParams = {
            loadSPFX: true,
            customActions: customActionParams,
            debugManifestsFile: SPTaskLib.PageUtil.GetDebugManifestsUrl()
        };
        var pageUrl = SPTaskLib.PageUtil.CreatePageUrl(newsPagePath, spQueryParams);
        TAB.AddTask(TAB.LoadPage(pageUrl));
        SPTaskLib.PageUtil.AddTaskClearSecurityDialog(SPTaskLib.PageUtil.SPPageReady());
        SPTaskLib.PageUtil.AddTaskValidateAutomationIdExists('HeaderPlaceholderMessage');
        SPTaskLib.PageUtil.AddTaskValidateAutomationIdExists('FooterPlaceholderMessage');
        TAB.Log.AddTaskPass('Test complete');
    };
    return ApplicationCustomizerBasic;
}());
TabTest = ApplicationCustomizerBasic;

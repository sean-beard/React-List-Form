"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Validate_1 = require("./Validate");
var SPCoreLibraryStrings_resx_1 = require("./SPCoreLibraryStrings.resx");
var SPError = (function (_super) {
    __extends(SPError, _super);
    function SPError(errorCode, message, logProperties) {
        var _this = _super.call(this, message) || this;
        _this.__proto__ = SPError.prototype; 
        Validate_1.default.isNonemptyString(errorCode, 'errorCode');
        Validate_1.default.isNonemptyString(message, 'message');
        _this._errorCode = errorCode;
        _this.message = message;
        _this._logProperties = logProperties;
        _this.stack = (new Error()).stack || SPError._generateErrorStackForIE();
        return _this;
    }
    Object.defineProperty(SPError.prototype, "id", {
        get: function () {
            return -1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPError.prototype, "category", {
        get: function () {
            return 'SPError';
        },
        enumerable: true,
        configurable: true
    });
    SPError._generateErrorStackForIE = function () {
        try {
            throw new Error();
        }
        catch (e) {
            return e.stack;
        }
    };
    SPError.prototype.toStringForUI = function () {
        return this._toString(true);
    };
    SPError.prototype.toString = function () {
        return this._toString();
    };
    SPError.prototype._toString = function (logDebug) {
        if (!this._errorString) {
            var errorMessageArray = [
                "[" + this.category + "." + this._errorCode + "]:",
                "" + this.message,
                ''
            ];
            if (logDebug || DEBUG) {
                if (this.innerError) {
                    errorMessageArray = errorMessageArray.concat([
                        SPCoreLibraryStrings_resx_1.default.spErrorInnerErrorText,
                        this.innerError.message
                    ]);
                }
                if (this.stack) {
                    errorMessageArray = errorMessageArray.concat([
                        SPCoreLibraryStrings_resx_1.default.spErrorCallStackText,
                        this.stack
                    ]);
                }
                if (this._logProperties) {
                    errorMessageArray = errorMessageArray.concat([
                        SPCoreLibraryStrings_resx_1.default.spErrorLogPropertiesText,
                        JSON.stringify(this._logProperties)
                    ]);
                }
            }
            this._errorString = errorMessageArray.join('\r\n');
        }
        return this._errorString;
    };
    return SPError;
}(Error));
exports.default = SPError;

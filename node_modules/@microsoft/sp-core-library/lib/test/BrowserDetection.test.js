"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var BrowserDetection_1 = require("../BrowserDetection");
var Version_1 = require("../Version");
describe('BrowserDetection', function () {
    it('can detect Chrome 41, Vista', function () {
        evaluateAgent('Mozilla/5.0 (Windows NT 6.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36', {
            browser: BrowserDetection_1.Browser.Chrome,
            browserVersion: Version_1.default.parse('41.0.2228.0'),
            os: BrowserDetection_1.OS.Windows,
            osVersion: '6.0'
        });
    });
    it('can detect IE 8 Windows 7', function () {
        evaluateAgent('Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; InfoPath.1; SV1; .NET CLR 3.8.36217; WOW64; en-US)', {
            browser: BrowserDetection_1.Browser.IE,
            browserVersion: Version_1.default.parse('8.0'),
            os: BrowserDetection_1.OS.Windows,
            osVersion: '7'
        });
    });
    it('can detect IE 9 Windows 7', function () {
        evaluateAgent('Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 2.0.50727; SLCC2; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Zune 4.0; Tablet PC 2.0; InfoPath.3; .NET4.0C; .NET4.0E)', {
            browser: BrowserDetection_1.Browser.IE,
            browserVersion: Version_1.default.parse('9.0'),
            os: BrowserDetection_1.OS.Windows,
            osVersion: '7'
        });
    });
    it('can detect IE 10 Windows 7', function () {
        evaluateAgent('Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/4.0; InfoPath.2; SV1; .NET CLR 2.0.50727; WOW64)', {
            browser: BrowserDetection_1.Browser.IE,
            browserVersion: Version_1.default.parse('10.0'),
            os: BrowserDetection_1.OS.Windows,
            osVersion: '7'
        });
    });
    it('can detect IE 11 Windows 8.1', function () {
        evaluateAgent('Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; Touch; rv:11.0) like Gecko', {
            browser: BrowserDetection_1.Browser.IE,
            browserVersion: Version_1.default.parse('11.0'),
            os: BrowserDetection_1.OS.Windows,
            osVersion: '8.1'
        });
    });
    it('can detect Edge, Windows 10', function () {
        evaluateAgent('Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0', {
            browser: BrowserDetection_1.Browser.Edge,
            browserVersion: Version_1.default.parse('12.0'),
            os: BrowserDetection_1.OS.Windows,
            osVersion: '10'
        });
    });
    it('can detect Edge 13, Windows 10', function () {
        evaluateAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586', {
            browser: BrowserDetection_1.Browser.Edge,
            browserVersion: Version_1.default.parse('13.10586'),
            os: BrowserDetection_1.OS.Windows,
            osVersion: '10'
        });
    });
    it('can detect mobile Edge 13, Windows 10', function () {
        evaluateAgent('Mozilla/5.0 (Windows Phone 10.0; Android 4.2.1; Microsoft; Lumia 950 XL Dual SIM) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Mobile Safari/537.36 Edge/13.10586', {
            browser: BrowserDetection_1.Browser.Edge,
            browserVersion: Version_1.default.parse('13.10586'),
            os: BrowserDetection_1.OS.WindowsPhone,
            osVersion: '10.0'
        });
    });
    it('can detect Firefox 36, Windows 8.1', function () {
        evaluateAgent('Mozilla/5.0 (Windows NT 6.3; rv:36.0) Gecko/20100101 Firefox/36.0', {
            browser: BrowserDetection_1.Browser.Firefox,
            browserVersion: Version_1.default.parse('36.0'),
            os: BrowserDetection_1.OS.Windows,
            osVersion: '8.1'
        });
    });
    it('can detect Safari 7.0.3, OSX 10.9.3', function () {
        evaluateAgent('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A', {
            browser: BrowserDetection_1.Browser.Safari,
            browserVersion: Version_1.default.parse('7.0.3'),
            os: BrowserDetection_1.OS.Mac,
            osVersion: '10_9_3'
        });
    });
    it('can detect IOS IPhone 6', function () {
        evaluateAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4', {
            browser: BrowserDetection_1.Browser.Safari,
            browserVersion: Version_1.default.parse('8.0'),
            os: BrowserDetection_1.OS.IOS,
            osVersion: '8_0_2'
        });
    });
    it('can detect IOS IPad Air', function () {
        evaluateAgent('Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25', {
            browser: BrowserDetection_1.Browser.Safari,
            browserVersion: Version_1.default.parse('6.0'),
            os: BrowserDetection_1.OS.IOS,
            osVersion: '6_0'
        });
    });
    it('can detect Android Webkit browser HTC Phone', function () {
        evaluateAgent('Mozilla/5.0 (Linux; U; Android 4.0.3; de-ch; HTC Sensation Build/IML74K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30', {
            browser: BrowserDetection_1.Browser.Safari,
            browserVersion: Version_1.default.parse('4.0'),
            os: BrowserDetection_1.OS.Android,
            osVersion: '4.0.3'
        });
    });
    it('can detect Windows Phone 7.5', function () {
        evaluateAgent('Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0)', {
            browser: BrowserDetection_1.Browser.IE,
            browserVersion: Version_1.default.parse('9.0'),
            os: BrowserDetection_1.OS.WindowsPhone,
            osVersion: '7.5'
        });
    });
    it('can detect Windows Phone 8', function () {
        evaluateAgent('Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 920)', {
            browser: BrowserDetection_1.Browser.IE,
            browserVersion: Version_1.default.parse('10.0'),
            os: BrowserDetection_1.OS.WindowsPhone,
            osVersion: '8.0'
        });
    });
    it('can handle weird browser version', function () {
        evaluateAgent('Mozilla/5.0 (compatible; MSIE 10.; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 920)', {
            browser: BrowserDetection_1.Browser.IE,
            browserVersion: Version_1.default.parse('10.0'),
            os: BrowserDetection_1.OS.WindowsPhone,
            osVersion: '8.0'
        });
    });
    it('can detect Mobile for WebView in Facebook iOS App', function () {
        evaluateAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Mobile/12H143 [FBAN/FBIOS;FBAV/36.0.0.40.231;FBBV/13431455;FBDV/iPhone7,2;FBMD/iPhone;FBSN/iPhone OS;FBSV/8.4;FBSS/2; FBCR/Sprint;FBID/phone;FBLC/en_US;FBOP/5]', {
            browser: BrowserDetection_1.Browser.Other,
            browserVersion: undefined,
            os: BrowserDetection_1.OS.IOS,
            osVersion: '8_4'
        });
    });
    it('can detect Firefox Mobile on iOS', function () {
        evaluateAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 10_1_1 like Mac OS X) AppleWebKit/602.2.14 (KHTML, like Gecko) FxiOS/5.3 Mobile/14B100 Safari/602.2.14', {
            browser: BrowserDetection_1.Browser.Firefox,
            browserVersion: Version_1.default.parse('5.3'),
            os: BrowserDetection_1.OS.IOS,
            osVersion: '10_1_1'
        });
    });
});
function evaluateAgent(agent, expectedResult) {
    var browserInfo = BrowserDetection_1.default.getBrowserInformation(agent);
    chai_1.expect(browserInfo.browser).to.be.equal(expectedResult.browser);
    chai_1.expect(browserInfo.browserVersion).to.be.deep.equal(expectedResult.browserVersion);
    chai_1.expect(browserInfo.os).to.be.equal(expectedResult.os);
    chai_1.expect(browserInfo.osVersion).to.be.equal(expectedResult.osVersion);
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DISABLED_FLIGHT_PREFIX = '!';
var SPFlight = (function () {
    function SPFlight() {
    }
    SPFlight.initialize = function (flights, debugFlights) {
        this._isInitialized = true;
        this._enabledFlightsMap = flights || [];
        if (debugFlights && debugFlights.length > 0) {
            try {
                var debugFlightStrings = debugFlights.split(',');
                this._forceEnabledFlights = debugFlightStrings
                    .filter(function (value) { return value[0] !== DISABLED_FLIGHT_PREFIX; })
                    .map(function (value) { return parseInt(value, 10); })
                    .filter(function (value) { return !isNaN(value); });
                this._forceDisabledFlights = debugFlightStrings
                    .filter(function (value) { return value[0] === DISABLED_FLIGHT_PREFIX; })
                    .map(function (value) { return parseInt(value.slice(1), 10); })
                    .filter(function (value) { return !isNaN(value); });
                console.log("Debug flights are enabled.");
                if (this._forceEnabledFlights.length > 0) {
                    console.log("Enabled flights: " + this._forceEnabledFlights.join(', '));
                }
                if (this._forceDisabledFlights.length > 0) {
                    console.log("Disabled flights: " + this._forceDisabledFlights.join(', '));
                }
            }
            catch (error) {
                this._forceEnabledFlights = [];
                this._forceDisabledFlights = [];
                console.log("Error parsing debugFlights query string parameter: " + error);
            }
        }
        else {
            this._forceEnabledFlights = [];
            this._forceDisabledFlights = [];
        }
        this._validateDebugFlights();
    };
    SPFlight.isEnabled = function (flight) {
        if (!this._isInitialized && !UNIT_TEST) {
            throw new Error("Flights are not initialized. Flight requested: " + flight);
        }
        if (!flight || flight < 0) {
            return false;
        }
        if (this._forceEnabledFlights.indexOf(flight) !== -1) {
            return true;
        }
        if (this._forceDisabledFlights.indexOf(flight) !== -1) {
            return false;
        }
        var enabledFlightsIndex = flight >> 5;
        if (enabledFlightsIndex < 0 || enabledFlightsIndex >= this._enabledFlightsMap.length) {
            return false;
        }
        var bitMask = 1 << (flight & 31);
        return (this._enabledFlightsMap[enabledFlightsIndex] & bitMask) !== 0;
    };
    SPFlight._validateDebugFlights = function () {
        var debugFlightsSet = new Set(this._forceEnabledFlights.concat(this._forceDisabledFlights));
        if (debugFlightsSet.size < (this._forceEnabledFlights.length + this._forceDisabledFlights.length)) {
            throw new Error('There are flights that are forced to be both enabled and disabled');
        }
    };
    SPFlight._isInitialized = false;
    SPFlight._forceEnabledFlights = [];
    SPFlight._forceDisabledFlights = [];
    SPFlight._enabledFlightsMap = [];
    return SPFlight;
}());
exports.default = SPFlight;

"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var gulp_core_build_1 = require("@microsoft/gulp-core-build");
var TextTask = (function (_super) {
    __extends(TextTask, _super);
    function TextTask() {
        return _super.call(this, 'text', {
            textMatch: ['src/**/*.txt']
        }) || this;
    }
    TextTask.prototype.executeTask = function (gulp) {
        /* tslint:disable:typedef */
        var merge = require('merge2');
        var texttojs = require('gulp-texttojs');
        var textMatch = this.taskConfig.textMatch;
        var _a = this.buildConfig, libFolder = _a.libFolder, libAMDFolder = _a.libAMDFolder;
        /* tslint:enable:typedef */
        if (textMatch) {
            var commonJSTextStream = gulp.src(textMatch)
                .pipe(texttojs({
                template: 'module.exports = <%= content %>;'
            }))
                .pipe(gulp.dest(libFolder));
            if (libAMDFolder) {
                return merge(commonJSTextStream, gulp.src(textMatch)
                    .pipe(texttojs())
                    .pipe(gulp.dest(libAMDFolder)));
            }
            else {
                return commonJSTextStream;
            }
        }
    };
    return TextTask;
}(gulp_core_build_1.GulpTask));
exports.TextTask = TextTask;

//# sourceMappingURL=TextTask.js.map

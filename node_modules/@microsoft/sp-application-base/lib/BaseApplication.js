"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = require("@microsoft/decorators");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var sp_core_library_2 = require("@microsoft/sp-core-library");
var SuiteNavManagerConfiguration_1 = require("./suiteNav/SuiteNavManagerConfiguration");
var SPThemeProvider_1 = require("./pageChrome/SPThemeProvider");
var BaseApplication = (function () {
    function BaseApplication() {
        this._shell = undefined;
        this._domElement = undefined;
        this['__type'] = 'BaseApplication';
    }
    Object.defineProperty(BaseApplication.prototype, "shell", {
        get: function () {
            sp_core_library_1.Validate.isNotNullOrUndefined(this._shell, 'shell');
            return this._shell;
        },
        set: function (value) {
            throw new Error('The property cannot be assigned because it is read-only');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseApplication.prototype, "domElement", {
        get: function () {
            sp_core_library_1.Validate.isNotNullOrUndefined(this._domElement, 'domElement');
            return this._domElement;
        },
        set: function (value) {
            throw new Error('The property cannot be assigned because it is read-only');
        },
        enumerable: true,
        configurable: true
    });
    BaseApplication.prototype._load = function (shell) {
        this._shell = shell;
        this.onLoad();
    };
    BaseApplication.prototype._render = function (domElement) {
        this._domElement = domElement;
        this.onRender();
    };
    BaseApplication.prototype._dispose = function () {
        this.onDispose();
        this._shell = undefined;
        this._domElement = undefined;
    };
    BaseApplication.prototype.getBrowserCompatibility = function () {
        return {
            supportLevel: sp_core_library_1.BrowserSupportLevel.None,
            warning: undefined
        };
    };
    BaseApplication.prototype.suiteNavConfiguration = function () {
        return new SuiteNavManagerConfiguration_1.default({
            currentUICultureName: this.shell.pageContext.cultureInfo.currentUICultureName,
            disableSuiteNav: this._shouldDisableSuiteNav(),
            settingsData: this.shell.pageContext.legacyPageContext.MenuData ?
                this.shell.pageContext.legacyPageContext.MenuData.SettingsData :
                undefined,
            signoutUrl: this.shell.pageContext.legacyPageContext.MenuData ?
                this.shell.pageContext.legacyPageContext.MenuData.SignOutUrl :
                undefined,
            siteClientTag: this.shell.pageContext.legacyPageContext.siteClientTag,
            systemUserKey: this.shell.pageContext.legacyPageContext.systemUserKey,
            webServerRelativeUrl: this.shell.pageContext.web.serverRelativeUrl
        });
    };
    BaseApplication.prototype.onLoad = function () {
    };
    BaseApplication.prototype.onRender = function () {
    };
    BaseApplication.prototype.onDispose = function () {
    };
    BaseApplication.prototype._loadTheme = function () {
        var themeProvider = new SPThemeProvider_1.default(this.shell.serviceScope);
        themeProvider.loadThemedStyles();
    };
    BaseApplication.prototype.raiseNavigatedEvent = function () {
        sp_core_library_2._EventManager.instance._raiseEvent(BaseApplication._navigatedEventName, {});
    };
    BaseApplication.prototype.raiseLayoutChangedEvent = function () {
        sp_core_library_2._EventManager.instance._raiseEvent(BaseApplication._layoutChangedEventName, {});
    };
    BaseApplication.prototype._shouldDisableSuiteNav = function () {
        var urlQueryParams = new sp_core_library_1.UrlQueryParameterCollection(window.location.href);
        return window.location.hostname === 'localhost' ||
            urlQueryParams.getValue('disableSuiteNav') === 'true' ?
            true :
            false;
    };
    BaseApplication._navigatedEventName = 'application.navigatedEvent';
    BaseApplication._layoutChangedEventName = 'application.layoutChangedEvent';
    __decorate([
        decorators_1.virtual
    ], BaseApplication.prototype, "getBrowserCompatibility", null);
    __decorate([
        decorators_1.virtual
    ], BaseApplication.prototype, "onLoad", null);
    __decorate([
        decorators_1.virtual
    ], BaseApplication.prototype, "onRender", null);
    __decorate([
        decorators_1.virtual
    ], BaseApplication.prototype, "onDispose", null);
    return BaseApplication;
}());
exports.default = BaseApplication;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var lodash = require("@microsoft/sp-lodash-subset");
var odsp_utilities_bundle_1 = require("@ms/odsp-utilities-bundle");
var odsp_utilities_bundle_2 = require("@ms/odsp-utilities-bundle");
var odsp_utilities_bundle_3 = require("@ms/odsp-utilities-bundle");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var sp_telemetry_1 = require("@ms/sp-telemetry");
var sp_http_1 = require("@microsoft/sp-http");
var sp_page_context_1 = require("@microsoft/sp-page-context");
var SPWebTemplateIds_1 = require("./SPWebTemplateIds");
var theme_1 = require("@uifabric/styling/lib/styles/theme");
var SPThemeProvider = (function () {
    function SPThemeProvider(serviceScope) {
        var _this = this;
        if (DEBUG) {
            window['__loadTheme'] = theme_1.loadTheme; 
        }
        serviceScope.whenFinished(function () {
            _this._pageContext = serviceScope.consume(sp_page_context_1.PageContext.serviceKey);
            _this._httpClient = serviceScope.consume(sp_http_1.SPHttpClient.serviceKey);
            _this._themeProvider = new odsp_utilities_bundle_3.ThemeProvider(_this.loadData.bind(_this));
            try {
                var contextUri = new odsp_utilities_bundle_3.Uri(window.location.href);
                _this._themeOverride = contextUri.getQueryParameter('ThemeOverride');
            }
            catch (ignoredUrlException) {
            }
        });
    }
    SPThemeProvider._deleteNullThemeColor = function (palette) {
        for (var color in palette) {
            if (palette.hasOwnProperty(color) && !palette[color]) {
                delete palette[color];
            }
        }
    };
    Object.defineProperty(SPThemeProvider, "_dontOptimizeLoadTheme", {
        get: function () {
            return sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.parse('{433B8077-ACC7-42F1-A11F-F6C38EC90607}'), '7/31/2017', 'Do not optimize loadTheme for empty color palette');
        },
        enumerable: true,
        configurable: true
    });
    SPThemeProvider._createDefaultTheme = function () {
        var themeData = {
            backgroundImageUri: undefined,
            cacheToken: undefined,
            isDefault: undefined,
            isInverted: false,
            palette: undefined,
            version: '1.0'
        };
        return themeData;
    };
    SPThemeProvider.prototype.loadThemedStyles = function () {
        var cacheToken = this._getCacheToken();
        this._themeProvider.loadThemeTokenMap(cacheToken)
            .then(function (palette) {
            SPThemeProvider._deleteNullThemeColor(palette);
            if (SPThemeProvider._dontOptimizeLoadTheme ||
                SPThemeProvider._currentPalette ?
                !lodash.isEqual(SPThemeProvider._currentPalette, palette) :
                !lodash.isEmpty(palette)) {
                theme_1.loadTheme({ palette: palette });
            }
            SPThemeProvider._currentPalette = palette;
        });
    };
    SPThemeProvider.prototype.loadData = function () {
        var _this = this;
        var tagName = 'SPThemeProvider.loadData';
        var qosMonitor = new sp_telemetry_1._QosMonitor(tagName);
        if (this._pageContext.legacyPageContext.themedCssFolderUrl) {
            var getThemeDataUrl_1 = odsp_utilities_bundle_3.WebTheme.makeWebThemeRestUrl(this._pageContext.site.serverRelativeUrl, this._pageContext.cultureInfo.currentUICultureName, this._themeOverride);
            return new odsp_utilities_bundle_1.Promise(function (resolve, reject) {
                _this._httpClient.get(getThemeDataUrl_1, sp_http_1.SPHttpClient.configurations.v1)
                    .then(function (response) {
                    if (response.status === 200) {
                        return response.json()
                            .then(function (json) {
                            var themeDataRaw = JSON.parse(json.value);
                            if (themeDataRaw) {
                                var themeData = odsp_utilities_bundle_3.WebTheme.processRawThemeData(themeDataRaw);
                                themeData.cacheToken = _this._pageContext.legacyPageContext.themedCssFolderUrl;
                                qosMonitor.writeSuccess();
                                resolve(themeData);
                            }
                            else {
                                qosMonitor.writeUnexpectedFailure();
                                resolve(undefined);
                            }
                        });
                    }
                    else {
                        qosMonitor.writeUnexpectedFailure(tagName, new Error(response.statusText));
                        resolve(undefined);
                    }
                });
            });
        }
        else if (this._pageContext.legacyPageContext.groupColor) {
            var htmlThemeColor = this._pageContext.legacyPageContext.groupColor;
            var rgbaThemeColor = odsp_utilities_bundle_2.RgbaColor.fromHtmlColor(htmlThemeColor);
            if (rgbaThemeColor) {
                var fabTheme = {
                    backgroundImageUri: undefined,
                    cacheToken: this._getCacheToken(),
                    isDefault: false,
                    isInverted: false,
                    palette: odsp_utilities_bundle_2.FabricTheming.generateFabricColors(rgbaThemeColor),
                    version: '1'
                };
                return odsp_utilities_bundle_1.Promise.wrap(fabTheme);
            }
            else {
                return odsp_utilities_bundle_1.Promise.wrap();
            }
        }
        else {
            qosMonitor.writeSuccess();
            return odsp_utilities_bundle_1.Promise.wrap(SPThemeProvider._createDefaultTheme());
        }
    };
    SPThemeProvider.prototype._getCacheToken = function () {
        var webTemplate = String(this._pageContext.web.templateName);
        var groupColor = webTemplate === SPWebTemplateIds_1.default.teamSite ||
            webTemplate === SPWebTemplateIds_1.default.groupSite ? this._pageContext.legacyPageContext.groupColor : undefined;
        var groupColorToken = groupColor && (groupColor + ';web#' + webTemplate);
        return this._themeOverride || this._pageContext.legacyPageContext.themedCssFolderUrl || groupColorToken;
    };
    SPThemeProvider._currentPalette = undefined;
    return SPThemeProvider;
}());
exports.default = SPThemeProvider;

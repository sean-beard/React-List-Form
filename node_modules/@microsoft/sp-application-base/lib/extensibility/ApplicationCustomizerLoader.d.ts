import { ServiceScope } from '@microsoft/sp-core-library';
import { SPHttpClient } from '@microsoft/sp-http';
import { PageContext } from '@microsoft/sp-page-context';
import { _IPreloadedCustomAction } from '@microsoft/sp-loader';
/**
 * This is just an empty interface to represent the type of the extension properties
 */
export interface IGenericExtensionProperties {
}
/**
 * A helper class for loading ApplicationCustomizer extensions.
 */
export default class ApplicationCustomizerLoader {
    private static _logSource;
    private _extensionManager;
    private _spHttpClient;
    private _customActions;
    private _pageContext;
    private _placeholderManager;
    private _customActionContext;
    constructor(serviceScope: ServiceScope, pageContext: PageContext, spHttpClient: SPHttpClient, customActions?: _IPreloadedCustomAction[]);
    /**
     * This method is called when the client-side application is initializing and before it has
     * rendered. It loads the associated client-side extensions. It may perform asynchronous
     * operations.
     */
    loadExtensions(): Promise<void>;
    /**
     * This method is called after the client-side application has started rendering.
     * It calls BaseApplicationCustomizer.onRender() for each extension.
     */
    notifyRendered(): void;
    private _createApplicationCustomizer(customAction);
    private _parseCustomActionsQueryParameter();
}

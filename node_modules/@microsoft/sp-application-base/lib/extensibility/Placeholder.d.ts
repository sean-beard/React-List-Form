import PlaceholderContent from './PlaceholderContent';
import PlaceholderManager from './PlaceholderManager';
import PlaceholderName from './PlaceholderName';
import { IPlaceholderCreateContentOptions } from './PlaceholderProvider';
/**
 * Constuctor parameters for Placeholder.
 *
 * @internal
 */
export interface IPlaceholderDefinition {
    /**
     * The placeholder name.
     */
    readonly name: PlaceholderName;
    /**
     * The application's DOM element. The placeholder will be attached as
     * a child of a child of this element.
     */
    readonly domElement: HTMLDivElement;
}
/**
 * Represents the placeholder div provided by the application
 *
 * @internal
 */
export default class Placeholder {
    private _name;
    private _domElement;
    private _manager;
    private _entries;
    constructor(definition: IPlaceholderDefinition, manager: PlaceholderManager);
    readonly name: PlaceholderName;
    /**
     * Create a new placeholder content for this placeholder
     */
    createPlaceholderContent(sequence: number, options?: IPlaceholderCreateContentOptions): PlaceholderContent;
    removePlaceholderContent(placeholderContent: PlaceholderContent): void;
    dispose(): void;
}

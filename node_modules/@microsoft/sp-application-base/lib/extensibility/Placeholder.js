"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = require("@microsoft/sp-core-library");
var PlaceholderContent_1 = require("./PlaceholderContent");
var Placeholder = (function () {
    function Placeholder(definition, manager) {
        this._entries = [];
        sp_core_library_1.Validate.isNotNullOrUndefined(definition, 'definition');
        sp_core_library_1.Validate.isNotNullOrUndefined(definition.domElement, 'definition.domElement');
        sp_core_library_1.Validate.isNotNullOrUndefined(manager, 'manager');
        this._name = definition.name;
        this._domElement = definition.domElement;
        this._manager = manager;
    }
    Object.defineProperty(Placeholder.prototype, "name", {
        get: function () {
            return this._name;
        },
        enumerable: true,
        configurable: true
    });
    Placeholder.prototype.createPlaceholderContent = function (sequence, options) {
        var newDiv = document.createElement('div');
        var i = 0;
        while (i < this._entries.length && sequence >= this._entries[i].sequence) {
            i++;
        }
        if (i < this._entries.length - 1) {
            var nextDiv = this._entries[i + 1].placeholderContent.domElement;
            this._domElement.insertBefore(newDiv, nextDiv);
        }
        else {
            this._domElement.appendChild(newDiv);
        }
        var placeholderContent = new PlaceholderContent_1.default({
            placeholder: this,
            sequence: sequence,
            domElement: newDiv,
            options: options
        });
        this._entries.splice(i, 0, { placeholderContent: placeholderContent, sequence: sequence });
        return placeholderContent;
    };
    Placeholder.prototype.removePlaceholderContent = function (placeholderContent) {
        for (var i = 0; i < this._entries.length; i++) {
            if (this._entries[i].placeholderContent === placeholderContent) {
                this._domElement.removeChild(this._entries[i].placeholderContent.domElement);
                this._entries.splice(i, 1);
            }
        }
    };
    Placeholder.prototype.dispose = function () {
        for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {
            var entry = _a[_i];
            entry.placeholderContent.dispose();
        }
        this._entries = [];
    };
    return Placeholder;
}());
exports.default = Placeholder;

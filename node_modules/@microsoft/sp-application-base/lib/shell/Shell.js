"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var loadThemedStyles = require("@microsoft/load-themed-styles");
var sp_telemetry_1 = require("@ms/sp-telemetry");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var sp_page_context_1 = require("@microsoft/sp-page-context");
var sp_http_1 = require("@microsoft/sp-http");
var SuiteNavManager_1 = require("../suiteNav/SuiteNavManager");
var SPPageChrome_1 = require("../pageChrome/SPPageChrome");
var ApplicationCustomizerLoader_1 = require("../extensibility/ApplicationCustomizerLoader");
var Shell = (function () {
    function Shell() {
    }
    Shell.getInstance = function () {
        if (Shell._instance === undefined) {
            Shell._instance = new Shell();
        }
        return Shell._instance;
    };
    Object.defineProperty(Shell.prototype, "serviceScope", {
        get: function () {
            return this._rootServiceScope;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "pageContext", {
        get: function () {
            return this._pageContext;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "httpClient", {
        get: function () {
            return this._httpClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "spHttpClient", {
        get: function () {
            return this._spHttpClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "suiteNavManager", {
        get: function () {
            return this._suiteNav;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "environment", {
        get: function () {
            return this._environment;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "manifestPreloads", {
        get: function () {
            return this._manifestPreloads;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "pageManager", {
        get: function () {
            return this._pageManager;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "applicationCustomizerLoader", {
        get: function () {
            return this._applicationCustomizerLoader;
        },
        enumerable: true,
        configurable: true
    });
    Shell.prototype.start = function (module, preloadedData) {
        var application = module.default ||
            module;
        this._initializePreload(preloadedData, application);
        sp_telemetry_1._PerformanceLogger.markApplicationStart();
        return this._startApplication(application, preloadedData);
    };
    Shell.prototype._startApplication = function (application, preloadedData) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            if (application['__type'] !== 'BaseApplication') {
                reject(new Error('The application is not a subclass of BaseApplication'));
                return;
            }
            var qosMonitor = new sp_telemetry_1._QosMonitor('ClientApplication');
            var qosApplicationData = {
                alias: application.alias || preloadedData.manifests[0].alias,
                isInternal: preloadedData.manifests[0].isInternal,
                manifestId: preloadedData.manifests[0].id
            };
            var appDiv = undefined;
            try {
                _this._application = application;
                _this._application._load(_this);
                if (sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.ClassicSharePoint &&
                    preloadedData.clientSideApplicationId !== 'b1ab4aaa-f779-405c-8683-d3a750b5d18d') {
                    _this._spPageChrome = SPPageChrome_1.default.getInstance(_this._rootServiceScope);
                    _this._suiteNav = new SuiteNavManager_1.default(_this._spPageChrome.suiteNavDiv, _this.serviceScope);
                    if (!_this._application.suiteNavConfiguration().isSuiteNavDisabled()) {
                        _this.suiteNavManager.loadSuiteNav(_this._application.suiteNavConfiguration());
                    }
                    appDiv = _this._spPageChrome.appDiv;
                }
                loadThemedStyles.flush();
                loadThemedStyles.configureRunMode(0 );
                if (sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.ClassicSharePoint) {
                    _this._application._render(appDiv);
                }
                qosMonitor.writeSuccess(qosApplicationData);
                resolve(_this._application);
            }
            catch (e) {
                qosMonitor.writeUnexpectedFailure('GeneralError', e, qosApplicationData);
                reject(e);
            }
        });
    };
    Shell.prototype._initializePreload = function (preloadedData, application) {
        sp_telemetry_1._TraceLogger.logVerbose(Shell._logSource, 'Starting sp-client-preview');
        this._rootServiceScope = sp_core_library_1.ServiceScope.startNewRoot();
        this._rootServiceScope.provide(sp_telemetry_1._logSourceServiceKey, Shell._logSource);
        this._pageManager = this._rootServiceScope
            .createDefaultAndProvide(sp_page_context_1.PageManager.serviceKey);
        this._pageContext = this._rootServiceScope
            .createDefaultAndProvide(sp_page_context_1.PageContext.serviceKey);
        this._httpClient = this._rootServiceScope.createAndProvide(sp_http_1.HttpClient.serviceKey, sp_http_1.HttpClient);
        this._spHttpClient = this._rootServiceScope.createAndProvide(sp_http_1.SPHttpClient.serviceKey, sp_http_1.SPHttpClient);
        var graphContext;
        if (DATACENTER) {
            this._rootServiceScope.createAndProvide(sp_http_1.GraphHttpClient.serviceKey, sp_http_1.GraphHttpClient);
            graphContext = this._rootServiceScope.createAndProvide(sp_http_1._GraphHttpClientContext.serviceKey, sp_http_1._GraphHttpClientContext);
        }
        this._rootServiceScope.finish();
        var INVALID_PAGE_ITEM_ID = -1;
        if (preloadedData.spPageContextInfo.pageItemId === INVALID_PAGE_ITEM_ID &&
            preloadedData.item &&
            preloadedData.item.ID !== INVALID_PAGE_ITEM_ID) {
            preloadedData.spPageContextInfo.pageItemId = preloadedData.item.ID;
        }
        this._pageManager.navigateToPage(preloadedData.spPageContextInfo.webServerRelativeUrl, 
        sp_page_context_1.SharePointPageContextDataProvider._createPageContextData(preloadedData.spPageContextInfo), 
        preloadedData.spPageContextInfo);
        if (DATACENTER && graphContext) {
            graphContext.initialize(this._pageManager.pageContext.web.serverRelativeUrl);
        }
        this._initializeDigestCache(this._rootServiceScope, preloadedData);
        this._manifestPreloads = preloadedData;
        this._manifestPreloads.spPageContextInfo = undefined; 
        return this._loadApplicationCustomizers();
    };
    Shell.prototype._initializeDigestCache = function (serviceScope, preloadedData) {
        sp_core_library_1.Validate.isNotNullOrUndefined(preloadedData, 'preloadedData');
        sp_core_library_1.Validate.isNotNullOrUndefined(preloadedData.contextWebInfo, 'preloadedData.contextWebInfo');
        sp_core_library_1.Validate.isNotNullOrUndefined(preloadedData.spPageContextInfo, 'preloadedData.spPageContextInfo');
        serviceScope.whenFinished(function () {
            var digestCache = serviceScope.consume(sp_http_1.DigestCache.serviceKey);
            sp_telemetry_1._TraceLogger.logVerbose(Shell._logSource, 'Shell: Added preloaded FormDigestValue to cache');
            if (preloadedData.contextWebInfo && preloadedData.spPageContextInfo) {
                var expirationTimestamp = performance.now()
                    + 1000 * preloadedData.contextWebInfo.FormDigestTimeoutSeconds;
                digestCache.addDigestToCache(preloadedData.spPageContextInfo.webServerRelativeUrl, preloadedData.contextWebInfo.FormDigestValue, expirationTimestamp);
                digestCache.addDigestToCache(preloadedData.spPageContextInfo.webAbsoluteUrl, preloadedData.contextWebInfo.FormDigestValue, expirationTimestamp);
            }
        });
    };
    Shell.prototype._loadApplicationCustomizers = function () {
        if (DATACENTER &&
            this.manifestPreloads.clientSideApplicationId !== Shell.classicPagesComponentId &&
            this.manifestPreloads.clientSideApplicationId !== Shell.workbenchComponentId) {
            this._applicationCustomizerLoader =
                new ApplicationCustomizerLoader_1.default(this.serviceScope, this.pageContext, this.spHttpClient, this.manifestPreloads.customActions);
            return this._applicationCustomizerLoader.loadExtensions();
        }
        else {
            sp_telemetry_1._TraceLogger.logVerbose(Shell._logSource, 'Application Customizer is not supported for OnPrem and local workbench.');
            return Promise.resolve();
        }
    };
    Shell.classicPagesComponentId = 'eb4b666b-5c29-4dad-9a99-23613f21a2b7';
    Shell.workbenchComponentId = '8be81a5c-af38-4bb2-af97-afa3b64dfbed';
    Shell._logSource = sp_telemetry_1._LogSource.create('Shell');
    Shell._instance = undefined;
    return Shell;
}());
exports.default = Shell;

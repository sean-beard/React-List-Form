"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/* istanbul ignore next */
var stream = require("stream");
/**
 * A special type of stream which keeps track of everything written to it, which can be read with the readAll() function
 */
var PersistentStream = (function (_super) {
    __extends(PersistentStream, _super);
    function PersistentStream(opts) {
        var _this = _super.call(this, opts) || this;
        _this._buffer = [];
        return _this;
    }
    PersistentStream.prototype._transform = function (chunk, encoding, done) {
        this._buffer.push(chunk.toString());
        done(undefined, chunk.toString());
    };
    PersistentStream.prototype.readAll = function () {
        return this._buffer.join('');
    };
    return PersistentStream;
}(stream.Transform));
exports.default = PersistentStream;

//# sourceMappingURL=PersistentStream.js.map

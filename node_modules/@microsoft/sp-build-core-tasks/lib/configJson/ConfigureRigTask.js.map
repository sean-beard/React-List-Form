{"version":3,"sources":["configJson/ConfigureRigTask.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,iCAA+B;AAC/B,8BAAgC;AAEhC,kDAA6C;AAE7C,iCAKiB;AAEjB,IAAM,kBAAkB,GAAW,SAAS,CAAC;AAE7C;IAAsC,oCAAkB;IACtD;eACE,kBAAM,wBAAwB,CAAC;IACjC,CAAC;IAEM,sCAAW,GAAlB,UAAmB,IAAiB,EAAE,gBAA0C;QAC9E,IAAI,CAAC;YACH,IAAM,YAAY,GAAsB,sBAAc,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACnF,EAAE,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,UAAU,CAAC,6FAA6F;oBAC7F,+BAA+B,CAAC,CAAC;YACnD,CAAC;YAED,EAAE,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC3B,gBAAgB,CAAC,qCAAmC,YAAY,CAAC,SAAW,CAAC,CAAC;gBAC9E,MAAM,CAAC;YACT,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC;gBAClC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;oBAC9C,8BAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC;oBAC5E,GAAG,CAAC,aAAa,CAAC,yBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC9F,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,UAAU,CAAC,4DAA0D,YAAY,CAAC,OAAO,gBAAa;yBAC3F,4BAA0B,kBAAkB,iBAAY,kBAAkB,eAAY,CAAA;wBACtF,qDAAqD,CAAC,CAAC;gBACzE,CAAC;YACH,CAAC;YAED,cAAK,CAAC,IAAI,CAAC,UAAU,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC;YAEhD,gBAAgB,EAAE,CAAC;QACrB,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC;IACH,CAAC;IACH,uBAAC;AAAD,CApCA,AAoCC,CApCqC,sBAAY,GAoCjD;AApCY,4CAAgB","file":"configJson/ConfigureRigTask.js","sourcesContent":["import * as Gulp from 'gulp';\r\nimport { merge } from 'lodash';\r\nimport * as fsx from 'fs-extra';\r\n\r\nimport OdspGulpTask from './../OdspGulpTask';\r\n\r\nimport {\r\n  readConfigFile,\r\n  IConfigJsonResult,\r\n  defaultConfigPath,\r\n  migrateToLatestVersion\r\n} from './index';\r\n\r\nconst UPGRADE_PARAM_NAME: string = 'upgrade';\r\n\r\nexport class ConfigureRigTask extends OdspGulpTask<void> {\r\n  constructor() {\r\n    super('configure-sp-build-rig');\r\n  }\r\n\r\n  public executeTask(gulp: typeof Gulp, completeCallback: (error?: string) => void): void {\r\n    try {\r\n      const configResult: IConfigJsonResult = readConfigFile(this.logVerbose.bind(this));\r\n      if (configResult.missingFile) {\r\n        this.logWarning('Missing config.json file. If this is a non-web project, consider using a non-web build rig ' +\r\n                        'like @microsoft/sp-build-node');\r\n      }\r\n\r\n      if (configResult.readError) {\r\n        completeCallback(`Error reading config.json file: ${configResult.readError}`);\r\n        return;\r\n      }\r\n\r\n      if (!configResult.isLatestVersion) {\r\n        if (this.buildConfig.args[UPGRADE_PARAM_NAME]) {\r\n          migrateToLatestVersion(this.logWarning.bind(this), configResult.configData);\r\n          fsx.writeFileSync(defaultConfigPath, JSON.stringify(configResult.configData, undefined, 2));\r\n        } else {\r\n          this.logWarning(`This project is using an old config.json file version (${configResult.version}). Run the ` +\r\n                          `build again with the --${UPGRADE_PARAM_NAME} (gulp --${UPGRADE_PARAM_NAME}) flag to ` +\r\n                          'upgrade the config.json file to the latest version.');\r\n        }\r\n      }\r\n\r\n      merge(this.properties, configResult.configData);\r\n\r\n      completeCallback();\r\n    } catch (e) {\r\n      completeCallback(e);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}
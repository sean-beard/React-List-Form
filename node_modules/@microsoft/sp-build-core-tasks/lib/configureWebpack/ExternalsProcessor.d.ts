import OdspGulpTask from './../OdspGulpTask';
export interface IExternalProjectMap {
    [name: string]: IExternalProject;
}
export interface IExternalProject {
    /**
     * The ID of the project from the manifest.
     */
    id: string;
    /**
     * The name of the project.
     */
    name: string;
    /**
     * The version of the project from the manifest.
     */
    version: string | undefined;
    /**
     * The failover path, if one exists.
     */
    failoverPath?: string;
}
export interface IDynamicExternalProject extends IExternalProject {
    /**
     * A function to get the failover path given the package's root.
     */
    getFailoverPath?: (projectRootPath: string) => string;
    /**
     * A function to get the version of the package. Return undefined if the package is not a dependency.
     */
    getVersion: (projectRootPath: string) => string | undefined;
}
/**
 * Get an array of a project's externals' names. To be used when creating a webpack configuration.
 */
export declare function getExternalsKeys(gulpTask: OdspGulpTask<any>): string[];
/**
 * Set the linked externals in the task's shared properties object if it isn't already set
 */
export declare function setLinkedExternals(gulpTask: OdspGulpTask<any>): void;
export declare function includeNonStandardExternal(name: string, external: IDynamicExternalProject): void;
export declare function getVersionFunction(packageName: string): (projectRootPath: string) => string | undefined;

{"version":3,"sources":["utilities/Resolve.ts"],"names":[],"mappings":";;AAAA,mCAA+B;AAC/B,2BAA6B;AAE7B,wBAA+B,WAAmB,EAAE,QAAgB;IAClE,IAAI,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,cAAI,CAAC,WAAW,EAAE;YACpC,OAAO,EAAE,QAAQ;YACjB,aAAa,EAAE,UAAC,GAAqB;gBACnC,GAAG,CAAC,IAAI,GAAG,cAAc,CAAC;gBAC1B,MAAM,CAAC,GAAG,CAAC;YACb,CAAC;SACF,CAAC,CAAC,CAAC;IACN,CAAC;IAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACZ,IAAI,CAAC;YACH,oEAAoE;YACpE,IAAM,kBAAkB,GAAqB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC,CAAC;YAC1F,EAAE,CAAC,CAAC,kBAAkB,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC;gBAC5C,MAAM,CAAC,QAAQ,CAAC;YAClB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,EAAE,CAAC;YACX,CAAC;QACH,CAAC;QAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACZ,MAAM,EAAE,CAAC;QACX,CAAC;IACH,CAAC;AACH,CAAC;AAtBD,wCAsBC","file":"utilities/Resolve.js","sourcesContent":["import { sync } from 'resolve';\r\nimport * as path from 'path';\r\n\r\nexport function resolvePackage(packageName: string, rootPath: string): string { // tslint:disable-line:export-name\r\n  try {\r\n    return path.dirname(sync(packageName, {\r\n      basedir: rootPath,\r\n      packageFilter: (pkg: { main: string }): { main: string } => {\r\n        pkg.main = 'package.json';\r\n        return pkg;\r\n      }\r\n    }));\r\n  } catch (e1) {\r\n    try {\r\n      // If we fail, see if we're trying to resolve to the current package\r\n      const currentPackageJson: { name: string } = require(path.join(rootPath, 'package.json'));\r\n      if (currentPackageJson.name === packageName) {\r\n        return rootPath;\r\n      } else {\r\n        throw e1;\r\n      }\r\n    } catch (e2) {\r\n      throw e1;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}
/// <reference types="node" />
/// <reference types="vinyl" />
import * as gulpUtil from 'gulp-util';
export declare function writeStringToFile(content: string, filename?: string): NodeJS.ReadableStream;
export declare function writeStringToGulpUtilFile(content: string, filename?: string): gulpUtil.File;
export declare function getGulpUtilFileStream(file: gulpUtil.File): NodeJS.ReadableStream;
export declare function getShortHash(content: string): string;
export declare function getFullHash(data: any): string;
/**
 * Function for renaming a stream of file(s).
 * @param gulpStream Stream of files to be renamed.
 * @param getFilename Callback for setting the resulting file(s) name.
 * @param filenameCallback Callback for performing operations with the original and final file name.
 */
export declare function rename(gulpStream: NodeJS.ReadWriteStream, getFilename: (originalFilename: string) => string, filenameCallback: (filename: string, originalFilename: string) => void): NodeJS.ReadWriteStream;
/**
 * Function for renaming a stream of file(s) with a hash of the file contents.
 * @param gulpStream Stream of files to be renamed.
 * @param getFilename Callback for setting the resulting file(s) name.
 * @param filenameCallback Callback for performing operations with the original and final file name.
 */
export declare function renameWithHash(gulpStream: NodeJS.ReadWriteStream, getFilename: (hash: string, originalFilename: string) => string, filenameCallback: (filename: string, originalFilename: string) => void): NodeJS.ReadWriteStream;

{"version":3,"file":"language.js","sourceRoot":"../src/","sources":["language.ts"],"names":[],"mappings":";;AAAA,6BAA+C;AAE/C,4DAA4D;AAC5D,IAAI,SAAwB,CAAC;AAE7B;;;;GAIG;AACH;IACE,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;QAC5B,IAAI,GAAG,GAAG,iBAAW,EAAE,CAAC;QACxB,IAAI,GAAG,GAAG,eAAS,EAAE,CAAC;QAEtB,6CAA6C;QAC7C,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,aAAa,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAErD,EAAE,CAAC,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC3B,SAAS,GAAG,aAAa,CAAC;YAC5B,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,IAAI,GAAG,CAAC,CAAC,CAAC;YACnC,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACvD,CAAC;QAED,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;YAC5B,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AAxBD,kCAwBC;AAED;;;;GAIG;AACH,qBAA4B,QAAgB,EAAE,eAAgC;IAAhC,gCAAA,EAAA,uBAAgC;IAC5E,IAAI,GAAG,GAAG,iBAAW,EAAE,CAAC;IAExB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACR,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED,IAAI,GAAG,GAAG,eAAS,EAAE,CAAC;IACtB,6CAA6C;IAC7C,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;QACnD,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,SAAS,GAAG,QAAQ,CAAC;AACvB,CAAC;AAdD,kCAcC","sourcesContent":["import { getDocument, getWindow } from './dom';\r\n\r\n// Default to undefined so that we initialize on first read.\r\nlet _language: string | null;\r\n\r\n/**\r\n * Gets the rtl state of the page (returns true if in rtl.)\r\n *\r\n * @public\r\n */\r\nexport function getLanguage(): string | null {\r\n  if (_language === undefined) {\r\n    let doc = getDocument();\r\n    let win = getWindow();\r\n\r\n    // tslint:disable-next-line:no-string-literal\r\n    if (win && win['localStorage']) {\r\n      let savedLanguage = localStorage.getItem('language');\r\n\r\n      if (savedLanguage !== null) {\r\n        _language = savedLanguage;\r\n      }\r\n    }\r\n\r\n    if (_language === undefined && doc) {\r\n      _language = doc.documentElement.getAttribute('lang');\r\n    }\r\n\r\n    if (_language === undefined) {\r\n      setLanguage('en', false);\r\n    }\r\n  }\r\n\r\n  return _language;\r\n}\r\n\r\n/**\r\n * Sets the rtl state of the page (by adjusting the dir attribute of the html element.)\r\n *\r\n * @public\r\n */\r\nexport function setLanguage(language: string, avoidPersisting: boolean = false): void {\r\n  let doc = getDocument();\r\n\r\n  if (doc) {\r\n    doc.documentElement.setAttribute('lang', language);\r\n  }\r\n\r\n  let win = getWindow();\r\n  // tslint:disable-next-line:no-string-literal\r\n  if (win && win['localStorage'] && !avoidPersisting) {\r\n    localStorage.setItem('language', language);\r\n  }\r\n\r\n  _language = language;\r\n}\r\n"]}
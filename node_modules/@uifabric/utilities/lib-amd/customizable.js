define(["require", "exports", "tslib", "react", "prop-types", "./GlobalSettings"], function (require, exports, tslib_1, React, PropTypes, GlobalSettings_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function customizable(fields) {
        // tslint:disable-next-line:no-shadowed-variable
        return function customizableFactory(ComposedComponent) {
            return _a = (function (_super) {
                    tslib_1.__extends(ComponentWithInjectedProps, _super);
                    function ComponentWithInjectedProps(props, context) {
                        var _this = _super.call(this, props, context) || this;
                        _this._onSettingChanged = _this._onSettingChanged.bind(_this);
                        return _this;
                    }
                    ComponentWithInjectedProps.prototype.componentDidMount = function () {
                        GlobalSettings_1.GlobalSettings.addChangeListener(this._onSettingChanged);
                    };
                    ComponentWithInjectedProps.prototype.componentWillUnmount = function () {
                        GlobalSettings_1.GlobalSettings.removeChangeListener(this._onSettingChanged);
                    };
                    ComponentWithInjectedProps.prototype.render = function () {
                        var defaultProps = {};
                        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {
                            var propName = fields_1[_i];
                            defaultProps[propName] = (this.context.injectedProps) ?
                                this.context.injectedProps[propName] :
                                GlobalSettings_1.GlobalSettings.getValue(propName);
                        }
                        return (React.createElement(ComposedComponent, tslib_1.__assign({}, defaultProps, this.props)));
                    };
                    ComponentWithInjectedProps.prototype._onSettingChanged = function (change) {
                        if (fields.indexOf(change.key) >= 0) {
                            this.forceUpdate();
                        }
                    };
                    return ComponentWithInjectedProps;
                }(React.Component)),
                _a.contextTypes = {
                    injectedProps: PropTypes.object
                },
                _a;
            var _a;
        };
    }
    exports.customizable = customizable;
});
//# sourceMappingURL=customizable.js.map
{"version":3,"file":"scroll.js","sourceRoot":"../src/","sources":["scroll.ts"],"names":[],"mappings":"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","sourcesContent":["import { getDocument } from './dom';\r\nimport * as styles from './scroll.scss';\r\n\r\nlet _scrollbarWidth: number;\r\nlet _bodyScrollDisabledCount = 0;\r\n\r\n/**\r\n * Placing this attribute on scrollable divs optimizes detection to know\r\n * if the div is scrollable or not (given we can avoid expensive operations\r\n * like getComputedStyle.)\r\n *\r\n * @public\r\n */\r\nexport const DATA_IS_SCROLLABLE_ATTRIBUTE = 'data-is-scrollable';\r\n\r\n/**\r\n * Disables the body scrolling.\r\n *\r\n * @public\r\n */\r\nexport function disableBodyScroll(): void {\r\n  let doc = getDocument();\r\n\r\n  if (doc && doc.body && !_bodyScrollDisabledCount) {\r\n    doc.body.classList.add(styles.scrollDisabled);\r\n  }\r\n\r\n  _bodyScrollDisabledCount++;\r\n}\r\n\r\n/**\r\n * Enables the body scrolling.\r\n *\r\n * @public\r\n */\r\nexport function enableBodyScroll(): void {\r\n  if (_bodyScrollDisabledCount > 0) {\r\n    let doc = getDocument();\r\n\r\n    if (doc && doc.body && _bodyScrollDisabledCount === 1) {\r\n      doc.body.classList.remove(styles.scrollDisabled);\r\n    }\r\n\r\n    _bodyScrollDisabledCount--;\r\n  }\r\n}\r\n\r\n/**\r\n * Calculates the width of a scrollbar for the browser/os.\r\n *\r\n * @public\r\n */\r\nexport function getScrollbarWidth(): number {\r\n  if (_scrollbarWidth === undefined) {\r\n    let scrollDiv: HTMLElement = document.createElement('div');\r\n    scrollDiv.style.setProperty('width', '100px');\r\n    scrollDiv.style.setProperty('height', '100px');\r\n    scrollDiv.style.setProperty('overflow', 'scroll');\r\n    scrollDiv.style.setProperty('position', 'absolute');\r\n    scrollDiv.style.setProperty('top', '-9999px');\r\n    document.body.appendChild(scrollDiv);\r\n    // Get the scrollbar width\r\n    _scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n\r\n    // Delete the DIV\r\n    document.body.removeChild(scrollDiv);\r\n  }\r\n\r\n  return _scrollbarWidth;\r\n}\r\n\r\n/**\r\n * Traverses up the DOM for the element with the data-is-scrollable=true attribute, or returns\r\n * document.body.\r\n *\r\n * @public\r\n */\r\nexport function findScrollableParent(startingElement: HTMLElement): HTMLElement | null {\r\n  let el: HTMLElement | null = startingElement;\r\n\r\n  // First do a quick scan for the scrollable attribute.\r\n  while (el && el !== document.body) {\r\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) === 'true') {\r\n      return el;\r\n    }\r\n    el = el.parentElement;\r\n  }\r\n\r\n  // If we haven't found it, the use the slower method: compute styles to evaluate if overflow is set.\r\n  el = startingElement;\r\n\r\n  while (el && el !== document.body) {\r\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) !== 'false') {\r\n      const computedStyles = getComputedStyle(el);\r\n      let overflowY = computedStyles ? computedStyles.getPropertyValue('overflow-y') : '';\r\n\r\n      if (overflowY && (overflowY === 'scroll' || overflowY === 'auto')) {\r\n        return el;\r\n      }\r\n    }\r\n\r\n    el = el.parentElement;\r\n  }\r\n\r\n  // Fall back to window scroll.\r\n  if (!el || el === document.body) {\r\n    el = window as any;\r\n  }\r\n\r\n  return el;\r\n}"]}
{"version":3,"file":"rtl.js","sourceRoot":"../src/","sources":["rtl.ts"],"names":[],"mappings":";;;IAIA,IAAM,qBAAqB,GAAG,OAAO,CAAC;IAEtC,4DAA4D;IAC5D,IAAI,MAA2B,CAAC;IAEhC;;OAEG;IACH;QACE,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YACzB,IAAI,GAAG,GAAG,iBAAW,EAAE,CAAC;YAExB,IAAI,QAAQ,GAAG,wBAAO,CAAC,qBAAqB,CAAC,CAAC;YAE9C,EAAE,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;gBACtB,MAAM,GAAG,QAAQ,KAAK,GAAG,CAAC;YAC5B,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,IAAI,GAAG,CAAC,CAAC,CAAC;gBAChC,MAAM,GAAG,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;YAC7D,CAAC;QACH,CAAC;QAED,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;IAClB,CAAC;IAhBD,wBAgBC;IAED;;OAEG;IACH,gBAAuB,KAAc,EAAE,cAA+B;QAA/B,+BAAA,EAAA,sBAA+B;QACpE,IAAI,GAAG,GAAG,iBAAW,EAAE,CAAC;QACxB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACR,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;QACjE,CAAC;QAED,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACnB,wBAAO,CAAC,qBAAqB,EAAE,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QACpD,CAAC;QAED,MAAM,GAAG,KAAK,CAAC;IACjB,CAAC;IAXD,wBAWC;IAED;;OAEG;IACH,2BAAkC,GAAW;QAC3C,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACb,EAAE,CAAC,CAAC,GAAG,kBAAkB,CAAC,CAAC,CAAC;gBAC1B,GAAG,iBAAiB,CAAC;YACvB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC;gBAClC,GAAG,gBAAgB,CAAC;YACtB,CAAC;QACH,CAAC;QAED,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAVD,8CAUC","sourcesContent":["import { KeyCodes } from './KeyCodes';\r\nimport { getDocument } from './dom';\r\nimport { getItem, setItem } from './sessionStorage';\r\n\r\nconst RTL_LOCAL_STORAGE_KEY = 'isRTL';\r\n\r\n// Default to undefined so that we initialize on first read.\r\nlet _isRTL: boolean | undefined;\r\n\r\n/**\r\n * Gets the rtl state of the page (returns true if in rtl.)\r\n */\r\nexport function getRTL(): boolean {\r\n  if (_isRTL === undefined) {\r\n    let doc = getDocument();\r\n\r\n    let savedRTL = getItem(RTL_LOCAL_STORAGE_KEY);\r\n\r\n    if (savedRTL !== null) {\r\n      _isRTL = savedRTL === '1';\r\n    }\r\n\r\n    if (_isRTL === undefined && doc) {\r\n      _isRTL = doc.documentElement.getAttribute('dir') === 'rtl';\r\n    }\r\n  }\r\n\r\n  return !!_isRTL;\r\n}\r\n\r\n/**\r\n * Sets the rtl state of the page (by adjusting the dir attribute of the html element.)\r\n */\r\nexport function setRTL(isRTL: boolean, persistSetting: boolean = false): void {\r\n  let doc = getDocument();\r\n  if (doc) {\r\n    doc.documentElement.setAttribute('dir', isRTL ? 'rtl' : 'ltr');\r\n  }\r\n\r\n  if (persistSetting) {\r\n    setItem(RTL_LOCAL_STORAGE_KEY, isRTL ? '1' : '0');\r\n  }\r\n\r\n  _isRTL = isRTL;\r\n}\r\n\r\n/**\r\n * Returns the given key, but flips right/left arrows if necessary.\r\n */\r\nexport function getRTLSafeKeyCode(key: number): number {\r\n  if (getRTL()) {\r\n    if (key === KeyCodes.left) {\r\n      key = KeyCodes.right;\r\n    } else if (key === KeyCodes.right) {\r\n      key = KeyCodes.left;\r\n    }\r\n  }\r\n\r\n  return key;\r\n}"]}
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Glamor = require("glamor");
var rtl_css_js_1 = require("rtl-css-js");
var rtl_1 = require("@uifabric/utilities/lib/rtl");
function _initializeGlamor() {
    // force speedy.
    // tslint:disable-next-line:no-string-literal no-any
    if (!Glamor['styleSheet'] || !Glamor['styleSheet'].isSpeedy) {
        // tslint:disable-next-line:no-string-literal no-any
        Glamor['speedy'](true);
    }
    // tslint:disable-next-line:no-string-literal no-any
    Glamor['plugins'].add(function (_a) {
        var selector = _a.selector, style = _a.style;
        return ({
            selector: selector,
            style: rtl_1.getRTL() ? rtl_css_js_1.default(style) : style
        });
    });
}
_initializeGlamor();
/**
 * Defines a :before pseudo-selector scoped style object for the given raw style.
 */
function before(style) {
    return Glamor.before(style);
}
exports.before = before;
/**
 * Defines a :after pseudo-selector scoped style object for the given raw style.
 */
function after(style) {
    return Glamor.after(style);
}
exports.after = after;
/**
 * Defines a style under a rule which is prefixed by the given selector.
 */
function parent(selector, style) {
    return Glamor.parent(selector, style);
}
exports.parent = parent;
/**
 * Registers a global rule. Be aware: registering global rules are not scoped;
 * Two versions of a global rule will colide with each other.
 */
function insertGlobal(selector, style) {
    Glamor.insertGlobal(selector, style);
}
exports.insertGlobal = insertGlobal;
/**
 * Registers a font face.
 */
function fontFace(font) {
    return Glamor.fontFace(font);
}
exports.fontFace = fontFace;
/**
 * Register a keyframe definition and returns the unique name to be used for
 * the animation name.
 */
function keyframes(timeline) {
    return Glamor.keyframes(timeline);
}
exports.keyframes = keyframes;
//# sourceMappingURL=glamorExports.js.map
{"version":3,"file":"IconClassNames.js","sourceRoot":"../src/","sources":["classNames/IconClassNames.ts"],"names":[],"mappings":";;;IAKA;;OAEG;IACU,QAAA,cAAc,GAAgD,EAAE,CAAC;4BAGnE,QAAQ;QACjB,IAAI,SAAiB,CAAC;QAEtB,MAAM,CAAC,cAAc,CAAC,sBAAc,EAAE,QAAQ,EAAE;YAC9C,GAAG,EAAE;gBACH,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;oBAC5B,SAAS,GAAG,mBAAW,CACrB,yBAAiB,CAAC,IAAI,EACtB;wBACE,SAAS,EAAE;4BACT,kCAAkC;4BAClC,OAAO,EAAE,OAAK,iBAAiB,CAAC,QAAQ,CAAC,OAAG;yBAC7C;qBACF,CACF,CAAC,QAAQ,EAAE,CAAC;gBACf,CAAC;gBAED,MAAM,CAAC,SAAS,CAAC;YACnB,CAAC;YACD,UAAU,EAAE,IAAI;YAChB,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;IAvBD,iCAAiC;IACjC,GAAG,CAAC,CAAC,IAAM,QAAQ,IAAI,iBAAS,CAAC;gBAAtB,QAAQ;KAsBlB","sourcesContent":["import { IconCodes, DefaultFontStyles } from '../styles/index';\r\nimport {\r\n  mergeStyles\r\n} from '../utilities/index';\r\n\r\n/**\r\n * All class names for all Fabric icons.\r\n */\r\nexport const IconClassNames: {[key in keyof typeof IconCodes]?: string } = {};\r\n\r\n// tslint:disable-next-line:forin\r\nfor (const iconName in IconCodes) {\r\n  let className: string;\r\n\r\n  Object.defineProperty(IconClassNames, iconName, {\r\n    get: (): string => {\r\n      if (className === undefined) {\r\n        className = mergeStyles(\r\n          DefaultFontStyles.icon,\r\n          {\r\n            ':before': {\r\n              // tslint:disable-next-line:no-any\r\n              content: `\"${(IconCodes as any)[iconName]}\"`\r\n            }\r\n          }\r\n        ).toString();\r\n      }\r\n\r\n      return className;\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n}\r\n"]}
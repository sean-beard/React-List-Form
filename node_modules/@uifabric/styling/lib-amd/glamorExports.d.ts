import * as Glamor from 'glamor';
import { IRawStyle, IProcessedStyle } from './interfaces/index';
/**
 * Defines a :before pseudo-selector scoped style object for the given raw style.
 */
export declare function before(style: IRawStyle): IProcessedStyle;
/**
 * Defines a :after pseudo-selector scoped style object for the given raw style.
 */
export declare function after(style: IRawStyle): IProcessedStyle;
/**
 * Defines a style under a rule which is prefixed by the given selector.
 */
export declare function parent(selector: string, style: IRawStyle): IProcessedStyle;
/**
 * Registers a global rule. Be aware: registering global rules are not scoped;
 * Two versions of a global rule will colide with each other.
 */
export declare function insertGlobal(selector: string, style: IRawStyle): void;
/**
 * Registers a font face.
 */
export declare function fontFace(font: Glamor.FontProperties): string;
/**
 * Register a keyframe definition and returns the unique name to be used for
 * the animation name.
 */
export declare function keyframes(timeline: Glamor.TimeLine): string;

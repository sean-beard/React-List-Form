{
  "_args": [
    [
      {
        "raw": "inline-style-prefixer@^3.0.6",
        "scope": null,
        "escapedName": "inline-style-prefixer",
        "name": "inline-style-prefixer",
        "rawSpec": "^3.0.6",
        "spec": ">=3.0.6 <4.0.0",
        "type": "range"
      },
      "E:\\Development\\React-List-Form\\node_modules\\glamor"
    ]
  ],
  "_from": "inline-style-prefixer@>=3.0.6 <4.0.0",
  "_id": "inline-style-prefixer@3.0.7",
  "_inCache": true,
  "_location": "/inline-style-prefixer",
  "_nodeVersion": "8.2.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/inline-style-prefixer-3.0.7.tgz_1501485761675_0.4717684749048203"
  },
  "_npmUser": {
    "name": "rofrischmann",
    "email": "robin@rofrischmann.de"
  },
  "_npmVersion": "3.7.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "inline-style-prefixer@^3.0.6",
    "scope": null,
    "escapedName": "inline-style-prefixer",
    "name": "inline-style-prefixer",
    "rawSpec": "^3.0.6",
    "spec": ">=3.0.6 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/glamor"
  ],
  "_resolved": "https://registry.npmjs.org/inline-style-prefixer/-/inline-style-prefixer-3.0.7.tgz",
  "_shasum": "0ccc92e5902fe6e0d28d975c4258443f880615f8",
  "_shrinkwrap": null,
  "_spec": "inline-style-prefixer@^3.0.6",
  "_where": "E:\\Development\\React-List-Form\\node_modules\\glamor",
  "author": {
    "name": "Robin Frischmann"
  },
  "bugs": {
    "url": "https://github.com/rofrischmann/inline-style-prefixer/issues"
  },
  "dependencies": {
    "bowser": "^1.6.0",
    "css-in-js-utils": "^1.0.3"
  },
  "description": "Run-time Autoprefixer for JavaScript style objects",
  "devDependencies": {
    "babel": "^6.5.2",
    "babel-cli": "^6.6.0",
    "babel-core": "^6.6.0",
    "babel-eslint": "^7.1.1",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-class-properties": "^6.9.1",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-es2015-rollup": "^1.1.1",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-0": "^6.5.0",
    "caniuse-api": "^2.0.0",
    "chai": "^3.2.0",
    "codeclimate-test-reporter": "^0.1.1",
    "cross-env": "^1.0.8",
    "eslint": "^3.14.0",
    "eslint-config-airbnb": "^14.0.0",
    "eslint-plugin-flowtype": "^2.30.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^3.0.2",
    "eslint-plugin-react": "^6.9.0",
    "flow-bin": "^0.38.0",
    "gh-pages": "^0.12.0",
    "gitbook": "^3.2.2",
    "gitbook-cli": "^2.3.0",
    "istanbul": "1.0.0-alpha.2",
    "mocha": "^2.4.5",
    "prettier": "^1.3.1",
    "rimraf": "^2.4.2",
    "rollup": "0.26.3",
    "rollup-plugin-babel": "2.4.0",
    "rollup-plugin-commonjs": "2.2.1",
    "rollup-plugin-node-resolve": "1.5.0",
    "rollup-plugin-uglify": "0.3.1"
  },
  "directories": {},
  "dist": {
    "shasum": "0ccc92e5902fe6e0d28d975c4258443f880615f8",
    "tarball": "https://registry.npmjs.org/inline-style-prefixer/-/inline-style-prefixer-3.0.7.tgz"
  },
  "files": [
    "LICENSE",
    "README.md",
    "dist/",
    "static/",
    "generator/",
    "dynamic/",
    "utils/"
  ],
  "gitHead": "54783ddbd3a75334040366ba01c98050213355f4",
  "homepage": "https://github.com/rofrischmann/inline-style-prefixer#readme",
  "keywords": [
    "react",
    "react styling",
    "prefixer",
    "inline styles",
    "autoprefixer",
    "vendor prefix",
    "userAgent"
  ],
  "license": "MIT",
  "main": "dynamic/index.js",
  "maintainers": [
    {
      "name": "rofrischmann",
      "email": "robin@rofrischmann.de"
    }
  ],
  "name": "inline-style-prefixer",
  "optionalDependencies": {},
  "readme": "# Autoprefixer for Style Objects\n\n**inline-style-prefixer** adds required **vendor prefixes** to your style object. It only adds prefixes if they're actually required by evaluating the browser's `userAgent` against data from [caniuse.com](http://caniuse.com/).\n<br>\n\nAlternatively it ships a static version that adds all available vendor prefixes.\n\n[![Build Status](https://travis-ci.org/rofrischmann/inline-style-prefixer.svg)](https://travis-ci.org/rofrischmann/inline-style-prefixer)\n[![Test Coverage](https://codeclimate.com/github/rofrischmann/inline-style-prefixer/badges/coverage.svg)](https://codeclimate.com/github/rofrischmann/inline-style-prefixer/coverage)\n[![npm downloads](https://img.shields.io/npm/dm/inline-style-prefixer.svg)](https://img.shields.io/npm/dm/inline-style-prefixer.svg)\n![Dependencies](https://david-dm.org/rofrischmann/inline-style-prefixer.svg)\n\n## Installation\n```sh\nyarn add inline-style-prefixer\n```\nIf you're still using npm, you may run `npm i --save inline-style-prefixer`.\nWe also provide [UMD](https://github.com/umdjs/umd) builds for each package in the `dist` folder. You can easily use them via [unpkg](https://unpkg.com/).\n```HTML\n<!-- Unminified versions -->\n<script src=\"https://unpkg.com/inline-style-prefixer@3.0.1/dist/inline-style-prefixer.js\"></script>\n<script src=\"https://unpkg.com/inline-style-prefixer@3.0.1/dist/inline-style-prefix-all.js\"></script>\n<!-- Minified versions -->\n<script src=\"https://unpkg.com/inline-style-prefixer@3.0.1/dist/inline-style-prefixer.min.js\"></script>\n<script src=\"https://unpkg.com/inline-style-prefixer@3.0.1/dist/inline-style-prefix-all.min.js\"></script>\n```\n\n## Browser Support\nIt supports all major browsers with the following versions. For other, unsupported browses, we automatically use a fallback.\n* Chrome: 46+\n* Android (Chrome): 46+\n* Android (Stock Browser): 4+\n* Android (UC): 9+\n* Firefox: 40+\n* Safari: 8+\n* iOS (Safari): 8+\n* Opera: 16+\n* Opera (Mini): 12+\n* IE: 11+\n* IE (Mobile): 11+\n* Edge: 12+\n\nIt will **only** add prefixes if a property still needs them in one of the above mentioned versions.<br> Therefore, e.g. `border-radius` will not be prefixed at all.\n\n> **Need to support legacy browser versions?**<br>\nDon't worry - we got you covered. Check [this guide](https://github.com/rofrischmann/inline-style-prefixer/blob/master/docs/guides/CustomPrefixer.md).\n\n\n## Dynamic vs. Static\nBefore using the prefixer, you have to decide which one you want to use. We ship two different versions - a dynamic and a static version.\n\nThe **dynamic prefixer** evaluates the `userAgent` to identify the browser environment. Using this technique, we are able to only add the bare minimum of prefixes. Browser detection is quite accurate (~90% correctness), but yet also  \texpensive which is why the package is almost 3 times as big as the static version.\n\n> It uses the static prefixer as a fallback.\n\n![Gzipped Size](https://img.shields.io/badge/gzipped-8.50kb-brightgreen.svg)\n\n```javascript\nimport Prefixer from 'inline-style-prefixer'\n\nconst style = {\n  transition: '200ms all linear',\n  userSelect: 'none',\n  boxSizing: 'border-box',\n  display: 'flex',\n  color: 'blue'\n}\n\nconst prefixer = new Prefixer()\nconst prefixedStyle = prefixer.prefix(style)\n\n// prefixedStyle === output\nconst output = {\n  transition: '200ms all linear',\n  WebkitUserSelect: 'none',\n  boxSizing: 'border-box',\n  display: '-webkit-flex',\n  color: 'blue'\n}\n```\n\nThe **static prefixer**, on the other hand, adds all required prefixes according the above mentioned browser versions. Removing the browser detection makes it both smaller and fast, but also drastically increases the output.\n\n![Gzipped Size](https://img.shields.io/badge/gzipped-2.70kb-brightgreen.svg)\n\n```javascript\nimport prefixAll from 'inline-style-prefixer/static'\n\nconst style = {\n  transition: '200ms all linear',\n  boxSizing: 'border-box',\n  display: 'flex',\n  color: 'blue'\n}\n\nconst prefixedStyle = prefixAll(style)\n\n// prefixedStyle === output\nconst output = {\n  WebkitTransition: '200ms all linear',\n  transition: '200ms all linear',\n  MozBoxSizing: 'border-box',\n  boxSizing: 'border-box',\n  display: [ '-webkit-box', '-moz-box', '-ms-flexbox', '-webkit-flex', 'flex' ]\n  color: 'blue'\n}\n```\n\n## Usage with TypeScript\nYou can use TypeScript definition from [DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/inline-style-prefixer) using [@types/inline-style-prefixer](https://www.npmjs.com/package/@types/inline-style-prefixer)\n\n```sh\nnpm install --save @types/inline-style-prefixer\n```\n\nThen import in your code:\n\n```typescript\nimport prefixAll = require('inline-style-prefixer/static');\n\nconst prefixedStyle = prefixAll({\n  transition: '200ms all linear',\n  boxSizing: 'border-box',\n  display: 'flex',\n  color: 'blue'\n});\n```\n\n## Documentation\nIf you got any issue using this prefixer, please first check the FAQ's. Most cases are already covered and provide a solid solution.\n\n* [Usage Guides](https://inline-style-prefixer.js.org/docs/UsageGuides.html)\n* [Data Reference](https://inline-style-prefixer.js.org/docs/DataReference.html)\n* [API Reference](https://inline-style-prefixer.js.org/docs/API.html)\n* [FAQ](https://inline-style-prefixer.js.org/docs/FAQ.html)\n\n## Community\nHere are some popular users of this library:\n\n* [Aphrodite](https://github.com/Khan/aphrodite)\n* [Fela](https://github.com/rofrischmann/fela)\n* [Glamor](https://github.com/threepointone/glamor)\n* [Material UI](https://github.com/callemall/material-ui)\n* [Radium](https://github.com/FormidableLabs/radium)\n* [react-native-web](https://github.com/necolas/react-native-web)\n* [styled-components](https://github.com/styled-components/styled-components)\n* [Styletron](https://github.com/rtsao/styletron)\n\n> PS: Feel free to add your solution!\n\n## Support\nJoin us on [Gitter](https://gitter.im/rofrischmann/fela). We highly appreciate any contribution.<br>\nWe also love to get feedback.\n\n## License\n**inline-style-prefixer** is licensed under the [MIT License](http://opensource.org/licenses/MIT).<br>\nDocumentation is licensed under [Creative Common License](http://creativecommons.org/licenses/by/4.0/).<br>\nCreated with ♥ by [@rofrischmann](http://rofrischmann.de) and all contributors.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rofrischmann/inline-style-prefixer.git"
  },
  "scripts": {
    "babel": "babel modules/ --out-dir .",
    "build": "npm run check && mkdir dist && npm run generate && npm run babel && npm run dist",
    "check": "npm run clean && npm run lint && npm test && npm run flow",
    "clean": "rimraf static dynamic generator utils dist coverage",
    "dist": "cross-env NODE_ENV=production babel-node buildPackage && cross-env NODE_ENV=development babel-node buildPackage",
    "docs": "gitbook install && gitbook build && gh-pages -d _book",
    "flow": "flow",
    "generate": "babel-node generateDefaultData",
    "lint": "eslint .",
    "release": "npm run build && npm publish && npm run docs",
    "test": "istanbul cover node_modules/mocha/bin/_mocha -- --opts test/_setup/mocha.opts"
  },
  "version": "3.0.7"
}

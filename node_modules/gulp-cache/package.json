{
  "_args": [
    [
      {
        "raw": "gulp-cache@~0.4.5",
        "scope": null,
        "escapedName": "gulp-cache",
        "name": "gulp-cache",
        "rawSpec": "~0.4.5",
        "spec": ">=0.4.5 <0.5.0",
        "type": "range"
      },
      "E:\\Development\\React-List-Form\\node_modules\\@microsoft\\gulp-core-build-typescript"
    ]
  ],
  "_from": "gulp-cache@>=0.4.5 <0.5.0",
  "_id": "gulp-cache@0.4.6",
  "_inCache": true,
  "_location": "/gulp-cache",
  "_nodeVersion": "6.9.4",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/gulp-cache-0.4.6.tgz_1488483054196_0.7501307602506131"
  },
  "_npmUser": {
    "name": "jgable",
    "email": "jacob.gable@gmail.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {
    "clone": "1.0.2",
    "clone-stats": "0.0.1",
    "core-util-is": "1.0.2",
    "inherits": "2.0.3",
    "process-nextick-args": "1.0.7",
    "replace-ext": "0.0.1",
    "safe-buffer": "5.1.1",
    "util-deprecate": "1.0.2"
  },
  "_requested": {
    "raw": "gulp-cache@~0.4.5",
    "scope": null,
    "escapedName": "gulp-cache",
    "name": "gulp-cache",
    "rawSpec": "~0.4.5",
    "spec": ">=0.4.5 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@microsoft/gulp-core-build-typescript"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-cache/-/gulp-cache-0.4.6.tgz",
  "_shasum": "2d03b52db4f6a553ae1d5bef01e483e907e9f796",
  "_shrinkwrap": null,
  "_spec": "gulp-cache@~0.4.5",
  "_where": "E:\\Development\\React-List-Form\\node_modules\\@microsoft\\gulp-core-build-typescript",
  "author": {
    "name": "Jacob Gable",
    "email": "jacob.gable@gmail.com",
    "url": "http://jacobgable.com"
  },
  "bugs": {
    "url": "https://github.com/jgable/gulp-cache/issues"
  },
  "contributors": [
    {
      "name": "Tyler Akins",
      "email": "fidian@rumkin.com",
      "url": "https://github.com/fidian"
    },
    {
      "name": "Shinnosuke Watanabe",
      "email": "snnskwtnb@gmail.com",
      "url": "https://github.com/shinnn"
    }
  ],
  "dependencies": {
    "bluebird": "^3.0.5",
    "cache-swap": "^0.3.0",
    "gulp-util": "^3.0.7",
    "object-assign": "^4.0.1",
    "object.omit": "^2.0.0",
    "object.pick": "^1.1.1",
    "readable-stream": "^2.0.4",
    "try-json-parse": "^0.1.1",
    "vinyl": "^1.1.0"
  },
  "description": "A cache proxy plugin for Gulp",
  "devDependencies": {
    "@shinnn/eslint-config-node-legacy": "^1.0.0",
    "eslint": "^1.10.2",
    "istanbul": "^0.4.1",
    "lodash": "^4.1.0",
    "mocha": "^2.3.4",
    "should": "^8.2.1",
    "sinon": "^1.17.2",
    "through2": "^2.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "2d03b52db4f6a553ae1d5bef01e483e907e9f796",
    "tarball": "https://registry.npmjs.org/gulp-cache/-/gulp-cache-0.4.6.tgz"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "gitHead": "d9df16c3d20274845051a29d2e24143c95f2d9c8",
  "homepage": "https://github.com/jgable/gulp-cache#readme",
  "keywords": [
    "gulpplugin",
    "gulp",
    "cache"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "jgable",
      "email": "jacob.gable@gmail.com"
    },
    {
      "name": "shinnn",
      "email": "snnskwtnb@gmail.com"
    }
  ],
  "name": "gulp-cache",
  "optionalDependencies": {},
  "readme": "# gulp-cache\n\n[![NPM version](https://img.shields.io/npm/v/gulp-cache.svg)](https://www.npmjs.com/package/gulp-cache)\n[![status](https://travis-ci.org/jgable/gulp-cache.svg?branch=master)](https://travis-ci.org/jgable/gulp-cache)\n[![Coverage Status](https://img.shields.io/coveralls/jgable/gulp-cache.svg)](https://coveralls.io/r/jgable/gulp-cache)\n[![Dependency Status](https://img.shields.io/david/jgable/gulp-cache.svg)](https://david-dm.org/jgable/gulp-cache)\n[![devDependency Status](https://img.shields.io/david/dev/jgable/gulp-cache.svg)](https://david-dm.org/jgable/gulp-cache#info=devDependencies)\n\nA temp file based caching proxy task for [gulp](http://gulpjs.com/).\n\n## Usage\n\n```javascript\nvar fs = require('fs');\n\nvar gulp = require('gulp');\nvar jshint = require('gulp-jshint');\nvar cache = require('gulp-cache');\n\ngulp.task('lint', function() {\n  gulp.src('./lib/*.js')\n    .pipe(cache(jshint('.jshintrc'), {\n      key: makeHashKey,\n      // What on the result indicates it was successful\n      success: function (jshintedFile) {\n        return jshintedFile.jshint.success;\n      },\n      // What to store as the result of the successful action\n      value: function(jshintedFile) {\n        // Will be extended onto the file object on a cache hit next time task is ran\n        return {\n          jshint: jshintedFile.jshint\n        };\n      }\n    }))\n    .pipe(jshint.reporter('default'));\n});\n\nvar jsHintVersion = '2.4.1',\n  jshintOptions = fs.readFileSync('.jshintrc');\nfunction makeHashKey(file) {\n  // Key off the file contents, jshint version and options\n  return [file.contents.toString('utf8'), jshintVersion, jshintOptions].join('');\n}\n```\n\n## Clearing the cache\n\nIf you find yourself needing to clear the cache, there is a handy dandy `cache.clearAll()` method:\n\n```js\nvar cache = require('gulp-cache');\n\ngulp.task('clear', function (done) {\n  return cache.clearAll(done);\n});\n```\n\nYou can then run it with `gulp clear`.\n\n## Options\n\n#### `fileCache`\n\n> [Optional] Where to store the cache objects\n\n- Defaults to `new Cache({ cacheDirName: 'gulp-cache' })`\n\n- Create your own with `new cache.Cache({ cacheDirName: 'custom-cache' })`\n\n#### `name`\n\n> [Optional] The name of the bucket which stores the cached objects\n\n- Defaults to `default`\n\n#### `key`\n\n> [Optional] What to use to determine the uniqueness of an input file for this task.\n\n- Can return a string or a promise that resolves to a string.  Optionally, can accept a callback parameter for idiomatic node style asynchronous operations.  \n\n- The result of this method is converted to a unique MD5 hash automatically; no need to do this yourself.\n\n- Defaults to `file.contents` if a Buffer, or `undefined` if a Stream.\n\n#### `success`\n\n> [Optional] How to determine if the resulting file was successful.\n\n- Must return a truthy value that is used to determine whether to cache the result of the task.\n\n- Defaults to true, so any task results will be cached.\n\n#### `value`\n\n> [Optional] What to store as the cached result of the task.\n\n- Can be a function that returns an Object or a promise that resolves to an Object.  Optionally, can accept a callback for idiomatic node style asynchronous operations.\n\n- Can also be set to a string that will be picked (using `_.pick`) of the task result file.\n\n- The result of this method is run through `JSON.stringify` and stored in a temp file for later retrieval.\n\n- Defaults to `'contents'` which will grab the resulting file.contents and store them as a string.\n\n## License\n\n[The MIT License (MIT)](./LICENSE)\n\nCopyright (c) 2014 - 2015 [Jacob Gable](http://jacobgable.com)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jgable/gulp-cache.git"
  },
  "scripts": {
    "coverage": "istanbul cover _mocha test.js",
    "pretest": "eslint --config @shinnn/node-legacy --rule 'no-underscore-dangle: 0' --rule 'no-warning-comments: 0' index.js lib test.js",
    "test": "_mocha test.js"
  },
  "version": "0.4.6"
}
